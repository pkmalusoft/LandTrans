using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Entity;
using System.IO;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using LTMSV2.Models;
using LTMSV2.DAL;

namespace LTMSV2.Controllers
{
    [SessionExpireFilter]
    public class CompanyMasterController : Controller
    {
        Entities1 db = new Entities1();

        public ActionResult Index()
        {
            //List<ComapanyVM> lst = (from a in db.AcCompanies join cnt in db.CountryMasters on a.CountryID equals cnt.CountryID join t2 in db.CityMasters on a.CityID equals t2.CityID join t3 in db.CurrencyMasters on a.CurrencyID equals t3.CurrencyID join t4 in db.LocationMasters on a.LocationID equals t4.LocationID select new ComapanyVM {AcCompany=a.AcCompany1,AcCompanyID=a.AcCompanyID,Country=cnt.CountryName,City=t2.City,Currency=t3.CurrencyName, LocationID=t4.LocationID}).ToList();
            List<ComapanyVM> lst = (from a in db.AcCompanies join t3 in db.CurrencyMasters on a.CurrencyID equals t3.CurrencyID select new ComapanyVM { AcCompany = a.AcCompany1, AcCompanyID = a.AcCompanyID, CountryName=a.CountryName, CityName=a.CityName, Currency = t3.CurrencyName, LocationName =a.LocationName}).ToList();



            return View(lst);
        }

        //
        // GET: /CompanyMaster/Details/5

        public ActionResult Details(int id = 0)
        {
            AcCompany accompany = db.AcCompanies.Find(id);
            if (accompany == null)
            {
                return HttpNotFound();
            }
            return View(accompany);
        }

        //
        // GET: /CompanyMaster/Create

        public ActionResult Create()
        {
            //ViewBag.city = db.CityMasters.ToList();
          
            //ViewBag.country = db.CountryMasters.ToList();
            ViewBag.Designations = db.Designations.ToList();
            //ViewBag.Location = db.LocationMasters.ToList();
            ViewBag.Currency = db.CurrencyMasters.ToList();
            ComapanyVM v = new ComapanyVM();
            v.LogoFileName = "defaultlogo.png";
            v.LogoFilPath = "/UploadFiles/" + v.LogoFileName;
            return View(v);
        }

        //
        // POST: /CompanyMaster/Create

        [HttpPost]
     
        public ActionResult Create(ComapanyVM v)
        {
            if (ModelState.IsValid)
            {
                AcCompany ob = new AcCompany();


                int max = (from d in db.AcCompanies orderby d.AcCompanyID descending select d.AcCompanyID).FirstOrDefault();

              
                    ob.AcCompanyID = max+1;
                    ob.AcCompany1 = v.AcCompany;
                    ob.Address1 = v.Address1;
                    ob.Address2 = v.Address2;
                    ob.Address3 = v.Address3;
                    //ob.CountryID = 1;// v.CountryID;
                    //ob.CityID = 19; // v.CityID;
                    //ob.LocationID = 7; // v.LocationID;
                    ob.CountryName = v.CountryName;
                    ob.LocationName = v.LocationName;
                    ob.CityName = v.CityName;
                ob.CurrencyID = v.CurrencyID;
                    ob.DesignationID = v.DesignationID;
                    ob.KeyPerson = v.KeyPerson;
                    ob.Phone = v.Phone;
                    //ob.PhoneNo1 = v.PhoneNo1;
                    //ob.PhoneNo2 = v.PhoneNo2;
                    //ob.PhoneNo3 = v.PhoneNo3;
                    //ob.PhoneNo4 = v.PhoneNo4;
                    ob.MobileNo1 = v.Mobile1;
                    ob.MobileNo2 = v.Mobile2;
                    ob.Website = v.website;
                    ob.EMail = v.EMail;
                    
                    ob.CompanyPrefix = v.CompanyPrefix;
                    ob.IsAWBAutoGenrated = v.IsAWBAutoGenerated;
                    if (v.IsAWBAutoGenerated == true)
                    {
                        ob.AWBFormat = v.AWBFormat;
                    }
                    else
                    {
                        ob.AWBFormat = "";
                    }

                ob.InvoicePrefix = v.InvoicePrefix;
                ob.InvoiceFormat = v.InvoiceFormat;
                
                if (v.LogoFileName == "")
                    ob.LogoFileName = "defaultlogo.png";
                else
                    ob.LogoFileName = v.LogoFileName;

                
                db.AcCompanies.Add(ob);
                db.SaveChanges();
                TempData["SuccessMsg"] = "You have successfully added Company.";
                return RedirectToAction("Index");
            }
            return View(v);
        }

        //
        // GET: /CompanyMaster/Edit/5

        public ActionResult Edit(int id = 0)
        {
            AcCompany accompany = db.AcCompanies.Find(id);

            //ViewBag.city = db.CityMasters.ToList().Where(x=>x.CountryID==accompany.CountryID);
         
            //ViewBag.country = db.CountryMasters.ToList();
            ViewBag.Designations = db.Designations.ToList();
            //ViewBag.Location =db.LocationMasters.ToList().Where(x=>x.CityID==accompany.CityID);
            ViewBag.Currency = db.CurrencyMasters.ToList();
            
          
            ComapanyVM v = new ComapanyVM();
            if (accompany == null)
            {
                return HttpNotFound();
            }
            else
            {
                v.AcCompanyID = accompany.AcCompanyID;
                v.AcCompany = accompany.AcCompany1;
                v.Address1 = accompany.Address1;
                v.Address2 = accompany.Address2;
                v.Address3 = accompany.Address3;
                v.CountryName = accompany.CountryName;
                v.LocationName = accompany.LocationName;
                v.CityName =accompany.CityName;
                //v.CountryID = 1; // accompany.CountryID.Value;            
                //v.CityID = 19; // accompany.CityID.Value;
                //v.LocationID = 7;// accompany.LocationID.Value;
                v.CurrencyID = accompany.CurrencyID.Value;
                if (accompany.DesignationID != null)
                {
                    v.DesignationID = accompany.DesignationID.Value;
                }
                v.KeyPerson = accompany.KeyPerson;
                v.Phone = accompany.Phone;
                //v.PhoneNo1 = accompany.PhoneNo1;
                //v.PhoneNo2 = accompany.PhoneNo2;
                //v.PhoneNo3 = accompany.PhoneNo3;
                //v.PhoneNo4 = accompany.PhoneNo4;
                v.Mobile1 = accompany.MobileNo1;
                v.Mobile2 = accompany.MobileNo2;
                v.EMail = accompany.EMail;
                v.website = accompany.Website;
                v.CompanyPrefix = accompany.CompanyPrefix;
                v.InvoicePrefix = accompany.InvoicePrefix;
                v.InvoiceFormat = accompany.InvoiceFormat;

                if (accompany.IsAWBAutoGenrated != null)
                {
                    v.IsAWBAutoGenerated = accompany.IsAWBAutoGenrated.Value;
                }
                else
                {
                    v.IsAWBAutoGenerated = false;
                }
                v.AWBFormat = accompany.AWBFormat;
                if (accompany.LogoFileName == "" || accompany.LogoFileName==null)
                    v.LogoFileName = "defaultlogo.png";
                else                
                    v.LogoFileName = accompany.LogoFileName;

                v.LogoFilPath = "/UploadFiles/" + v.LogoFileName;
            }
         
            return View(v);
        }

        //
        // POST: /CompanyMaster/Edit/5

        [HttpPost]
       
        public ActionResult Edit(ComapanyVM v)
        {

            AcCompany ob = new AcCompany();
            ob = db.AcCompanies.Find(v.AcCompanyID);

            //int max = (from d in db.AcCompanies orderby d.AcCompanyID descending select d.AcCompanyID).FirstOrDefault();


            //ob.AcCompanyID = v.AcCompanyID;
            ob.AcCompany1 = v.AcCompany;
            ob.Address1 = v.Address1;
            ob.Address2 = v.Address2;
            ob.Address3 = v.Address3;
            //ob.CountryID = 1; // v.CountryID;
            //ob.CityID = 19; // v.CityID;
            //ob.LocationID = 7; // v.LocationID;
            ob.CountryName = v.CountryName;
            ob.CityName = v.CityName;
            ob.LocationName = v.LocationName;
            ob.CurrencyID = v.CurrencyID;
            ob.DesignationID = v.DesignationID;
            ob.KeyPerson = v.KeyPerson;
            ob.Phone = v.Phone;
            //ob.PhoneNo1 = v.PhoneNo1;
            //ob.PhoneNo2 = v.PhoneNo2;
            //ob.PhoneNo3 = v.PhoneNo3;
            //ob.PhoneNo4 = v.PhoneNo4;
            ob.MobileNo1 = v.Mobile1;
            ob.MobileNo2 = v.Mobile2;
            ob.Website = v.website;
            ob.EMail = v.EMail;
            ob.CompanyPrefix = v.CompanyPrefix;
            ob.InvoicePrefix = v.InvoicePrefix;
            ob.InvoiceFormat = v.InvoiceFormat;
            ob.IsAWBAutoGenrated = v.IsAWBAutoGenerated;

            if (v.LogoFileName == "")
                ob.LogoFileName = "defaultlogo.png";
            else
            {
                if (Session["CompanyLogoByte"] != null)
                {
                    ob.CompanyLogo = (byte[])(Session["CompanyLogoByte"]);
                }
                ob.LogoFileName = v.LogoFileName;

            }

            

            if (v.IsAWBAutoGenerated == true)
            {
                ob.AWBFormat = v.AWBFormat;
            }
            else
            {
                ob.AWBFormat = "";
            }

            if (ModelState.IsValid)
            {
                db.Entry(ob).State = EntityState.Modified;
                db.SaveChanges();
                TempData["SuccessMsg"] = "You have successfully Updated Company.";
                return RedirectToAction("Index");
            }

            return View();
        }

        //
        // GET: /CompanyMaster/Delete/5

      
        public ActionResult DeleteConfirmed(int id)
        {
            AcCompany accompany = db.AcCompanies.Find(id);
            db.AcCompanies.Remove(accompany);
            db.SaveChanges();
            TempData["SuccessMsg"] = "You have successfully Deleted Company.";
            return RedirectToAction("Index");
        }
        
        public ActionResult CompanyLogo()
        {
            // Initialization.  
            ImgViewModel model = new ImgViewModel { FileAttach = null, FileName = "" };

            try
            {
                // Settings.  
                model.ImgLst = (from c in db.AcCompanies
                                where c.AcCompanyID == 1
                                select new ImgObj
                                {
                                    FileId = 1,
                                    FileName = "ICCSlogo.PNG",
                                    FileContentType = c.Logo,
                                    FileFullPath= "ICCSlogo"

                                }).FirstOrDefault();

            }
            catch (Exception ex)
            {
                // Info  
                Console.Write(ex);
            }

            // Info.  
            return this.View(model);
        }
        public byte[] ConvertToBytes(HttpPostedFileBase image)
        {
            byte[] imageBytes = null;
            BinaryReader reader = new BinaryReader(image.InputStream);
            imageBytes = reader.ReadBytes((int)image.ContentLength);
            return imageBytes;
        }
        [HttpPost]
        [AllowAnonymous]
        [ValidateAntiForgeryToken]
        public ActionResult CompanyLogo(ImgViewModel model)
        {
            // Initialization.  
            string fileContent = string.Empty;
            string fileContentType = string.Empty;
            string _path = "";
            try
            {
                // Verification  
                if (ModelState.IsValid)
                {
                    // Converting to bytes.  
                    byte[] uploadedFile = new byte[model.FileAttach.InputStream.Length];
                    model.FileAttach.InputStream.Read(uploadedFile, 0, uploadedFile.Length);
                    string _FileName = Path.GetFileName(model.FileAttach.FileName);
                    _path = Path.Combine(Server.MapPath("~/UploadFiles"), _FileName);
                                        
                    Session["CompanyLogoByte"] = uploadedFile;
                    model.FileAttach.SaveAs(_path);

                    //file.SaveAs(_path);
                    // Initialization.  
                    //fileContent = Convert.ToBase64String(uploadedFile);
                    //fileContentType = model.FileAttach.ContentType;
                    //model.Image = ConvertToBytes(model.FileAttach);
                    // Saving info.  
                  //  this.databaseManager.sp_insert_file(model.FileAttach.FileName, fileContentType, fileContent);
                }

                // Settings.  
                model.ImgLst = new ImgObj
                {
                    FileId = 1,
                    FileName = model.FileAttach.FileName,
                    FileContentType = model.FileAttach.ContentType,
                    FileFullPath= _path
                };

                Session["LogoFilePath"] = _path;

                return PartialView(model);
                    
            }
            catch (Exception ex)
            {
                // Info  
                Console.Write(ex);
            }

            // Info  
            return this.View(model);
        }


        [HttpPost]
        public ActionResult UploadFiles()
        {
            string fname="";
            string filename = "";
            // Checking no of files injected in Request object  
            if (Request.Files.Count > 0)
            {
                try
                {
                    //  Get all files from Request object  
                    HttpFileCollectionBase files = Request.Files;
                    for (int i = 0; i < files.Count; i++)
                    {
                        //string path = AppDomain.CurrentDomain.BaseDirectory + "Uploads/";  
                        //string filename = Path.GetFileName(Request.Files[i].FileName);  

                        HttpPostedFileBase file = files[i];
                        

                        // Checking for Internet Explorer  
                        if (Request.Browser.Browser.ToUpper() == "IE" || Request.Browser.Browser.ToUpper() == "INTERNETEXPLORER")
                        {
                            string[] testfiles = file.FileName.Split(new char[] { '\\' });
                            fname = testfiles[testfiles.Length - 1];
                            filename = file.FileName;
                        }
                        else
                        {
                            fname = file.FileName;
                            filename = file.FileName;
                        }

                        // Get the complete folder path and store the file inside it.  
                        fname = Path.Combine(Server.MapPath("~/UploadFiles/"), fname);
                        file.SaveAs(fname);
                    }
                    // Returns message that successfully uploaded  
                    return Json(new { status = "ok", FileName = filename, message = "File Uploaded Successfully!" });
                }
                catch (Exception ex)
                {
                    return Json(new { status = "Failed", FileName = "", message = ex.Message });
                    //return Json("Error occurred. Error details: " + ex.Message);
                }
            }
            else
            {
                return Json(new { status = "Failed", FileName = "", message = "No files selected." });                
            }
        }
        protected override void Dispose(bool disposing)
        {
            db.Dispose();
            base.Dispose(disposing);
        }

        public JsonResult GetCity(int id)
        {
            List<CityM> objCity = new List<CityM>();
            var city = (from c in db.CityMasters where c.CountryID == id select c).ToList();

            foreach (var item in city)
            {
                objCity.Add(new CityM { City = item.City, CityID = item.CityID });

            }
            return Json(objCity, JsonRequestBehavior.AllowGet);
        }

        public JsonResult GetLocation(int id)
        {
            List<LocationM> objLoc = new List<LocationM>();
            var loc = (from c in db.LocationMasters where c.CityID == id select c).ToList();

            foreach (var item in loc)
            {
                objLoc.Add(new LocationM { Location = item.Location, LocationID = item.LocationID });

            }
            return Json(objLoc, JsonRequestBehavior.AllowGet);
        }

        public class CityM
        {
            public int CityID { get; set; }
            public String City { get; set; }
        }

        public class LocationM
        {
            public int LocationID { get; set; }
            public String Location { get; set; }
        }
    }
}