@model LTMSV2.Models.PrepaidConsignmentEntryDomesticVM



@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_TrueBookMstr.cshtml";
}

   <script src="~/Content/NewCSS/plugins/jQuery/moment.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.43/js/bootstrap-datetimepicker.min.js"></script>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.43/css/bootstrap-datetimepicker.min.css" />


<script type="text/javascript">
    $(document).ready(function () {
        $(":text").css({ "border-radius": "5px" });
        $("select").css({ "border-radius": "5px" });
 
        $("#AWBNO").blur(function () {
            $.ajax({
                type: "POST",
                url: "/AWB/GetPickUpData",
                datatype: "Json",
                data: { id: $('#AWBNO').val() },
                success: function (data) {

                    if (data.Exist == 1) {
                        $("#CustomerID").val(data.CustomerID);
                        $("#shipper").val(data.shipper);
                        $("#shippercontact").val(data.contactperson);
                        $("#shipperaddres").val(data.shipperaddress);
                        $("#shipperphone").val(data.shipperphone);
                        $("#origincountry").val(data.shippercountry);
                        $("#originlocation").val(data.shipperlocation);
                        $("#Weight").val(data.weight);
                        BindCity(data.shippercity);


                        $("#consignee").val(data.consignee);
                        $("#consigneecontact").val(data.consigneecontact);
                        $("#Consigneeaddress").val(data.consigneeaddress);
                        $("#ConsigneePhone").val(data.consigneephone);
                        $("#destinationCountry").val(data.consigneecountry);
                        $("#destinationLocation").val(data.consigneelocation);

                        BindConsigneeCity(data.consigneecity);

                    }


                }
            });
        });

        function BindCity(x) {
            $.ajax({
                type: "POST",
                url: "/AWB/GetCity",
                datatype: "Json",
                data: { id: $("#origincountry option:selected").val() },
                success: function (data) {


                    $.each(data, function (index, value) {
                        $('#origincity').append('<option value="' + value.CityID + '">' + value.City + '</option>');
                    });

                    $('#origincity').val(x);



                }
            });
        }

        function BindConsigneeCity(x) {
            $.ajax({
                type: "POST",
                url: "/AWB/GetCity",
                datatype: "Json",
                data: { id: $("#destinationCountry option:selected").val() },
                success: function (data) {


                    $.each(data, function (index, value) {
                        $('#destinationCity').append('<option value="' + value.CityID + '">' + value.City + '</option>');
                    });

                    $('#destinationCity').val(x);



                }
            });
        }
    }
    
 
<script type="text/javascript">
    $(document).ready(function () {

        $(":text").css({ "border-radius": "5px" });
        $("select").css({ "border-radius": "5px" });

       


        $("#InscanTime").datepicker({ dateFormat: 'dd-M-yy', changeYear: true, changeMonth: true });
        $("#FDate").datepicker({ dateFormat: 'dd-M-yy', changeYear: true, changeMonth: true });
    });

</script>

<script type="text/javascript">
    $(function () {
        $('#InscanTime').datetimepicker({ format: 'DD-MMM-YYYY HH:mm' });
    });

    var m_names = new Array("Jan", "Feb", "Mar",
"Apr", "May", "Jun", "Jul", "Aug", "Sep",
"Oct", "Nov", "Dec");

    var d = new Date();
    var curr_date = d.getDate();
    var curr_month = d.getMonth();
    var curr_year = d.getFullYear();

    var reqdate = curr_date + "-" + m_names[curr_month] + "-" + curr_year;

    $("#InscanTime").val(reqdate);
   


</script>
       



<section class="content">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

   
      
             

        
        <fieldset>

             <div class="row no-margin">

                <div class="col-md-3">
                    
                    <label class="headinglabel required">AWB No</label>
                    @Html.TextBoxFor(model => model.AWBNO, new { @class = "form-control txttarget" })
                    @Html.ValidationMessageFor(model => model.AWBNO)
                </div>

                <div class="col-md-3">
                    <label class="headinglabel required">Inscan TIme</label>
                    @Html.TextBoxFor(model => model.InscanTime, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.InscanTime)
                </div>

            </div>

            <section class="content-header">
    <h1 class="headingfont">Prepaid Consignment Entry (Domestic) </h1>

</section>
            <div class="row no-margin">


                
                 <div class="col-md-3">
                    <label class="headinglabel required">Customer</label>
                    @Html.DropDownListFor(model => model.CustomerID, new SelectList(@ViewBag.Customer, "CustomerID", "CustomerName"), "Select", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CustomerID)
                </div>

                <div class="col-md-3">
                    <label class="headinglabel">Shipper</label>
                    @Html.TextBoxFor(model => model.Shipper, new { @class = "form-control" })

                </div>

                <div class="col-md-3">
                    <label class="headinglabel required">Address</label>
                    @Html.TextBoxFor(model => model.Address, new { @class = "form-control txttarget" })
                    @Html.ValidationMessageFor(model => model.Address)
                </div>
                 <div class="col-md-3">
                    <label class="headinglabel required">Shipper Phone</label>
                    @Html.TextBoxFor(model => model.ShipperPhone, new { @class = "form-control txttarget" })
                    @Html.ValidationMessageFor(model => model.ShipperPhone)
                </div>
            </div>


            <div class="row no-margin" style="padding-top: 10px">
               
                

               

                <div class="col-md-3">
                    <label class="headinglabel required">City</label>
                    @Html.DropDownListFor(model => model.City, new SelectList(@ViewBag.ShipperCity, "CityID", "City"), "Select", new { @class = "form-control" })

                </div>

                 <div class="col-md-3">
                    <label class="headinglabel required">Location</label>
                    @Html.DropDownListFor(model => model.Location, new SelectList(@ViewBag.ShipperLocation, "LocationID", "Location"), "Select", new { @class = "form-control" })

                </div>

                <div class="col-md-3">
                    
                    <label class="headinglabel required">Weight(Stated)</label>
                    @Html.TextBoxFor(model => model.Weight, new { @class = "form-control txttarget" })
                    @Html.ValidationMessageFor(model => model.Weight)
                </div>
                 <div class="col-md-3">
                    <label class="headinglabel required">Pieces</label>
                    @Html.TextBoxFor(model => model.pieces, new { @class = "form-control txttarget" })
                    @Html.ValidationMessageFor(model => model.pieces)
                </div>

            </div>

             <div class="row no-margin" style="padding-top: 10px">
               

                 <div class="col-md-3">

                    <label class="headinglabel required">Courier Type</label>
                    @Html.DropDownListFor(model => model.movementID, new SelectList(@ViewBag.Movement, "MovementID", "MovementType"), "Select", new { @class = "form-control" })
                </div>

                 <div class="col-md-3">
                    <label class="headinglabel">Payment Mode</label>
                    @Html.DropDownList("paymentmode", new List<SelectListItem>
                {
                    new SelectListItem{ Text="Pickup Cash", Value = "PKP" },
                    new SelectListItem{ Text="COD", Value = "COD" },
                    new SelectListItem{ Text="ACC", Value = "Account" },
              
                   
                 }, "Select", new { @class = "form-control" })
                </div>

                 <div class="col-md-3">

                    <label class="headinglabel required">Courier Charges</label>
                    @Html.TextBoxFor(model => model.CourierCharge, new { @class = "form-control" })
                </div>

                 <div class="col-md-3">
                    <label class="headinglabel required">Other Charges</label>
                    @Html.TextBoxFor(model => model.OtherCharge, new { @class = "form-control" })
                </div>
                 </div>

            <div class="row no-margin" style="padding-top: 10px">
                

                 <div class="col-md-3">

                    <label class="headinglabel required">Total Charges</label>
                    @Html.TextBoxFor(model => model.Total, new { @class = "form-control" })
                </div>

                <div class="col-md-3">
                    <label class="headinglabel required">Consignee</label>
                    @Html.TextBoxFor(model => model.Consignee, new { @class = "form-control" })
                </div>
                <div class="col-md-3">
                    <label class="headinglabel required">Consignee Address</label>
                    @Html.TextBoxFor(model => model.ConsigneeAddress, new { @class = "form-control" })
                </div>

                 <div class="col-md-3">
                    <label class="headinglabel required">Consignee Phone</label>
                    @Html.TextBoxFor(model => model.ConsigneePhone, new { @class = "form-control" })
                </div>
            </div>

             <div class="row no-margin" style="padding-top: 10px">
               

                 <div class="col-md-3">
                    <label class="headinglabel required">Consignee City</label>
                    @Html.DropDownListFor(model => model.ConsigneeCity, new SelectList(@ViewBag.ConsigneeCity, "CityID", "City"), "Select", new { @class = "form-control" })
                </div>
          
                  <div class="col-md-3">

                    <label class="headinglabel required">Destination</label>
                   @Html.DropDownListFor(model => model.ConsigneeDestination, new SelectList(@ViewBag.ConsigneeCity, "CityID", "City"), "Select", new { @class = "form-control" })
                </div>

                  <div class="col-md-3">

                    <label class="headinglabel required">Department</label>
                   @Html.DropDownListFor(model => model.ConsigneeDepartment, new SelectList(@ViewBag.ConsigneeDepartment, "DepartmentID", "Department1"), "Select", new { @class = "form-control" })
                </div>
                  <div class="col-md-3">

                    <label class="headinglabel required">Product Type</label>
                    @Html.DropDownListFor(model => model.ProductType, new SelectList(@ViewBag.ProductType, "CourierServiceID", "CourierService1"), "Select", new { @class = "form-control" })
                    </div>

                 </div>
           
                <div class="row no-margin" style="padding-top: 10px">
               

                    <div class="col-md-3">

                  <div class="col-md-3">
                          <label class="headinglabel required">Collected By</label>
            
                      @Html.DropDownListFor(model => model.CollectedByID, new SelectList(@ViewBag.employee, "EmployeeID", "EmployeeName"), "Select", new { @class = "form-control" })
                    
                 </div>
                <div class="col-md-3">
                          <label class="headinglabel required">Received By</label>
            
                      @Html.DropDownListFor(model => model.ReceivedByID, new SelectList(@ViewBag.employeerec, "EmployeeID", "EmployeeName"), "Select", new { @class = "form-control" })
                    
                 </div>

                     <div class="col-md-3">

                    <label class="headinglabel required">Remark</label>
                     @Html.TextBoxFor(model => model.Remark, new { @class = "form-control" })
                     </div>

                    </div>

              </fieldset>
        
            }
    </section>