@model LTMSV2.Models.ZoneChartVM
@using LTMSV2.Models;

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_TrueBookMstr.cshtml";
}

<link href="/Content/Multiselect/bootstrap-multiselect.css" rel="stylesheet" />
<script src="/Content/Multiselect/bootstrap-multiselect.js"></script>
<style>
    #CountryID + .btn-group button, #CountryID + .btn-group, #CityID + .btn-group button, #CityID + .btn-group {
        display: block;
        width: 100%;
    }
</style>
<script type="text/javascript">
    var countrylist = "";

    $(document).ready(function () {
        $(":text").css({ "border-radius": "5px" });
        $("select").css({ "border-radius": "5px" });
      
        $(".divcountry").hide();
        $(".divcity").hide();
        
        //$("#ZoneID").prop("disabled", true);
     
        //$("#ZoneCategoryID").change(function () {
        //    $("#ZoneID").prop("disabled", false);
        //});


        if ($("#StatusZone").val() == "I") {
            $(".divcountry").show();
            $(".divcity").hide();

        

            $.ajax({
                type: "POST",
                url: "/ZoneChart/GetCountry",
                datatype: "Json",
                success: function (data) {
                    $(".divcountry").show();
                    $(".divcity").hide();
                    $('#CountryID').empty();

                 
                    $.each(data, function (index, value) {
                     
                        var o_st = $("#countrylist").val().split(",");
                        var flag = 0;
                        for (var j = 0 ; j < o_st.length; j++) {

                                if (o_st[j] == value.CountryID) {
                                    flag = 1;
                                    break;
                                }
                           
                        }

                        if (flag == 1) {
                            $('#CountryID').append('<option value="' + value.CountryID + '" selected=true>' + value.CountryName + '</option>');
                        }
                        else {
                            $('#CountryID').append('<option value="' + value.CountryID + '">' + value.CountryName + '</option>');
                        }

                    });



                    $('#CountryID').multiselect({
                        enableClickableOptGroups: true,
                        enableCollapsibleOptGroups: true,
                          enableFiltering: true,
                                    enableCaseInsensitiveFiltering: true,
                        includeSelectAllOption: true
                    });


                

                    
                }
            });


            

        }
        else if ($("#StatusZone").val() == "D") {
            $(".divcountry").hide();
            $(".divcity").show();

            $.ajax({
                type: "POST",
                url: "/ZoneChart/GetCity",
                datatype: "Json",
                success: function (data) {
                    $('#CityID').empty();
                    $(".divcountry").hide();
                    $(".divcity").show();
                    $.each(data, function (index, value) {

                        var o_st = $("#citylist").val().split(",");
                        var flag = 0;
                        for (var j = 0 ; j < o_st.length; j++) {

                            if (o_st[j] == value.CityID) {
                                flag = 1;
                                break;
                            }
                           
                        }

                        if (flag == 1) {
                            $('#CityID').append('<option value="' + value.CityID + '" selected=true>' + value.City + '</option>');
                        }
                        else {
                            $('#CityID').append('<option value="' + value.CityID + '">' + value.City + '</option>');
                        }
                    
                    });

                    $('#CityID').multiselect({
                        enableClickableOptGroups: true,
                        enableCollapsibleOptGroups: true,
                        enableFiltering: true,
                        enableCaseInsensitiveFiltering: true,
                        includeSelectAllOption: true
                    });

                }
            });


           
        }

        $("#ZoneID").change(function () {
            $.ajax({
                type: "POST",
                url: "/ZoneChart/GetStatus",
                datatype: "Json",
                data: { id: $("#ZoneID option:selected").val() },
                success: function (data) {

                    $("#StatusZone").val(data.Status);


                    if ($("#StatusZone").val() == "I") {
                        $("#CountryID").show();

                        $.ajax({
                            type: "POST",
                            url: "/ZoneChart/GetCountry",
                            datatype: "Json",
                            success: function (data) {
                                $(".divcountry").show();
                                $(".divcity").hide();
                                $('#CountryID').empty();

                                $.each(data, function (index, value) {
                                    $('#CountryID').append('<option value="' + value.CountryID + '">' + value.CountryName + '</option>');
                                });

                                $('#CountryID').multiselect({
                                    enableClickableOptGroups: true,
                                    enableCollapsibleOptGroups: true,
                                    enableFiltering: true,
                        enableCaseInsensitiveFiltering: true,
                                    includeSelectAllOption: true
                                });

                            }
                        });
                       
                    }
                    else if ($("#StatusZone").val() == "D") {

                        $.ajax({
                            type: "POST",
                            url: "/ZoneChart/GetCity",
                            datatype: "Json",
                            success: function (data) {
                                $('#CityID').empty();
                                $(".divcountry").hide();
                                $(".divcity").show();
                                $.each(data, function (index, value) {
                                    $('#CityID').append('<option value="' + value.CityID + '">' + value.City + '</option>');
                                });

                                $('#CityID').multiselect({
                                    enableClickableOptGroups: true,
                                    enableCollapsibleOptGroups: true,
                                   enableFiltering: true,
                        enableCaseInsensitiveFiltering: true,
                                    includeSelectAllOption: true
                                });

                            }
                        });


                      
                    }
                }
            });
        });


        $("#btnsave").click(function () {
            var countrycount = $("#CountryID :selected").length;
            var citycount = $("#CityID :selected").length;
            if ($("#ZoneCategoryID option:selected").val() == "") {
                $("#validations").show();
                return false;
            }
            else if ($("#ZoneID option:selected").val() == "") {
                $("#validations").show();
                return false;
            }
            else if (countrycount == 0 && $("#StatusZone").val() == "I") {

                $("#validations").show();
                return false;
            }
            else if (citycount == 0 && $("#StatusZone").val() == "D") {
                $("#validations").show();
                return false;
            }
            else {
                $("#validations").hide();
                return true;
            }
        });


    });
</script>

<section class="content-header">
    <h1 class="headingfont">Zone Chart Master - Modify</h1>

</section>

<section class="content">
@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    
       <div id="validations" style="color:red;margin-left:7px;display:none">* Please fill mandatory fields</div>
    <fieldset>

            <div class="searchdiv sm-width">
           <div class="row no-margin"> 
               
            
               <div class="col-md-12">

               @Html.HiddenFor(model => model.ZoneChartID)
                   @Html.HiddenFor(model => model.StatusZone)
                   @Html.HiddenFor(model => model.countrylist)
                               @Html.HiddenFor(model => model.citylist)
               
                          <label class="headinglabel required">Zone Category</label>
           @Html.DropDownListFor(model => model.ZoneCategoryID, new SelectList(@ViewBag.ZoneCategory, "ZoneCategoryID","ZoneCategory1"), "Select", new { @class = "form-control" })

          
                 </div>

        <div class="col-md-12">
                          <label class="headinglabel required">Zone</label>
            @Html.HiddenFor(model => model.StatusZone)
           @Html.DropDownListFor(model => model.ZoneID, new SelectList(@ViewBag.Zones, "ZoneID","ZoneName"), "Select", new { @class = "form-control" })

          
                 </div>
                
                  <div class="col-md-4 divcountry">
                          <label class="headinglabel required">Country</label><br />
       @*    @Html.DropDownListFor(model => model.CountryIDs, new SelectList(@ViewBag.Country, "CountryID","CountryName"), "Select", new {multiple="multiple", @class = "form-control" })*@
                       <select id="CountryID" name="country" multiple="multiple">
                                    <option value=""></option>
                                </select> 
          
                 </div>

                 <div class="col-md-3 divcity">
                          <label class="headinglabel required">City</label><br />
         <select id="CityID" name="city" multiple="multiple">
                                    <option value=""></option>
                                </select> 
          
                 </div>

     


         </div>

        <div class="row no-margin" style="padding-top:10px">
            <div class="col-md-3">
              
            </div>
        </div>

      <div class="row no-margin" style="padding-top:10px">
                        <div class="col-md-12 btn-right">
                           
                              <input type="submit" value="Update" class="btn btn-primary btnwidth" data-toggle="tooltip" title="Click here" id="btnsave" />
                               
                          
                        
                          <a href='@Url.Action("Index", "ZoneChart", new { id = 0 })' class="btn btn-danger btnwidth" data-toggle="tooltip" data-placement="right" title="Click here" style="margin-left:5px;">Cancel</a>
                          
                        </div>
                    </div>

                </div>
    </fieldset>
}
    </section>

