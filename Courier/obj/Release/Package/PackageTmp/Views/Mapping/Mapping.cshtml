@model LTMSV2.Models.MappingToDBColumnModel
@{
    ViewBag.Title = "Mapping";
    Layout = "~/Views/Shared/_TrueBookMstr.cshtml";
}



<html>
  
<body>

    @using (Html.BeginForm())
    {
        <div id="wrapper">
            <div class="content-page">
                <div class="content">
                    <div class="container">
                        <div class="row">
                            <div class="col-sm-11">

                              @*  <div class="portlet">
                                    <div class="panel panel-default">
                                        <div class="panel-body">
                                            <div class="col-md-12">


                                                <div class="form-group">
                                                    <div class="form-group col-md-2">
                                                        @Html.Label("Select Table : ", htmlAttributes: new { @class = "control-label" })
                                                    </div>
                                                    <div class="form-group col-md-3">
                                                        @Html.DropDownListFor(model => model.TableName, new SelectList(Model.TableList, "TableName", "TableName"), "Select", new { @class = "form-control", @onchange = "FillColumn()" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>*@

                                <div class="portlet">
                                    <div class="panel panel-default">
                                        <div class="panel-body">
                                            <h3>Map The Columns :</h3>
                                            <div id="cname" class="col-md-12">
                                                  @{
                                                
                                                    string message1 = (string)ViewBag.Message;
                                                    if (!string.IsNullOrEmpty(message1))
                                                    {
                                                        <h3>@message1</h3>
                                                    }
                                                }
                                                @{
                                                
                                                    string message = (string)TempData["Message"];
                                                    if (!string.IsNullOrEmpty(message))
                                                    {
                                                        <h3>@message</h3>
                                                    }
                                                }

                                                @{
                                                    //foreach (var item in Model.ExcelColumns)
                                                    for (int i = 0; i < Model.ExcelColumns.Count; i++)
                                                    {
                                                        <div class="row">
                                                            <div class="col-md-3">
                                                                   @Html.Label(Model.ExcelColumns[i].CoumnName, htmlAttributes: new { @class = "control-label" })
                                                            </div>
                                                        <div class="form-group col-md-3">
                                                         
                                                            @Html.HiddenFor(x => x.ExcelColumns[i].CoumnName)
                                                            @Html.DropDownListFor(model => model.DBColumns[i].CoumnName, new SelectList(Model.DBColumns, "CoumnName", "CoumnName"), "Select", new { @class = "form-control" })
                                                        </div>
                                                            </div>
                                                    }
                                                }
                                                <div class="form-group">
                                                    <div class="col-lg-12">
                                                        @*<input type="submit" value="Save" class="btn btn-default btn-orange" />*@
                                                        <button class="btn btn-primary waves-effect waves-light" value="Save" type="submit"><i class="fa  fa-save" style="margin-right:10px;"></i><span>Save</span></button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>


                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
                                                    }
  
    <script type="text/javascript">
        

       
            //$('select').live('change', function (event) {
            //    var cI = $(this);
            //    $('select option:selected').each(function (i, e) {
            //        //Check if values match AND if not default AND not match changed item to self
            //        if ($(e).val() == cI.val() && $(e).val() != 0 && $(e).parent().index() != cI.index()) {

            //            alert('Duplicate found!');
            //            cI.val('0');
            //        }
            //    });
            //});



            var Tablename = "tempTable";

            //alert("Value = " + Tablename);

            $.ajax({
                url: '/Mapping/FillColumn',
                type: "GET",
                dataType: "JSON",
                data: { TableName: Tablename },
                success: function (columnlist) {
                    //alert("Success");

                    $('#cname select').each(function () {
                        //do something with the select $(this) will give you the select element
                        //alert("Drop");
                        var currentselect = $(this);
                        $(currentselect).html("");
                        $(currentselect).append(
                               $('<option></option>').val(null).html("Select"));
                        $.each(columnlist, function (i, column) {
                            //alert("col name" + col umn.CoumnName);
                            $(currentselect).append(
                                $('<option></option>').val(column.CoumnName).html(column.CoumnName));
                        });

                    });
                }
            });

    

       

        

        //function FillColumn() {

        //    var Tablename = $('#TableName').val();

        //    //alert("Value = " + Tablename);

        //    $.ajax({
        //        url: '/Mapping/FillColumn',
        //        type: "GET",
        //        dataType: "JSON",
        //        data: { TableName: Tablename },
        //        success: function (columnlist) {
        //            //alert("Success");

        //            $('#cname select').each(function () {
        //                //do something with the select $(this) will give you the select element
        //                //alert("Drop");
        //                var currentselect = $(this);
        //                $(currentselect).html("");
        //                $(currentselect).append(
        //                       $('<option></option>').val(null).html("Select"));
        //                $.each(columnlist, function (i, column) {
        //                    //alert("col name" + col umn.CoumnName);
        //                    $(currentselect).append(
        //                        $('<option></option>').val(column.CoumnName).html(column.CoumnName));
        //                });

        //            });
        //        }
        //    });

        //}
    </script>

</body>
</html>
