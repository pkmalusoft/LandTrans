@model IEnumerable<LTMSV2.Models.AcOpeningMaster>

@{
    ViewBag.Title = "AcOpeningMaster";
    Layout = "~/Views/Shared/_TrueBookMstr.cshtml";
    var i = 0;
    var isadd = true;
    var ismodify = true;
    var isdelete = true;

    string path = Request.Url.AbsolutePath.ToLower();

    if (Convert.ToInt32(Session["UserRoleID"]) > 1)
    {
        LTMSV2.Models.SourceMastersModel obj = new LTMSV2.Models.SourceMastersModel();
        isadd = obj.GetAddpermission(Convert.ToInt32(Session["UserRoleID"]), path);
        ismodify = obj.GetModifypermission(Convert.ToInt32(Session["UserRoleID"]), path);
        isdelete = obj.GetDeletepermission(Convert.ToInt32(Session["UserRoleID"]), path);

    }
}
<style>
    tfoot {
        display: table-header-group;
    }
#dataTables-example .form-control, input {
    height: 30px!important;
    border-radius: 10px!important;
    border: 1px solid #ccc;
    margin-bottom: 0;
}
</style>
<script type="text/javascript">
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode != 46 && charCode > 31
            && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }

    function setNumberDecimal(obj) {

       $(obj).val(parseFloat($(obj).val()).toFixed(3));
    }
    function orderrownumber() {
        var itemcount = $('#dataTables-example > tbody > tr').length;
        var rowindex = 1;
        var i = 0;
        for (i = 0; i < itemcount; i++) {
            var IsDeleted = $('#hdndel_' + i).val();
            if (IsDeleted == "false") {
                $('#row_' + i).html(rowindex);
                rowindex++;
            }
        }
    }
    //function checkitemexists(headname,currentindex,obj) {
    //    var itemcount = $('#dataTables-example > tbody > tr').length;
    //    var rowindex = 1;
    //    var i = 0;
    //    for (i = 0; i < itemcount; i++) {
    //        if (currentindex ! -1 && currentindex != i) {
    //            var IsDeleted = $('#hdndel_' + i).val();
    //            if (IsDeleted == "false") {
    //                var AcHeadId = $("#txtHeadId_" + i).val()
    //                if (AcHeadId == headname) {
    //                    alert('Duplicate Account Head!')
    //                    $('#txtHead_' + i).val('');
    //                    $('#txtHead_' + i).focus();
    //                    break;
    //                }
                    
    //            }
    //        }
    //    }
    //}
    $(document).ready(function () {

        $('#details').on("click", ".DeleteNewRow", function () {
            debugger;
            //$(this).parent().parent().remove();
            $(this).parent().parent().addClass('hide');
            var obj = $(this).parent().parent().find('.hdndeleted');
            $(obj).val(true);
            orderrownumber();

        });
        $('.text-right').blur(function () {
            if (isNaN(parseInt($(this).val()))) {
                $(this).val('0.000');
            } else {
                var amt = parseFloat($(this).val());
                $(this).val(amt.toFixed(3));
            }
        });
        $('.text-right').change(function () {

            var id = $(this).attr('id').split('_')[0];
            var id1 = $(this).attr('id').split('_')[1];
            if (id == 'txtDebit') {
                if ($(this).val() > 0) {
                    $('#txtCredit_' + id1).val(0);
                }
            }
            else {
                if ($(this).val() > 0) {
                    $('#txtDebit_' + id1).val(0);
                }
            }
        });
        $('#btnadd').click(function () {
            debugger;
            var i = $('#dataTables-example > tbody > tr').length;
            var Id = $("#Id").val();
           
            var AcHeadId = $("#AcHeadId").val();
            var Amount = $("#Amount").val();
            var AccNature = $("#AccNature").val();
            if (AcHeadId == null || AcHeadId == "" || AcHeadId == "0") {
                $.notify("Please Select Chart of Account!", "error");
                return;
            }
            else if (Amount == "" || Amount == null) {
                $.notify("Enter Opening Amount", "error");
                return;
            }
            var Debit = 0;
            var Credit = 0;
            if (AccNature == "Dr") {
                Debit = Amount;
            }
            else if (AccNature == "Cr") {
                Credit = Amount;
            }
            var rowcount = (parseFloat(i) + 1);
           
            var html = '<tr><td>' + rowcount.toLocaleString() + '<td><input type="hidden" value="false" id="hdndel_' + i + '" class="hdndeleted" /><input type="hidden" value="0"  id="txtId_' + i + '" /><input type="hidden" value="' + AcHeadId + '" id="txtHeadId_' + i + '"  />   <input type="text" class="form-control" value="' + $('#AcHeadName').val() + '" id="txtHead_' + i + '"/>';
            html = html + '<td><input type="text" class="form-control text-right" value="' + Debit + '" id="txtDebit_' + i + '" />  </td>';
            html = html + '<td><input type="text" class="form-control text-right" value="' + Credit + '" id="txtCredit_' + i + '" />  </td>';
            html = html + '<td><a class="DeleteNewRow"><i class="fa fa-times"></i></a></td>';
            html = html + '</tr>'
            $('#details').append(html);

            $('.text-right').blur(function () {
                if (isNaN(parseInt($(this).val()))) {
                    $(this).val('0.000');
                } else {
                    var amt = parseFloat($(this).val());
                    $(this).val(amt.toFixed(3));
                }
                var id = $(this).attr('id').split('_')[0];
                var id1 = $(this).attr('id').split('_')[1];
                if (id == 'txtDebit') {
                    if ($(this).val() > 0) {
                        $('#txtCredit_' + id1).val(0);
                    }
                }
                else {
                    if ($(this).val() > 0) {
                        $('#txtDebit_' + id1).val(0);
                    }
                }
            });

            $("#txtHead_" + i).autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/DailyTrips/AcHead',
                        datatype: "json",
                        data: {
                            term: request.term
                        },
                        success: function (data) {
                            response($.map(data, function (val, item) {
                                return {
                                    label: val.AcHead,
                                    value: val.AcHead,
                                    Id: val.AcHeadID,
                                }
                            }))
                        }
                    })
                },
                minLength: -1,
                autoFocus: false,
                focus: function (event, ui) {
                    var id = $(this).attr('id').split('_')[1];
                    $('#txtHead_' + id).val(ui.item.value);
                    $("#txtHeadId_" + id).val(ui.item.Id);
                },
                select: function (e, i) {
                    debugger;
                    e.preventDefault();
                    console.log($(this).attr('id'));
                    var id = $(this).attr('id').split('_')[1];
                    $("#txtHead_" + id).val(i.item.label);
                    $("#txtHeadId_" + id).val(i.item.Id);
                },

            });
            orderrownumber();
            $("#AcHeadId").val(0);
            $("#AcHeadName").val('');
            $("#Amount").val(0.000);
            $("#AcHeadName").focus();

        });

        $("#btnsave").click(function () {
            debugger;
            var itemcount = $('#dataTables-example > tbody > tr').length;
            var openingitems = [];
            var i = 0;
            for (i = 0; i < itemcount; i++) {
                //amt = amt + parseFloat($(item).val());                
                var Id = $("#txtId_" + i).val();
                var achead = $('#txtHead_' + i).val();
                var AcHeadId = $("#txtHeadId_" + i).val();
                var AccNature = "Dr";
                var Amount = 0;
                if (parseFloat($('#txtDebit_' + i).val()) > 0) {
                    Amount = parseFloat($('#txtDebit_' + i).val());
                }
                else {
                    AccNature = "Cr";
                    Amount = parseFloat($('#txtCredit_' + i).val());
                }
                var IsDeleted = $('#hdndel_' + i).val();
                var item1 = { AcOpeningID: Id, AcHeadID: AcHeadId, Amount: Amount, AcNature: AccNature, AcHead: achead, IsDeleted: IsDeleted }
                openingitems.push(item1);
                if (i == (parseFloat(itemcount) - 1)) {
                    var items = JSON.stringify({ 'list': openingitems });
                    $.ajax({
                        contentType: 'application/json;charset=utf-8',
                        type: "POST",
                        dataType: 'json',
                        url: "/Accounts/SubmitAcOpeningMaster",
                        data: items,
                        success: function (data) {
                            if (data.success == true) {
                                $.notify("Submitted Successfully!", "success");
                                location.reload();
                            } else {
                                $.notify(data.message, "error");
                            }
                        }
                    });
                }
            }
        });
        $("#AcHeadName").change(function () {
            if ($("#AcHeadId").attr('label') != $('#AcHeadName').val()) {
                $("#AcHeadName").val('');
                $("#AcHeadName").focus();
            }
            //else {
            //    if ($("#AcHeadName").val() != '') {
            //        checkitemexists($("#AcHeadName").val())
            //    }
            //}
        });

        $("#AcHeadName").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/DailyTrips/AcHead',
                    datatype: "json",
                    data: {
                        term: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.AcHead,
                                value: val.AcHead,
                                Id: val.AcHeadID,
                            }
                        }))
                    }
                })
            },
            minLength: -1,
            autoFocus: false,
            focus: function (event, ui) {
                $('#AcHeadName').val(ui.item.value);
                $("#AcHeadId").val(ui.item.Id);
                $("#AcHeadId").attr('label', ui.item.label);
            },
            select: function (e, i) {
                e.preventDefault();
                $("#AcHeadName").val(i.item.label);
                $("#AcHeadId").val(i.item.Id);
                $("#AcHeadId").attr('label',i.item.label);
            },

        });
        var idtext='txtHead_'
        $('[id^=' + idtext + ']').each(function (index, item) {
            $("#txtHead_" + index).autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/DailyTrips/AcHead',
                        datatype: "json",
                        data: {
                            term: request.term
                        },
                        success: function (data) {
                            response($.map(data, function (val, item) {
                                return {
                                    label: val.AcHead,
                                    value: val.AcHead,
                                    Id: val.AcHeadID,
                                }
                            }))
                        }
                    })
                },
                minLength: -1,
                autoFocus: false,
                focus: function (event, ui) {
                    var id = $(this).attr('id').split('_')[1];
                    $('#txtHead_' + id).val(ui.item.value);
                    $("#txtHeadId_" + id).val(ui.item.Id);
                },
                select: function (e, i) {
                    debugger;
                    e.preventDefault();
                    console.log($(this).attr('id'));
                    var id = $(this).attr('id').split('_')[1];
                    $("#txtHead_" + id).val(i.item.label);
                    $("#txtHeadId_" + id).val(i.item.Id);
                },

            });

        });
    });
    function EditOpeningMaster(Id) {
        $.ajax({
            type: "POST",
            url: "/Accounts/GetOpeningMasterById",
            datatype: "Json",
            data: { Id: Id },
            success: function (data) {
                $("#Id").val(data.data.AcOpeningID);
                $("#AcHeadId").val(data.data.AcHeadID);
                if (data.data.Amount >0) {
                    $("#Amount").val(data.data.Amount);
                    $("#AccNature").val("Dr");
                } else {
                    $("#Amount").val(data.data.Amount *-1);
                    $("#AccNature").val("Cr");
                }

                $("#AcHeadName").val(data.data.AcHead);
                $("#btnsave").attr('value', 'Update');
                $("#btncancel").removeClass('hidden');
            }
        });
    }
    function DeleteOpeningMaster(ID) {
        if (confirm("Are you sure? You want to Delete?")) {
            window.location.href = "/Accounts/DeleteAcOpeningMaster/?Id=" + ID;
        }
    }
    function CancelEdit() {
        location.reload();
    }
</script>
<section class="content-header">
    <h1 class="headingfont">Account Opening Master</h1>

</section>
<section class="content">
    @if (ViewBag.SuccessMsg != null)
    {
        <script type="text/javascript">
         $(document).ready(function () {
             $.notify("@ViewBag.SuccessMsg ", "success");
         });
        </script>
    }

    @if (ViewBag.ErrorMsg != null)
    {
        <script type="text/javascript">
         $(document).ready(function () {
             $.notify("@ViewBag.ErrorMsg ", "danger");
         });
        </script>
    }
<div class="row no-margin btn-right">
    <div class="col-md-12">
        <button type="button" value="SAVE" class="btn btn-primary  btnwidth" data-toggle="tooltip" title="Click here" id="btnsave">SAVE</button>
        <input type="submit" onclick="CancelEdit()" value="Cancel" class="btn btn-danger  btnwidth" id="btncancel" />
    </div>
</div>
    <div class="row no-margin">
        <div class="col-md-12">
            <div class="row form-group">
                <input type="hidden" id="Id" name="Id" value="0" />
                <div class="col-md-2">
                    <label>Opening Date</label>
                    <input type="text" class="form-control" id="OpDate" name="OpDate" value="@ViewBag.Opdate" readonly />
                </div>
                <div class="col-md-3">
                    <label class="required">Account Head</label>
                    <input type="text" class="form-control" id="AcHeadName" name="AcHeadName" />
                    <input type="hidden" id="AcHeadId" name="AcHeadId" />
                </div>
                <div class="col-md-2">
                    <label class="required">Amount</label>
                    <input type="text" class="form-control text-right" onkeypress="return isNumberKey(event)" onchange="setNumberDecimal(this)" id="Amount" name="Amount" />
                </div>
                <div class="col-md-2">
                    <label class="required">Account Nature</label>
                    <select class="form-control" id="AccNature" name="AccNature">
                        <option value="Dr">Debit</option>
                        <option value="Cr">Credit</option>
                    </select>
                </div>
                <div class="col-md-3 ">
                    <button type="button" value="ADD" class=" small_btn btn btn-primary btnwidth" data-toggle="tooltip" title="Click here" id="btnadd"><i class="fa fa-plus"></i></button>
                  

                </div>
            </div>

        </div>

    </div>

    <hr />
    <div class="table-responsive tblbackground" style="padding:15px">
        <table class="table table-responsive table-bordered tblfont" id="dataTables-example">
            <thead>
                <tr>
                    <th>S.No</th>
                    <th>
                        @Html.Label("Chart of Account")
                    </th>
                    <th>
                        Debit
                    </th>
                    <th>
                        Credit
                    </th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody id="details">

                @foreach (var item in Model)
                {
                    <tr>
                        <td id="row_@i">@(i+1)</td>
                        <td>
                            @*@Html.DisplayFor(modelItem => item.AcHead.AcHead1)*@
                            <input type="hidden" class="form-control" value="@item.AcOpeningID" id="txtId_@i" />
                            <input type="hidden" value="false" id="hdndel_@i" class="hdndeleted" />
                            <input type="text" class="form-control" value="@item.AcHead.AcHead1" id="txtHead_@i" />
                            <input type="hidden" class="form-control" value="@item.AcHead.AcHeadID" id="txtHeadId_@i" />
                        </td>

                        @if (item.Amount > 0)
                        {
                            <td><input type="text" class="form-control text-right " value="@item.Amount" id="txtDebit_@i" />  </td>
                            <td><input type="text" class="form-control text-right" value="0.000" id="txtCredit_@i" />  </td>

                                }
                                else
                                {
                                    var credit = -1 * item.Amount;
                            <td><input type="text" class="form-control text-right " value="0.000" id="txtDebit_@i" />  </td>
                            <td><input type="text" class="form-control text-right" value="@credit" id="txtCredit_@i" />  </td>

                        }

                        @*<td style="text-align:right">
                                @LTMSV2.Models.CommanFunctions.GetDecimalFormat(item.Amount, "3")
                            </td>*@

                        <td>

                            @*@if (ismodify)
                                {
                                    <a style="cursor:pointer" onclick="EditOpeningMaster(@item.AcOpeningID)"><i class="fa fa-pencil"></i></a>
                                }
                                |*@
                            @if (isdelete)
                            {
                                <a class="DeleteNewRow" ><i class="fa fa-times"></i></a>
                            }

                        </td>
                    </tr>
                    i++;
                }
            </tbody>
        </table>
    </div>
</section>
