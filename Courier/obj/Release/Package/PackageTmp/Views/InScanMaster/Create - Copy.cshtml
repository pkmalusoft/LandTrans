@model LTMSV2.Models.InScanMasterVM
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_TrueBookMstr.cshtml";
}

<script type="text/javascript">
    $(document).ready(function () {
        $(":text").css({ "border-radius": "5px" });
        $("select").css({ "border-radius": "5px" });

        $("#HAWBNo").focus();


        $("#destinationCity").empty();
        $('#destinationCity').append('<option value="0">Select</option>');

        $("#destinationLocation").empty();
        $('#destinationLocation').append('<option value="0">Select</option>');


        $("#CourierCharge").val('0.00');
        $("#PackingCharge").val('0.00');
        $("#OtherCharge").val('0.00');
        $("#CustomCharge").val('0.00');
        $("#totalCharge").val('0.00');

        $('#InScanDate').datepicker({
            dateFormat: 'dd-M-yy',
            changeYear: true, changeMonth: true,

        });


        function CalcTotal() {
            var x = $("#CourierCharge").val();
            var y = $("#PackingCharge").val();
            var z = $("#OtherCharge").val();
            var a = $("#CustomCharge").val();
            var tot=parseFloat(x)+parseFloat(y)+parseFloat(z)+ parseFloat(a);

            $("#totalCharge").val(tot.toFixed(2));
        }

        $("#CourierCharge").blur(function () {
            if ($(this).val() == null) {
                $(this).val('0.00');
            }
            CalcTotal();
        });
        $("#PackingCharge").blur(function () {
            if ($(this).val() == null) {
                $(this).val('0.00');
            }
          CalcTotal();
        });
        $("#OtherCharge").blur(function () {
            if ($(this).val() == null) {
                $(this).val('0.00');
            }
           CalcTotal();
        });
        $("#CustomCharge").blur(function () {
            if ($(this).val() == null) {
                $(this).val('0.00');
            }
           CalcTotal();
        });

        
        $("#customerid").change(function () {
            $("#origincity").empty();
            $('#origincity').append('<option value="0">Select</option>');

            $("#originlocation").empty();
            $('#originlocation').append('<option value="0">Select</option>');

            $.ajax({
                type: "POST",
                url: "/QuickAWB/GetCustomerData",
                datatype: "Json",
                data: { id: $('#customerid').val() },
                success: function (data) {
              
                    $("#shipper").val(data.CustName);
                    $("#shippercontact").val(data.ContactPerson);
                    $("#origincountry").val(data.CountryID);
                    $("#ConsignorPhone").val(data.Phone);
                 
                    $("#shipperaddres").val(data.Address1);

                    BindCity(data.CityID);
                }
            });
        });



        function BindCity(x, y) {
            $.ajax({
                type: "POST",
                url: "/QuickAWB/GetCity",
                datatype: "Json",
                data: { id: $("#origincountry option:selected").val() },
                success: function (data) {


                    $.each(data, function (index, value) {
                        $('#origincity').append('<option value="' + value.CityID + '">' + value.City + '</option>');
                    });

                    $('#origincity').val(x);

             

                }
            });
        }


        function BindConsigneeCity(x) {
            $.ajax({
                type: "POST",
                url: "/QuickAWB/GetCity",
                datatype: "Json",
                data: { id: $("#destinationCountry option:selected").val() },
                success: function (data) {


                    $.each(data, function (index, value) {
                        $('#destinationCity').append('<option value="' + value.CityID + '">' + value.City + '</option>');
                    });

                    $('#destinationCity').val(x);

                  

                }
            });
        }
     

    

        $("#destinationCountry").change(function () {
            $("#destinationCity").empty();
            $('#destinationCity').append('<option value="0">Select</option>');
            $.ajax({
                type: "POST",
                url: "/QuickAWB/GetCity",
                datatype: "Json",
                data: { id: $("#destinationCountry option:selected").val() },
                success: function (data) {


                    $.each(data, function (index, value) {
                        $('#destinationCity').append('<option value="' + value.CityID + '">' + value.City + '</option>');
                    });

                }
            });
        });

        $("#destinationCity").change(function () {

            $("#destinationLocation").empty();
            $('#destinationLocation').append('<option value="0">Select</option>');
            $.ajax({
                type: "POST",
                url: "/QuickAWB/GetLocation",
                datatype: "Json",
                data: { id: $("#destinationCity option:selected").val() },
                success: function (data) {


                    $.each(data, function (index, value) {
                        $('#destinationLocation').append('<option value="' + value.LocationID + '">' + value.Location + '</option>');
                    });

                }
            });
        });

        $("#btnsave").click(function () {

            $.ajax({
                type: "POST",
                url: "/QuickAWB/GetAWB",
                datatype: "Json",
                data: { id: $("#HAWBNo").val() },
                success: function (data) {
                    if (data.Exist == 0) {
                        $("#IsAvailable").val(0);
                    }
                    else {
                        $("#IsAvailable").val(1);
                    }

                }
            });



            var hawb = $("#HAWBNo").val();
            var customerid = $("#customerid option:selected").val();
            var shipper = $("#shipper").val();
            var shippercontact = $("#shippercontact").val();
            var consignorphone = $("#ConsignorPhone").val();
            var shipperaddress = $("#shipperaddress").val();
            var origincountry = $("#origincountry option:selected").val();
            var origincity = $("#origincity option:selected").val();
            var orilocation = $("#orilocation").val();
            consignee = $("#consignee").val();
            consigneecontact = $("#consigneecontact").val();
            ConsigneePhone = $("#ConsigneePhone").val();
            Consigneeaddress = $("#Consigneeaddress").val();

            destinationCountry = $("#destinationCountry option:selected").val();
       
            destinationCity = $("#destinationCity option:selected").val();
         
            destlocation = $("#destlocation").val();

            Description = $("#Description").val();
        
            Pieces = $("#Pieces").val();
        
            Weight = $("#Weight").val();
         
          
       


            if (hawb == "") {
                $("#validations").show();
                return false;

            }
            else if ($("#IsAvailable").val() == 1) {
                alert("AWB Already Exist..!");
                return false;
            }
            else if (customerid == "") {
                $("#validations").show();
                return false;
            }
            else if (shipper == "") {
                $("#validations").show();
                return false;
            }
            else if (shippercontact == "") {
                $("#validations").show();
                return false;
            }
            else if (consignorphone == "") {
                $("#validations").show();
                return false;
            }
            else if (shipperaddress == "") {
                $("#validations").show();
                return false;
            }
            else if (origincountry == "") {
                $("#validations").show();
                return false;
            }
            else if (origincity == "") {
                $("#validations").show();
                return false;
            }
            else if (orilocation == "") {
                $("#validations").show();
                return false;
            }
            else if ($("#paymentmode option:selected").val() == "") {
                $("#validations").show();
                return false;
            }
            else if (consignee == "") {
                $("#validations").show();
                return false;
            }
            else if (consigneecontact == "") {
                $("#validations").show();
                return false;
            }
            else if (ConsigneePhone == "") {
                $("#validations").show();
                return false;
            }
            else if (Consigneeaddress == "") {
                $("#validations").show();
                return false;
            }
            else if (destinationCountry == "") {
                $("#validations").show();
                return false;
            }
            else if (destinationCity == "") {
                $("#validations").show();
                return false;
            }
            else if (destlocation == "") {
                $("#validations").show();
                return false;
            }
            else if (Description == "") {
                $("#validations").show();
                return false;
            }
            else if (Pieces == "") {
                $("#validations").show();
                return false;
            }
            else if (Weight == "") {
                $("#validations").show();
                return false;
            }
            else if ($("#CourierCharge").val() == "") {
                $("#validations").show();
                return false;
            }
            else if ($("PackingCharge").val() == "") {
                $("#validations").show();
                return false;
            }
            else {
                return true;
            }
        });

        $("#HAWBNo").blur(function () {
            $.ajax({
                type: "POST",
                url: "/QuickAWB/GetPickUpData",
                datatype: "Json",
                data: { id: $('#AWBNo').val() },
                success: function (data) {

                    if (data.Exist == 1) {
                        $("#customerid").val(data.CustomerID);
                        $("#shipper").val(data.shipper);
                        $("#shippercontact").val(data.contactperson);
                        $("#shipperaddres").val(data.shipperaddress);
                        $("#ConsignorPhone").val(data.shipperphone);
                        $("#origincountry").val(data.shippercountry);
                        $("#orilocation").val(data.shipperlocation);
                        $("#Weight").val(data.weight);
                        BindCity(data.shippercity, data.LocationID);
                    

                        $("#consignee").val(data.consignee);
                        $("#consigneecontact").val(data.consigneecontact);
                        $("#Consigneeaddress").val(data.consigneeaddress);
                        $("#ConsigneePhone").val(data.consigneephone);
                        $("#destinationCountry").val(data.consigneecountry);
                        $("#destlocation").val(data.consigneelocation);
                      
                        BindConsigneeCity(data.consigneecity);

                    }

                   
                }
            });
        });



        $("#EnquiryNo").blur(function () {
            $("#origincity").empty();
            $('#origincity').append('<option value="0">Select</option>');

            $("#originlocation").empty();
            $('#originlocation').append('<option value="0">Select</option>');

            $.ajax({
                type: "POST",
                url: "/QuickAWB/GetCustomerDataByNO",
                datatype: "Json",
                data: { id: $('#EnquiryNo').val() },
                success: function (data) {
                    if (data.Exist == 1) {
                        $("#customerid").val(data.CustomerID);
                        $("#Weight").val(data.Weight);
                        $("#destinationCountry").val(data.ConsignerCountryId);
                        $("#origincountry").val(data.ConsigneeCountryID);
                        $("#origincity").val(data.ConsignerCityId);
                        $("#CourierType").val(data.DescriptionID);
                        $("#consignee").val(data.Consignee);
                        $("#Consignor").val(data.shipper);
                        $("#Consigneeaddress").val(data.ConsigneeAddress);
                        $("#shipperaddres").val(data.ConsignorAddress);
                        $("#ConsigneePhone").val(data.ConsigneePhone);
                        $("#ConsignorPhone").val(data.ConsignorPhone);
                        $("#consigneecontact").val(data.ConsigneeContact);
                        $("#ConsignorContact").val(data.shippercontact);
                        $("#originlocation").val(data.ConsignorLocationName);
                        $("#destinationLocation").val(data.ConsigneeLocationName);


                        BindCity(data.CityID);




                    }
                    else {
                        alert("Data Not Found");
                    }
                }

            });
        });

    });
</script>

<section class="content-header">
    <h1 class="headingfont">InScan Master</h1>

</section>




<section class="content">

    @using (Html.BeginForm())
    {

        <div id="validations" style="color:red;margin-left:7px;display:none">* Please fill mandatory fields</div>
        <input type="hidden" id="IsAvailable" value="0" />

        <div class="row no-margin" style="padding-top: 10px">
            <div class="col-md-12">
                <h3 style="color:white">PickUp Request</h3><hr />
            </div>

        </div>

        <div class="row no-margin">
            <div class="col-md-2">
                <label class="headinglabel">PickUp Request Date</label>
                @Html.TextBoxFor(model => model.PickupRequest_Date, new { @class = "form-control" })
            </div>
            <div class="col-md-3">
                <label class="headinglabel">Collected By</label>
                @Html.DropDownListFor(model => model.CollectedBy, new SelectList(@ViewBag.employee, "EmployeeID", "EmployeeName"), "Select", new { @class = "form-control" })
            </div>
            <div class="col-md-2">
                <label class="headinglabel">Collected Time</label>
                @Html.TextBoxFor(model => model.Collected_Date, new { @class = "form-control" })
            </div>
            <div class="col-md-2">
                <label class="headinglabel required">Device</label>
                @Html.TextBoxFor(model => model.DeviceID, new { @class = "form-control" })
            </div>
            <div class="col-md-3">
                <label class="headinglabel required">Airway Bill No.</label>
                @Html.TextBoxFor(model => model.AWBNo, new { @class = "form-control" })
            </div>
        </div>

        <div class="row no-margin" style="padding-top: 10px">
            <div class="col-md-12">
                <h3 style="color:white">Store Details</h3><hr />
            </div>
        </div>
        <div class="row no-margin">
            <div class="col-md-2">
                <label class="headinglabel">InScan Sheet No.</label>
                @Html.TextBoxFor(model => model.InScanSheetNo, new { @class = "form-control" })
            </div>
            <div class="col-md-2">
                <label class="headinglabel">InScan Date</label>
                @Html.TextBoxFor(model => model.InScanDate, new { @class = "form-control" })
            </div>
            <div class="col-md-2">
                <label class="headinglabel">Received By</label>
                @Html.DropDownListFor(model => model.ReceivedByID, new SelectList(@ViewBag.employee, "EmployeeID", "EmployeeName"), "Select", new { @class = "form-control" })
            </div>
            <div class="col-md-3">
                <label class="headinglabel required">Depot ID</label>
                @Html.DropDownListFor(model => model.DepotID, new SelectList(@ViewBag.depot, "ID", "Depot"), "Select", new { @class = "form-control" })
            </div>
            <div class="col-md-3">
                <label class="headinglabel required">Depot Country</label>
                @Html.TextBoxFor(model => model.DepotCountryID, new { @class = "form-control" })
            </div>
        </div>



        <div class="row no-margin" style="padding-top: 10px">
            <div class="col-md-6">
                <h3 style="color:white">Consignor</h3><hr />

                <div class="row no-margin">
                    <div class="row no-margin">
                        <div class="col-md-6">
                            <label class="headinglabel">Consignor Name</label>
                            @Html.TextBoxFor(model => model.Consignor, new { @class = "form-control" })
                        </div>
                        <div class="col-md-6">
                            <label class="headinglabel">Contact Name</label>
                            @Html.TextBoxFor(model => model.ConsignorContact, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="row no-margin">
                        <div class="col-md-6">
                            <label class="headinglabel">Address1</label>
                            @Html.TextBoxFor(model => model.ConsignorAddress, new { @class = "form-control" })
                        </div>
                        <div class="col-md-6">
                            <label class="headinglabel">Address2</label>
                            @Html.TextBoxFor(model => model.ConsignorAddress1, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="row no-margin">
                        <div class="col-md-6">
                            <label class="headinglabel">City</label>
                            @Html.TextBoxFor(model => model.ConsignorCityID, new { @class = "form-control" })
                        </div>
                        <div class="col-md-6">
                            <label class="headinglabel">Country</label>
                            @Html.TextBoxFor(model => model.ConsignorCountryID, new { @class = "form-control" })
                        </div>

                    </div>
                    <div class="row no-margin">
                        <div class="col-md-6">
                            <label class="headinglabel">Phone</label>
                            @Html.TextBoxFor(model => model.ConsignorPhone, new { @class = "form-control" })
                        </div>

                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <h3 style="color:white">Consignee</h3><hr />

                <div class="row no-margin">
                    <div class="row no-margin">
                        <div class="col-md-6">
                            <label class="headinglabel">Consignor Name</label>
                            @Html.TextBoxFor(model => model.Consignee, new { @class = "form-control" })
                        </div>
                        <div class="col-md-6">
                            <label class="headinglabel">Contact Name</label>
                            @Html.TextBoxFor(model => model.ConsigneeContact, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="row no-margin">
                        <div class="col-md-6">
                            <label class="headinglabel">Address1</label>
                            @Html.TextBoxFor(model => model.ConsigneeAddress, new { @class = "form-control" })
                        </div>
                        <div class="col-md-6">
                            <label class="headinglabel">Address2</label>
                            @Html.TextBoxFor(model => model.ConsigneeAddress1, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="row no-margin">
                        <div class="col-md-6">
                            <label class="headinglabel">City</label>
                            @Html.TextBoxFor(model => model.ConsigneeCityID, new { @class = "form-control" })
                        </div>
                        <div class="col-md-6">
                            <label class="headinglabel">Country</label>
                            @Html.TextBoxFor(model => model.ConsigneeCountryID, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="row no-margin">
                        <div class="col-md-6">
                            <label class="headinglabel">Phone</label>
                            @Html.TextBoxFor(model => model.ConsigneePhone, new { @class = "form-control" })
                        </div>

                    </div>
                </div>
            </div>
        </div>
        <div class="row no-margin" style="padding-top: 10px">
            <div class="col-md-12">
                <h3 style="color:white">Shipment Details</h3><hr />
            </div>
        </div>
        <div class="row no-margin">

            <div class="col-md-2">
                <label class="headinglabel required">Pieces</label>
                @Html.TextBoxFor(model => model.Pieces, new { @class = "form-control txttarget" })
            </div>
            <div class="col-md-2">
                <label class="headinglabel required">Weight</label>
                @Html.TextBoxFor(model => model.Weight, new { @class = "form-control txttarget" })
            </div>
            <div class="col-md-2">
                <label class="headinglabel required">Cargo Description</label>
                @Html.TextBoxFor(model => model.CargoDescription, new { @class = "form-control txttarget" })
            </div>
            <div class="col-md-2">
                <label class="headinglabel required">Stated Weight</label>
                @Html.TextBoxFor(model => model.StatedWeight, new { @class = "form-control txttarget" })
            </div>
            <div class="col-md-2">
                <label class="headinglabel required">CBM</label>
                @Html.TextBoxFor(model => model.CBM, new { @class = "form-control txttarget" })
            </div>
            <div class="col-md-2">
                <label class="headinglabel required">BagNo</label>
                @Html.TextBoxFor(model => model.BagNo, new { @class = "form-control txttarget" })
            </div>
        </div>

        <div class="row no-margin" style="padding-top: 10px">
            <div class="col-md-2">
                <label class="headinglabel required">Pallet No.</label>
                @Html.TextBoxFor(model => model.PalletNo, new { @class = "form-control txttarget" })
            </div>
            <div class="col-md-3">
                <label class="headinglabel required">Handling Instruction</label>
                @Html.TextBoxFor(model => model.HandlingInstruction, new { @class = "form-control textright" })
            </div>

            <div class="col-md-3">
                <label class="headinglabel required">Special Instructions</label>
                @Html.TextBoxFor(model => model.SpecialInstructions, new { @class = "form-control txttarget" })
            </div>

            <div class="col-md-3">
                <label class="headinglabel">Type of Good ID</label>
                @Html.TextBoxFor(model => model.TypeOfGoodID, new { @class = "form-control txttarget" })
            </div>
            <div class="col-md-3">
                <label class="headinglabel">Remarks</label>
                @Html.TextBoxFor(model => model.Remarks, new { @class = "form-control txttarget" })
            </div>


        </div>

        <div class="row no-margin" style="padding-top: 10px">
            <div class="col-md-12">
                <h3 style="color:white">Services Details</h3><hr />
            </div>
        </div>


        <div class="row no-margin" style="padding-top: 10px">
            <div class="col-md-3">
                <label class="headinglabel required">Courier Service</label>
                @Html.DropDownListFor(model => model.CourierServiceID, new SelectList(@ViewBag.depot, "ID", "Depot"), "Select", new { @class = "form-control" })
            </div>
            <div class="col-md-3">
                <label class="headinglabel required">Courier Status</label>
                @Html.DropDownListFor(model => model.CourierStatusID, new SelectList(@ViewBag.depot, "ID", "Depot"), "Select", new { @class = "form-control" })
            </div>

            <div class="col-md-3">
                <label class="headinglabel required">Courier Type</label>
                @Html.TextBoxFor(model => model.CourierType, new { @class = "form-control txttarget" })
            </div>
            <div class="col-md-3">
                <label class="headinglabel required">Movement</label>
                @Html.DropDownListFor(model => model.MovementID, new SelectList(@ViewBag.depot, "ID", "Depot"), "Select", new { @class = "form-control" })
            </div>
            <div class="col-md-3">
                <label class="headinglabel required">Product Type</label>
                @Html.DropDownListFor(model => model.ProductTypeID, new SelectList(@ViewBag.depot, "ID", "Depot"), "Select", new { @class = "form-control" })
            </div>
        </div>



        @*<div class="row no-margin" style="padding-top: 10px">
                <div class="col-md-12">
                    <h3 style="color:white">Cargo Details</h3><hr />
                </div>

            </div>




            <div class="row no-margin" style="padding-top: 10px">

                <h3 style="color:white">Rates And Charges</h3><hr />

            </div>

            <div class="row no-margin" style="padding-top: 10px">


                <div class="col-md-3">
                    <label class="headinglabel required">Customer Rate Type</label>
                    @Html.DropDownListFor(model => model.CustomerRateTypeID, new SelectList(@ViewBag.customerrate, "CustomerRateTypeID", "CustomerRateType1"), "Select", new { @class = "form-control" })
                </div>

                <div class="col-md-3">
                    <label class="headinglabel">Material Cost</label>
                    @Html.TextBoxFor(model => model.materialcost, new { @class = "form-control txtright textright" })
                </div>
                <div class="col-md-3">
                    <label class="headinglabel">Remarks</label>
                    @Html.TextBoxFor(model => model.remarks, new { @class = "form-control txttarget" })
                </div>
                <div class="col-md-3">
                    <label class="headinglabel required">Courier Charge</label>
                    @Html.TextBoxFor(model => model.CourierCharge, new { @class = "form-control textright" })
                </div>

            </div>

            <div class="row no-margin" style="padding-top: 10px">

                <div class="col-md-3">
                    <label class="headinglabel required">Packing Charge</label>
                    @Html.TextBoxFor(model => model.PackingCharge, new { @class = "form-control textright" })
                </div>
                <div class="col-md-3">
                    <label class="headinglabel">Customs Charge</label>
                    @Html.TextBoxFor(model => model.CustomCharge, new { @class = "form-control textright" })
                </div>

                <div class="col-md-3">
                    <label class="headinglabel">Other Charge</label>
                    @Html.TextBoxFor(model => model.OtherCharge, new { @class = "form-control textright" })
                </div>
                <div class="col-md-3">
                    <label class="headinglabel">Total</label>
                    @Html.TextBoxFor(model => model.totalCharge, new { @class = "form-control textright" })
                </div>




            </div>


            <div class="row no-margin" style="padding-top:10px">


                <div class="col-md-3">
                    <label class="headinglabel">Picked up By</label>
                    @Html.DropDownListFor(model => model.PickedBy, new SelectList(@ViewBag.Employee, "EmployeeID", "EmployeeName"), "Select", new { @class = "form-control" })
                </div>

                <div class="col-md-3">
                    <label class="headinglabel">Depot Received By</label>
                    @Html.DropDownListFor(model => model.ReceivedBy, new SelectList(@ViewBag.Employee, "EmployeeID", "EmployeeName"), "Select", new { @class = "form-control" })
                </div>

            </div>


            <div class="row no-margin" style="padding-top: 10px">

                <h3 style="color:white">Forwarding Agent Details</h3><hr />

            </div>

            <div class="row no-margin" style="padding-top: 10px">

                <div class="col-md-3">
                    <label class="headinglabel">Add Forwarding Agent</label>
                    @Html.DropDownListFor(model => model.FagentID, new SelectList(@ViewBag.FAgent, "FAgentID", "FAgentName"), "Select", new { @class = "form-control" })
                </div>


                <div class="col-md-3">
                    <label class="headinglabel">Forwarding AWB</label>
                    @Html.TextBoxFor(model => model.FAWBNo, new { @class = "form-control" })
                </div>

                <div class="col-md-3">
                    <label class="headinglabel">Forwarding Charge</label>
                    @Html.TextBoxFor(model => model.ForwardingCharge, new { @class = "form-control textright" })
                </div>
            </div>

            <div class="row no-margin" style="padding-top: 10px">
                <div class="col-md-12">

                    <input type="submit" value="Save" class="btn btn-primary btnwidth" id="btnsave" />&nbsp;&nbsp;<a href='@Url.Action("Index", "QuickAWB", new { id = 0 })' class="btn btn-primary btnwidth" data-toggle="tooltip" data-placement="right" title="Click here">Cancel</a>


                </div>
            </div>*@

    }



</section>