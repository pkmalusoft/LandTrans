@model LTMSV2.Models.ExportShipmentFormModel
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_TrueBookMstr.cshtml";
    // var cities = (IEnumerable<CourierMVC.EntityFramework.S_CityMaster>)ViewBag.Cities;
}
<style>

    /*.reve_rates {
        min-width: 16%;
        max-width: 16%;
        padding-left: 13px !important;
    }

    .reve_rates1 {
        max-width: 4%;
        padding-left: 13px !important;
    }

    .reve_rates2 {
        max-width: 8%;
        padding-left: 13px !important;
    }

    .reve_rates3 {
        min-width: 20%;
        max-width: 20%;
        padding-left: 13px !important;
    }

    .reve_rates > label {
        font-size: 1rem !important;
    }

    .reve_rates1 > label {
        font-size: 1rem !important;
    }

    .reve_rates2 > label {
        font-size: 1rem !important;
    }

    .reve_rates > input {
        font-size: 12px !important;
    }

    .reve_rates1 > input {
        font-size: 12px !important;
    }

    .reve_rates2 > input {
        font-size: 12px !important;
    }

    .reve_rates3 > label {
        font-size: 1rem !important;
    }

    .reve_rates3 > textarea {
        min-height: 4rem !important;
        font-size: 12px !important;
    }*/

    table.table td {
        font-size: 12px !important;
    }

    .xdsoft_calendar > table.table th, table th {
        font-weight: 400 !important;
        line-height: 15px !important;
    }

    .xdsoft_calendar > table.table th, table.table td, table th, table td {
        font-size: 12px !important;
        vertical-align: middle !important;
        padding: 0 !important;
    }
</style>

<script src="~/Content/NewCSS/plugins/jQuery/moment.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.43/js/bootstrap-datetimepicker.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.43/css/bootstrap-datetimepicker.min.css" />

<script type="text/javascript">
     $(function () {
        $('#FlightDate').datetimepicker({ format: 'DD-MM-YYYY HH:mm' });
    });
    //    google.maps.event.addDomListener(window, 'load', function () {
    //        var places = new google.maps.places.Autocomplete(document.getElementById('txtPlaces'));
    //        google.maps.event.addListener(places, 'place_changed', function () {
    //            var place = places.getPlace();
    //    var address = place.formatted_address;
    //    var latitude = place.geometry.location.A;
    //    var longitude = place.geometry.location.F;
    //    var mesg = "Address: " + address;
    //    mesg += "\nLatitude: " + latitude;
    //    mesg += "\nLongitude: " + longitude;
    //    alert(mesg);
    //});
    //    });

    var placeSearch, autocomplete, originairportCity, destinationairportCity, destinationCity, destinationCountry;

    var componentForm = {
        street_number: 'short_name',
        route: 'long_name',
        locality: 'long_name',
        administrative_area_level_1: 'short_name',
        country: 'long_name',
        postal_code: 'short_name'
    };

    function initAutocomplete() {
        // Create the autocomplete object, restricting the search predictions to
        // geographical location types.
        //autocomplete = new google.maps.places.Autocomplete(
        //    document.getElementById('autocomplete'), { types: ['geocode'] });

        //// Avoid paying for data that you don't need by restricting the set of
        //// place fields that are returned to just the address components.
        //autocomplete.setFields(['address_component']);

        // When the user selects an address from the drop-down, populate the
        // address fields in the form.
        //    autocomplete.addListener('place_changed', fillInAddress);


        originairportCity = new google.maps.places.Autocomplete(
            document.getElementById('OriginAirportCity'), { types: ['geocode'] });



        destinationairportCity = new google.maps.places.Autocomplete(
            document.getElementById('DestinationAirportCity'), { types: ['geocode'] });

        destinationCity = new google.maps.places.Autocomplete(
            document.getElementById('tDestinationCityID'), { types: ['geocode'] });

        destinationCountry = new google.maps.places.Autocomplete(
            document.getElementById('tDestinationCountryID'), { types: ['geocode'] });

    }

    function fillInAddress() {
        debugger;
        // Get the place details from the autocomplete object.
        var place = autocomplete.getPlace();
        console.log(place.address_components);

        //for (var component in componentForm) {
        //  document.getElementById(component).value = '';
        //  document.getElementById(component).disabled = false;
        //}

        // Get each component of the address from the place details,
        // and then fill-in the corresponding field on the form.
        //for (var i = 0; i < place.address_components.length; i++) {
        //  var addressType = place.address_components[i].types[0];
        //  if (componentForm[addressType]) {
        //    var val = place.address_components[i][componentForm[addressType]];
        //    document.getElementById(addressType).value = val;
        //  }
        //      }

        var postcode = '';
        $.each(place.address_components, function (index, component) {
            var types = component.types;
            $.each(types, function (index, type) {
                if (type == 'postal_code') {
                    postcode = component.long_name;
                }
                else if (type == 'locality') {
                    //$('#hdncity').val(component.long_name);
                    $('#CityName').val(component.long_name);
                }
                else if (type == 'country') {
                    $('#CountryName').val(component.long_name);
                }

                //if(type == 'administrative_area_level_1') {
                //state = component.short_name;
                //    }
            });
        });

    }

    // Bias the autocomplete object to the user's geographical location,
    // as supplied by the browser's 'navigator.geolocation' object.
    function geolocate() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function (position) {
                var geolocation = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                };
                var circle = new google.maps.Circle(
                    { center: geolocation, radius: position.coords.accuracy });
                autocomplete.setBounds(circle.getBounds());
            });
        }
    }

    function geoCitylocate(obj) {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function (position) {
                var geolocation = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                };
                var circle = new google.maps.Circle(
                    { center: geolocation, radius: position.coords.accuracy });
                $(obj).setBounds(circle.getBounds());
            });
        }
    }

    function geoCountrylocate() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function (position) {
                var geolocation = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                };
                var circle = new google.maps.Circle(
                    { center: geolocation, radius: position.coords.accuracy });
                autocompleteCountry.setBounds(circle.getBounds());
            });
        }
    }
</script>
<section class="content-header">
    <div class="row">
        <div class="col-md-5 pull-left">
            <h1 class="headingfont">Create Shipments</h1>
        </div>
        @*<div class="col-md-5 pull-right text-right">
                <h2 class="awb"><strong>@ViewBag.AWBNo</strong></h2>
                <h5 id="h1status" style="color:red">@ViewBag.Status</h5>

            </div>*@
        <hr />
    </div>
    <section class="content">
        @using (Html.BeginForm("CreateExport", "ExportShipment", FormMethod.Post, new { @id = "exportShipment" }))
        {
            @Html.AntiForgeryToken()


            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="col-12">
                <div class="row">
                    <div class="col-md-6 row">
                        <div class="col-md-6 col-12">
                            <div class="form-group">
                                @Html.HiddenFor(model => model.ID)
                                <label class="headinglabel">Consignor Name</label>
                                <div>
                                    @Html.TextBoxFor(model => model.ConsignorName, new { @class = "form-control", @disabled = "true", @style = "text-decoration:none", @width = "100%" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ConsignorCountryName, "Origin Country", htmlAttributes: new { @class = "headinglabel" })
                                <div>
                                    @Html.TextBoxFor(model => model.ConsignorCountryName, new { @class = "form-control", @disabled = "true", @style = "text-decoration:none", @width = "100%" })
                                    @Html.ValidationMessageFor(model => model.ConsignorCountryName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ConsignorCityName, "Origin City", htmlAttributes: new { @class = "headinglabel" })
                                <div>
                                    @Html.TextBoxFor(model => model.ConsignorCityName, new { @class = "form-control", @disabled = "true", @style = "text-decoration:none", @width = "100%" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ConsignorAddress, "Consignor Address", htmlAttributes: new { @class = "headinglabel" })
                                <div>
                                    @Html.TextAreaFor(model => model.ConsignorAddress, new { @class = "form-control", @rows = "3", @style = "text-decoration:none", @disabled = "true" })
                                    @Html.ValidationMessageFor(model => model.ConsignorAddress, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6 col-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.AgentID, "Consignee Name", htmlAttributes: new { @class = "headinglabel" })
                                <div>
                                    @*@Html.DropDownListFor(model => model.AgentID, new SelectList(@ViewBag.AgentList, "AgentID", "Name"), Model.AgentID, htmlAttributes: new { @class = "form-control", @required = "true", @selected = @Model.AgentID })*@
                                    @Html.DropDownListFor(model => model.AgentID, new SelectList(@ViewBag.AgentList, "AgentID", "Name"), "Select", new { @class = "form-control" })
                                    @*@Html.DropDownListFor(model => model.AgentID, null, "Select Agent", htmlAttributes: new { @class = "form-control", @required = "true" })*@
                                    @Html.ValidationMessageFor(model => model.AgentID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ConsigneeCountryName, "Destination Country", htmlAttributes: new { @class = "headinglabel" })
                                <div>
                                    @Html.TextBoxFor(model => model.ConsigneeCountryName, new { @class = "form-control", @disabled = "true", @style = "text-decoration:none", @width = "100%" })
                                    @Html.ValidationMessageFor(model => model.ConsigneeCountryName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ConsigneeAddress, "Consignee Address", htmlAttributes: new { @class = "headinglabel required" })
                                <div>
                                    @Html.TextAreaFor(model => model.ConsigneeAddress, new { @class = "form-control", @rows = "3", @style = "text-decoration:none", @required = "true", @disabled = "true" })
                                    @Html.ValidationMessageFor(model => model.ConsigneeAddress, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 row">
                        <div class="col-md-6 col-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ManifestNumber, "Manifest Number", htmlAttributes: new { @class = "headinglabel " })
                                <div>
                                    <input type="text" value="@Model.ManifestNumber" class="form-control" disabled style="text-decoration:none" />
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.OriginAirportCity, "Origin Airport City", htmlAttributes: new { @class = "headinglabel required" })
                                <div>
                                    @Html.TextBoxFor(model => model.OriginAirportCity, new { @class = "form-control", @required = "true" })
                                    @Html.ValidationMessageFor(model => model.OriginAirportCity, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.FlightDate, "Origin Flight Date", htmlAttributes: new { @class = "headinglabel required" })
                                <div>
                                    @Html.TextBoxFor(model => model.FlightDate, new { @class = "form-control", @required = "true" })
                                    @Html.ValidationMessageFor(model => model.FlightDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.FlightNo, "Origin Flight Number", htmlAttributes: new { @class = "headinglabel required" })
                                <div>
                                    @Html.TextBoxFor(model => model.FlightNo, new { @class = "form-control", @required = "true" })
                                    @Html.ValidationMessageFor(model => model.FlightNo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.MAWB, htmlAttributes: new { @class = "headinglabel required" })
                                <div>
                                    @Html.TextBoxFor(model => model.MAWB, new { @class = "form-control", @required = "true" })
                                    @Html.ValidationMessageFor(model => model.MAWB, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>
                        <div class="col-md-6 col-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.CreatedDate, "Manifest Date", htmlAttributes: new { @class = "headinglabel" })
                                <div>
                                    <input type="text" class="form-control" value="@Model.CreatedDate" disabled style="text-decoration:none" />
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.DestinationAirportCity, "Destination Airport City", htmlAttributes: new { @class = "headinglabel required" })
                                <div>
                                    @Html.TextBoxFor(model => model.DestinationAirportCity, new { @class = "form-control", @required = "true" })
                                    @Html.ValidationMessageFor(model => model.DestinationAirportCity, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="row " style="margin-bottom: -15px !important">
                                <div class="col-md-4  form-group">
                                    @Html.LabelFor(model => model.Bags, htmlAttributes: new { @class = "headinglabel required" })
                                    <div>
                                        @Html.TextBoxFor(model => model.Bags, new { @class = "form-control", @required = "true" })
                                        @Html.ValidationMessageFor(model => model.Bags, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4 form-group">
                                    @Html.LabelFor(model => model.RunNo, htmlAttributes: new { @class = "headinglabel required" })
                                    <div>
                                        @Html.TextBoxFor(model => model.RunNo, new { @class = "form-control", @required = "true" })
                                        @Html.ValidationMessageFor(model => model.RunNo, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4  form-group">
                                    @Html.LabelFor(model => model.CD, htmlAttributes: new { @class = "headinglabel required" })
                                    <div>
                                        @Html.TextBoxFor(model => model.CD, new { @class = "form-control", @required = "true" })
                                        @Html.ValidationMessageFor(model => model.CD, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "headinglabel required" })
                                <div>
                                    @Html.DropDownListFor(model => model.Type, (IEnumerable<SelectListItem>)ViewBag.Type, Model.Type, htmlAttributes: new { @class = "form-control", @required = "true" ,@selected=@Model.Type})
                                    @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.TotalAWB, htmlAttributes: new { @class = "headinglabel required" })
                                <div>
                                    @Html.TextBoxFor(model => model.TotalAWB, new { @class = "form-control", @min = 1, @required = "true" })
                                    @Html.ValidationMessageFor(model => model.TotalAWB, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <div class="col-md-12" id="Details">
                <div class="row form-group">

                    <div class="col-md-2 reve_rates1">
                        <label class="headinglabel">S.No</label>
                        <input type="hidden" id="tSerialNum" name="tSerialNum" class="form-control" value="0" />
                        <input type="text" id="tSerialNum1" name="tSerialNum1" class="form-control" value="0" readonly />
                    </div>
                    <div class="col-md-2 reve_rates">
                        <label class="headinglabel required">HAWB</label>
                        <input type="text" id="tHAWB" name="tHAWB" class="form-control" />
                    </div>
                    <div class="col-md-2 reve_rates">
                        <label class="headinglabel required">AWB</label>
                        <input type="text" id="tAWB" name="tAWB" class="form-control" />
                    </div>
                    <div class="col-md-2 reve_rates2">
                        <label class="headinglabel required">Bag.No</label>
                        <input type="text" id="tBagNo" name="tBagNo" class="form-control" />
                    </div>
                    <div class="col-md-2 reve_rates">
                        <label class="headinglabel required">Contents</label>
                        <input type="text" id="tContents" name="tContents" class="form-control" />
                    </div>
                    <div class="col-md-2 reve_rates2">
                        <label class="headinglabel required">Pcs</label>
                        <input type="number" id="tPCS" name="tPCS" class="form-control" value="0" />
                    </div>
                    <div class="col-md-2 reve_rates2">
                        <label class="headinglabel required">Weight</label>
                        <input type="number" id="tWeight" name="tWeight" class="form-control" value="0" />
                    </div>
                    <div class="col-md-2 reve_rates2">
                        <label class="headinglabel required">Value</label>
                        <input type="number" id="tValue" name="tValue" class="form-control" value="0" />
                    </div>
                    <div class="col-md-2 reve_rates">
                        <label class="headinglabel required">Currency</label>
                        <select id="tCurrencyID" name="tCurrencyID" class="form-control">
                            <option value="">Select Currency</option>
                            @foreach (var item in ViewBag.CurrencyID)
                            {
                                <option value="@item.CurrencyID">@item.CurrencyName</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="row form-group">
                    <div class="col-md-3 reve_rates3">
                        <label class="headinglabel required">Shipper</label>
                        <textarea id="tShipper" name="tShipper" class="form-control" rows="2"></textarea>
                    </div>
                    <div class="col-md-3 reve_rates3">
                        <label class="headinglabel required">Receiver</label>
                        <textarea id="tReciver" name="tReciver" class="form-control" rows="5"></textarea>
                    </div>
                    <div class="col-md-3 reve_rates3">
                        <label class="headinglabel required">Destination Country</label>
                        @*<select id="tDestinationCountryID" name="tDestinationCountryID" class="form-control dcountry">
                                <option value="">Select Country</option>

                                @foreach (var item in ViewBag.DestinationCountryID.Items)
                                {
                                    <option value="@item.CountryID">@item.CountryName</option>
                                }
                            </select>*@
                        <input id="tDestinationCountryID" name="tDestinationCountryID" type="text" class="form-control">
                    </div>
                    <div class="col-md-3 reve_rates3">
                        <label class="headinglabel required">Destination City</label>
                        @*<select id="tDestinationCityID" name="tDestinationCityID" style="max-width:100% !important" class="form-control dcity">
                                <option value="">Select City</option>
                                @foreach (var item in ViewBag.Cities)
                                {
                                    <option value="@item.CityID">@item.City</option>
                                }
                            </select>*@
                        <input id="tDestinationCityID" name="tDestinationCityID" type="text" class="form-control">
                    </div>
                    <input type="hidden" id="tId" name="tId" value="0" />
                    <input type="hidden" id="tfwdagent" name="tfwdagent" value="0" />
                    <input type="hidden" id="tfwdawb" name="tfwdawb" value="" />
                    <input type="hidden" id="tfwddate" name="tfwddate" value="" />
                    <input type="hidden" id="tfwdcharge" name="tfwdcharge" value="0" />
                    <input type="hidden" id="totherchrg" name="totherchrg" value="0" />
                    <input type="hidden" id="tfwdflight" name="tfwdflight" value="" />
                    <div class="row form-group" id="addbtndiv" style="width:15%;text-align:right;margin-top:30px">
                        <button type="button" class="btn btn-primary  waves-effect waves-light" onclick="addShipment1()" id="Newbtn">New</button>
                        @*<button type="button" class="btn btn-secondary waves-effect waves-light" style="margin:0 0 0 0 !important" onclick="CancelDetails()">Cancel</button>*@
                    </div>
                    <div class="form-group" id="updatebtndiv" style="width:18%;text-align:right;margin-top:30px;display:none">
                        <button type="button" class="btn btn-primary waves-effect waves-light" style="margin:0 0 0 0 !important" onclick="UpdateDetails()" id="Updatebtn">Update</button>
                        <button type="button" class="btn btn-secondary waves-effect waves-light" style="margin:0 0 0 0 !important" onclick="CancelDetails()">Cancel</button>
                    </div>
                    <span style="color:red;display:none" id="DetailsError">* Please fill all required fields</span>
                </div>
            </div>
            <div class="col-md-12">
                <table class="table table-responsive table-bordered tblfont" role="grid" aria-describedby="datatable-1_info" style="min-width: 100%" id="DetailsTable">
                    @*<table class="table" style="min-width: 100%">*@
                    <thead class="input-table">
                        <tr>
                            <th width="20px">
                                S.No
                            </th>
                            <th>
                                HAWB
                            </th>
                            <th>
                                AWB
                            </th>
                            <th>
                                PCS
                            </th>
                            <th>
                                Weight
                            </th>
                            <th>
                                Value
                            </th>
                            <th>
                                Contents
                            </th>
                            <th>
                                Shipper
                            </th>
                            <th>
                                Reciver
                            </th>
                            <th>
                                Destination
                            </th>
                            <th>
                                Bags
                            </th>
                            <th width="10%">
                                FWD Agent
                            </th>
                            <th width="8%">
                                FWD Agent AWB
                            </th>
                            <th width="8%">
                                FWD Date
                            </th>
                            <th width="60px">
                                FWD Flight
                            </th>
                            <th width="40px">
                                FWD Charge
                            </th>
                            <th width="40px">
                                Other Charge
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody class="input-table" id="listContainer">
                        @{Html.RenderPartial("ExportShipmentList", Model);}
                    </tbody>
                </table>
            </div>
            <hr />
            @*<div class="form-group col-lg-3 col-md-6 col-sm-12 float-right" style="display:flex">
                    <div class="col-md-4">
                        @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-secondary btn-sm waves-effect waves-light float-right" })
                    </div>
                    <div class="col-md-4">
                        <input type="submit" value="Submit" class="btn btn-primary waves-effect waves-light" />
                    </div>
                </div>*@
            <div class="row no-margin" style="padding-top: 10px">
                <div class="col-md-12 btn-right">
                    @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-secondary btn-sm waves-effect waves-light float-right" })
                    <input type="submit" value="Submit" class="btn btn-primary waves-effect waves-light" />
                </div>

            </div>

        }

    </section>
</section>
        @*@Styles.Render("~/assets/Datetimepicker/jquery.datetimepicker.css")

        @Scripts.Render("~/assets/Datetimepicker/jquery.datetimepicker.full.js");*@

        <script>

        //function initialize() {
        //    var options = {
        //        types: ['(cities)'],
        //    };
        //    var options1 = {
        //        types: ['(regions)'],
        //    };

        //    var input2 = document.getElementById('DestinationCity');
        //    new google.maps.places.Autocomplete(input2, options);
        //    var input3 = document.getElementById('OriginCity');
        //    new google.maps.places.Autocomplete(input3, options);
        //    var input1 = document.getElementById('tDestinationCityID');
        //    new google.maps.places.Autocomplete(input1, options);
        //    var input = document.getElementById('tDestinationCountryID');
        //    new google.maps.places.Autocomplete(input, options1);
        //}

        //google.maps.event.addDomListener(window, 'load', initialize);
        $("#AgentID").change(function () {
            debugger;
            var id = $(this).val();
            if (id == "" || id == null) {
                id = 0;
                $("#ConsigneeCountryName").val("");                
                $("#ConsigneeCityName").val("");
                $("#ConsigneeAddress").val("");
            }
            if (id > 0) {
                $.get("/ExportShipment/GetAgentBy_Id", { Id: id }, function (data) {
                    $("#ConsigneeCountryName").val(data.CountryName);
                    $("#ConsigneeCityName").val(data.CountryName);
                    $("#ConsigneeAddress").val(data.address);

                    // Addshipment(data.CountryId);

                });
            };
        });

        //$("#tDestinationCountryID").change(function () {
        //    var id = $(this).val();
        //    $("#tDestinationCityID").empty();
        //    $.get("/DataFetch/GetCity", { id: id }, function (data) {
        //        if (data.length > 0) {
        //            var v = "<option>Select City</option>";
        //            $.each(data, function (i, v1) {
        //                v += "<option value=" + v1.Value + ">" + v1.Text + "</option>";
        //            });
        //            $("#tDestinationCityID").prop("disabled", false);
        //            $("#tDestinationCityID").html(v);
        //            $("#tDestinationCityID").css("width", "100% !important");

        //        } else {
        //            var v = "<option>Select City</option>";
        //            $("#tDestinationCityID").html(v);
        //            $("#tDestinationCityID").prop("disabled", true);
        //            $("#tDestinationCityID").css("width", "100% !important");
        //        };
        //    });
        //});
        $(document).ready(function () {

            $("#CreatedDate").datetimepicker({ format: 'DD-MM-YYYY HH:mm' });
            $("#CreatedDate").datetimepicker("setDate", new Date());
            //$("#Date").datetimepicker({ format: 'DD-MM-YYYY HH:mm' });
            //$("#Date").datetimepicker("setDate", new Date());
            //tSerialNum1
            var snoval = parseInt('@Model.Shipments.Count') + 1;
            $("#tSerialNum1").val(snoval)
           //$("#TotalAWB").val('');
            $("#importshipment").addClass("active");

            $("#btnSubmit").click(function () {
                debugger;
                var detailslen = $('#DetailsTable > tbody > tr').length;
                if (detailslen == 0) {
                    alert("Please add Shipment Details");
                    return false;
                } else {
                    return true;
                }

            });
        });



        function addShipment1() {
            $("#Newbtn").text("Add");
            var validation = ValidateDetails();
            if (validation == 1) {
                var data1 = new FormData();
                $("#DetailsError").css("display", "none");

                data1.append("tSerialNum", $("#tSerialNum").val());
                data1.append("isupdate", false);

                data1.append("tHAWB", $("#tHAWB").val());
                data1.append("tAWB", $("#tAWB").val());
                data1.append("tBagNo", $("#tBagNo").val());
                data1.append("tContents", $("#tContents").val());
                data1.append("tPCS", $("#tPCS").val());
                data1.append("tWeight", $("#tWeight").val());
                data1.append("tValue", $("#tValue").val());
                data1.append("tCurrencyID", $("#tCurrencyID").val());
                data1.append("tShipper", $("#tShipper").val());
                data1.append("tReciver", $("#tReciver").val());
                data1.append("tDestinationCountryID", $("#tDestinationCountryID").val());
                data1.append("tDestinationCityID", $("#tDestinationCityID").val());
                data1.append("tfwdagent", $("#tfwdagent").val());
                data1.append("tfwdawb", $("#tfwdawb").val());
                data1.append("tfwddate", $("#tfwddate").val());
                data1.append("tfwdcharge", $("#tfwdcharge").val());
                data1.append("totherchrg", $("#totherchrg").val());
                data1.append("tfwdflight", $("#tfwdflight").val());
                data1.append("tId", $("#tId").val());
                debugger;
                var fullform = $('form#exportShipment').serialize();
                debugger;

                $.ajax({
                    url: '@Url.Action("AddShippmentToTable", "ExportShipment")',
                    cache: false,
                    contentType: false,
                    processData: false,
                    type: 'POST',
                    data: data1,
                    success: function (data) {
                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("AddOrRemoveShipment1", "ExportShipment")',
                            datatype: "html",
                            data: {
                                ship: fullform
                            },
                            success: function (data) {
                                $("#listContainer").html(data);
                                $("#Shipments_0__FwdAgentId").change(function () {
                                    $("#DetailsTable .ForwardAgent").val($(this).val())
                                });
                                $("#Shipments_0__FwdAgentId").change(function () {
                                    $("#DetailsTable .ForwardAwb").val($(this).val())
                                });
                                $("#Shipments_0__FwdDate").change(function () {

                                    $("#DetailsTable .ForwardDate").val($(this).val())
                                });
                                $(".ForwardDate").datetimepicker({
                                    format: 'd-m-Y H:i',
                                    step: 15
                                });
                                $("#tSerialNum").val(0);
                                $("#tHAWB").val('');
                                $("#tAWB").val('');
                                $("#tBagNo").val(0);
                                $("#tContents").val('');
                                $("#tPCS").val(0);
                                $("#tWeight").val(0);
                                $("#tValue").val(0);
                                $("#tCurrencyID").val('');
                                $("#tShipper").val('');
                                $("#tReciver").val('');
                                $("#tDestinationCountryID").val('');
                                $("#tDestinationCityID").val('');
                                //$("#tDestinationCityID").prop("disabled", true);
                                $("#tfwdagent").val(0);
                                $("#tfwdawb").val('');
                                $("#tfwddate").val('');
                                $("#tfwdcharge").val(0);
                                $("#totherchrg").val(0);
                                $("#tfwdflight").val('');
                                $("#tId").val(0);

                            }
                        });
                        //$("#listContainer").html(data);
                    }
                });
            } else {
                $("#DetailsError").css("display", "block");
            }
        }

        function UpdateDetails() {
            debugger;
            var validation = ValidateDetails();
            if (validation == 1) {
                var data1 = new FormData();
                $("#DetailsError").css("display", "none");

                data1.append("tSerialNum", $("#tSerialNum").val());
                data1.append("isupdate", true);
                data1.append("tHAWB", $("#tHAWB").val());
                data1.append("tAWB", $("#tAWB").val());
                data1.append("tBagNo", $("#tBagNo").val());
                data1.append("tContents", $("#tContents").val());
                data1.append("tPCS", $("#tPCS").val());
                data1.append("tWeight", $("#tWeight").val());
                data1.append("tValue", $("#tValue").val());
                data1.append("tCurrencyID", $("#tCurrencyID").val());
                data1.append("tShipper", $("#tShipper").val());
                data1.append("tReciver", $("#tReciver").val());
                data1.append("tDestinationCountryID", $("#tDestinationCountryID").val());
                data1.append("tDestinationCityID", $("#tDestinationCityID").val());
                data1.append("tfwdagent", $("#tfwdagent").val());
                data1.append("tfwdawb",   $("#tfwdawb").val());
                data1.append("tfwddate",  $("#tfwddate").val());
                data1.append("tfwdcharge", $("#tfwdcharge").val());
                data1.append("totherchrg", $("#totherchrg").val());
                data1.append("tfwdflight", $("#tfwdflight").val());

                data1.append("tId", $("#tId").val());
                $.ajax({
                    url: '@Url.Action("AddShippmentToTable", "ExportShipment")',
                    cache: false,
                    contentType: false,
                    processData: false,
                    type: 'POST',
                    data: data1,
                    success: function (data) {
                        $.ajax({
                            url: '@Url.Action("AddOrRemoveShipment1", "ExportShipment")',
                            type: 'post',
                            dataType: 'html',
                            data: {
                               ship: $('form#exportShipment').serialize()
                            },
                            success: function (data) {
                                $("#listContainer").html(data);

                                $("#tSerialNum").val(0);
                                $("#tHAWB").val('');
                                $("#tAWB").val('');
                                $("#tBagNo").val(0);
                                $("#tContents").val('');
                                $("#tPCS").val(0);
                                $("#tWeight").val(0);
                                $("#tValue").val(0);
                                $("#tCurrencyID").val('');
                                $("#tShipper").val('');
                                $("#tReciver").val('');
                                $("#tDestinationCountryID").val('');
                                $("#tDestinationCityID").val('');
                                //$("#tDestinationCityID").prop("disabled", false);
                                $("#tId").val(0);
                                $("#tfwdagent").val(0);
                              $("#tfwdawb").val('');
                              $("#tfwddate").val('');
                                 $("#tfwdcharge").val(0);
                               $("#totherchrg").val(0);
                               $("#tfwdflight").val('');
                                $("#updatebtndiv").css('display', 'none');

                                $("#addbtndiv").css('display', 'block');
                            }
                        });
                        //$("#listContainer").html(data);
                    }
                });

            } else {
                $("#DetailsError").css("display", "block");

            }
        }

        function ValidateDetails() {
         var hawb=   $("#tHAWB").val();
         var awb=  $("#tAWB").val();
         var bno=   $("#tBagNo").val();
         var content=  $("#tContents").val();
         var pcs=    $("#tPCS").val();
         var weigh=   $("#tWeight").val();
         var valu=  $("#tValue").val();
         var curency=  $("#tCurrencyID").val();
         var shiper= $("#tShipper").val();
         var reciver= $("#tReciver").val();
         var destcountry=  $("#tDestinationCountryID").val();
            var destcity = $("#tDestinationCityID").val();

            if (hawb = '' || awb == '' || bno == '' || content == '' || pcs == '' || weigh == '' || valu == '' || curency == '' || shiper == '' || reciver == '' || destcountry == '' || destcity=='') {
                return 0;
            } else if (hawb = null || awb == null || bno == null || content == null || pcs == null || weigh == null || valu == null || curency == null || shiper == null || reciver == null || destcountry == null || destcity == null) {
                return 0;
            }
            else {
                return 1;
            }
        }
            function deleteShipment(i) {
                console.log($('form#exportShipment').serialize());
            $.ajax({
                url: '@Url.Action("AddOrRemoveShipment1", "ExportShipment")?i='+i,
                type: 'post',
                dataType: 'html',
                data:   {
                                ship: $('form#exportShipment').serialize(),i:i
                            },
                success: function (data) {
                    $("#listContainer").html(data);
                    var detailslen = $('#DetailsTable > tbody > tr').length;
                    if (detailslen == 0) {

                        $("#Newbtn").text("New");
                    }
                    CancelDetails();
                }
               });

        }
            function EditShipment(i) {
                alert('h');
            $.ajax({
                url: '@Url.Action("GetShipmentDetails", "ExportShipment")?i=' + i,
                type: 'post',
                dataType: 'Json',
                 data: $('form#exportShipment').serialize(),
                //data:   {
                //                ship: $('form#exportShipment').serialize(),i:i
                //            },
                success: function (response) {
                    debugger;
                    alert('ok');
                    if (response.success == true) {
                        var data = response.data;
                        $("#tSerialNum").val(response.ival);
                        $("#tHAWB").val(data.HAWB);
                        $("#tAWB").val(data.AWB);
                        $("#tBagNo").val(data.BagNo);
                        $("#tContents").val(data.Contents);
                        $("#tPCS").val(data.PCS);
                        $("#tWeight").val(data.Weight);
                        $("#tValue").val(data.Value);
                        $("#tCurrencyID").val(data.CurrencyID);
                        $("#tShipper").val(data.Shipper);
                        $("#tReciver").val(data.Reciver);
                        $("#tDestinationCountryID").val(data.DestinationCountry);
                        $("#tDestinationCityID").val(data.DestinationCity);
                        $("#tfwdagent").val(data.FwdAgentId);
                        $("#tfwdawb").val(data.FwdAgentAWBNo);
                        $("#tfwddate").val(data.FwdDate);
                        $("#tfwdcharge").val(data.FwdCharge);
                        $("#totherchrg").val(data.OtherCharge);
                        $("#tfwdflight").val(data.FwdFlight);
                        $("#tId").val(data.ShipmentDetailID);

                        $("#addbtndiv").css('display', 'none');
                        $("#updatebtndiv").css('display', 'block');
                         var snoval = parseInt(response.ival) + 1;
                        $("#tSerialNum1").val(snoval)
                    }
                    //$("#listContainer").html(data);
                }
            });
        }
        function CancelDetails() {

            $("#DetailsError").css("display", "none");

            $("#tSerialNum").val(0);
            $("#tHAWB").val('');
            $("#tAWB").val('');
            $("#tBagNo").val(0);
            $("#tContents").val('');
            $("#tPCS").val(0);
            $("#tWeight").val(0);
            $("#tValue").val(0);
            $("#tCurrencyID").val('');
            $("#tShipper").val('');
            $("#tReciver").val('');
            $("#tDestinationCountryID").val('');
            $("#tDestinationCityID").val('');
            //$("#tDestinationCityID").prop("disabled", true);
            $("#updatebtndiv").css('display', 'none');
            $("#tfwdagent").val(0);
            $("#tfwdawb").val('');
            $("#tfwddate").val('');
            $("#tfwdcharge").val(0);
            $("#totherchrg").val(0);
            $("#tfwdflight").val('');
            $("#addbtndiv").css('display', 'block');
        }
        function populateCity(ctrl, id) {
            var idd = $(ctrl).val();
            $(id).empty();
            $.get("/DataFetch/GetCity", { id: idd }, function (data) {
                if (data.length > 0) {
                    var v = "<option>Select City</option>";
                    $.each(data, function (i, v1) {
                        v += "<option value=" + v1.Value + ">" + v1.Text + "</option>";
                    });
                    $(id).prop("disabled", false);
                    $(id).html(v);
                } else {
                    var v = "<option>Select City</option>";
                    $(id).html(v);
                    $(id).prop("disabled", true);
                };
            });
        }
        </script>
        <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCexhtncgr1cTUh0hzKOrK_GsS_tifAEns&libraries=places&callback=initAutocomplete" async defer></script>
