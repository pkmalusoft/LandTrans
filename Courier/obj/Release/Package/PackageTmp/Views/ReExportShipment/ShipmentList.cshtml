
@model CourierMVC.Models.ExportShipmentFormModel
@{
    int i = 0;
    var cities = (IEnumerable<LTMSV2.Models.CityMaster>)ViewBag.Cities;
    var countries = (IEnumerable<LTMSV2.Models.CountryMaster>)ViewBag.Countries;
    var currencies = (IEnumerable<LTMSV2.Models.CurrencyMaster>)ViewBag.Currencies;
}
@foreach (var item in Model.Shipments)
{
<tr>
    <td>

        @Html.HiddenFor(model => model.Shipments[i].ShipmentDetailID, new { @Value = $"{item.ShipmentDetailID}" })
        @Html.HiddenFor(model => model.Shipments[i].HAWB, new { @Value = $"{item.HAWB}" })
        @Html.HiddenFor(model => model.Shipments[i].AWB, new { @Value = $"{item.AWB}" })
        @Html.HiddenFor(model => model.Shipments[i].BagNo, new { @Value = $"{item.BagNo}" })
        @Html.HiddenFor(model => model.Shipments[i].Contents, new { @Value = $"{item.Contents}" })
        @Html.HiddenFor(model => model.Shipments[i].Shipper, new { @Value = $"{item.Shipper}" })
        @Html.HiddenFor(model => model.Shipments[i].Reciver, new { @Value = $"{item.Reciver}" })
        @Html.HiddenFor(model => model.Shipments[i].PCS, new { @Value = $"{item.PCS}" })
        @Html.HiddenFor(model => model.Shipments[i].Weight, new { @Value = $"{item.Weight}" })
        @Html.HiddenFor(model => model.Shipments[i].Value, new { @Value = $"{item.Value}" })
        @Html.HiddenFor(model => model.Shipments[i].CurrencyID, new { @Value = $"{item.CurrencyID}" })    
        @Html.HiddenFor(model => model.Shipments[i].ImportDetailID, new { @Value = $"{item.ImportDetailID}" })
        @Html.HiddenFor(model => model.Shipments[i].ExportID, new { @Value = $"{item.ExportID}" })
        @Html.HiddenFor(model => model.Shipments[i].DestinationCity, new { @Value = $"{item.DestinationCity}" })
        @Html.HiddenFor(model => model.Shipments[i].DestinationCountry, new { @Value = $"{item.DestinationCountry}" })
        @*@Html.HiddenFor(model => model.Shipments[i].FwdAgentAWBNo, new { @Value = $"{item.FwdAgentAWBNo}" })
            @Html.HiddenFor(model => model.Shipments[i].FwdAgentId, new { @Value = $"{item.FwdAgentId}" })
            @Html.HiddenFor(model => model.Shipments[i].FwdCharge, new { @Value = $"{item.FwdCharge}" })
            @Html.HiddenFor(model => model.Shipments[i].OtherCharge, new { @Value = $"{item.OtherCharge}" })
            @Html.HiddenFor(model => model.Shipments[i].FwdFlight, new { @Value = $"{item.FwdFlight}" })
            @Html.HiddenFor(model => model.Shipments[i].FwdDate, new { @Value = $"{item.FwdDate}" })*@
        @(i + 1)
    </td>
    <td>
        @item.HAWB

        @*@Html.EditorFor(model => model.Shipments[i].HAWB, new { htmlAttributes = new { @class = "tbl-control", @required = "true", @Value = $"{item.HAWB}" } })*@
    </td>
    <td>
        @item.AWB

        @*@Html.EditorFor(model => model.Shipments[i].AWB, new { htmlAttributes = new { @class = "tbl-control", @required = "true", @Value = $"{item.AWB}" } })*@
    </td>

    <td>
        @item.PCS

        @*@Html.EditorFor(model => model.Shipments[i].BagNo, new { htmlAttributes = new { @class = "tbl-control", @required = "true", @Value = $"{item.BagNo}" } })*@
    </td>

    <td>
        @item.Weight

        @*@Html.TextAreaFor(model => model.Shipments[i].Contents, new { @class = "tbl-control", @required = "true", @Value = $"{item.Contents}" })*@
    </td>
    <td>
        @item.Value
    </td>
    <td>
        @item.Contents

        @*@Html.TextAreaFor(model => model.Shipments[i].Shipper, new { @class = "tbl-control", @required = "true", @Value = $"{item.Shipper}" })*@
    </td>

    <td>
        @item.Shipper
    </td>

    <td>
        @item.Reciver
    </td>



    <td>
        @item.DestinationCountry
        @*@countries.Where(d => d.CountryID == @item.DestinationCountryID).FirstOrDefault().CountryName*@
    </td>

    <td>
        @item.BagNo
    </td>

    <td>

        @Html.DropDownListFor(model => model.Shipments[i].FwdAgentId, new SelectList(ViewBag.FwdAgentId, "ID", "AgentName", item.FwdAgentId), "Select Fwd Agent", htmlAttributes: new { @class = "tbl-control tbl-select ForwardAgent", @required = "true", @Value = $"{item.FwdAgentId}" })
    </td>

    <td>
        @Html.EditorFor(model => model.Shipments[i].FwdAgentAWBNo, new { htmlAttributes = new { @class = "tbl-control ForwardAwb", @required = "true", @Value = $"{item.FwdAgentAWBNo}" } })

    </td>
    <td>
        @Html.EditorFor(model => model.Shipments[i].FwdDate, new { htmlAttributes = new { @class = "tbl-control ForwardDate", @required = "true", @Value = $"{item.FwdDate}" } })

    </td>
    <td>
        @Html.EditorFor(model => model.Shipments[i].FwdFlight, new { htmlAttributes = new { @class = "tbl-control", @required = "true", @Value = $"{item.FwdFlight}" } })

    </td>
    <td>
        @Html.EditorFor(model => model.Shipments[i].FwdCharge, new { htmlAttributes = new { @class = "tbl-control", @required = "true", @Value = $"{item.FwdCharge}" } })

    </td>
    <td>
        @Html.EditorFor(model => model.Shipments[i].OtherCharge, new { htmlAttributes = new { @class = "tbl-control", @required = "true", @Value = $"{item.OtherCharge}" } })

    </td>


    @*<td style="width:101px">
            <button onclick="EditShipment('@i')" type="button"><span class="batch-icon batch-icon-pencil"></span></button>
            <button style="margin-left:0 !important" type="button"
                    onclick="deleteShipment('@i')">
                <span class="batch-icon batch-icon-minus"></span>
            </button><br />
        </td>
        <td></td>
        <td></td>
        <td></td>
        <td></td>*@
</tr>
    i++;
}
