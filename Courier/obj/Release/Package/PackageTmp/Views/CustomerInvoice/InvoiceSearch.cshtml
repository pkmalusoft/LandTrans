@model LTMSV2.Models.DatePicker
@{
    Layout = null;
}
<link href="/Content/Multiselect/bootstrap-multiselect.css" rel="stylesheet" />
<script src="/Content/Multiselect/bootstrap-multiselect.js"></script>
<style>
#invoicesearch .row .col-md-1 {
    width: 12%;
} 
.multiselect{
	 align-items: center;
    display: flex!Important;
    justify-content: space-around;
}
#movementid + .btn-group button,#movementid + .btn-group{
	display:block;
	width:100%;
	}
#FormDate{
    border-radius:10px;
}
</style>

<script>
     var customernames = [];
    $(document).ready(function () {

           //$.ajax({
           // type: "GET",
           // url: "/PickUpRequest/GetCustomerName",
           // datatype: "Json",            
           // success: function (response) {
           //     debugger;                
           //     customernames = response.data;                
           //     $("#CustomerName").autocomplete({
           //         source: customernames
           //     });
           // }
           //});

          $("#CustomerName").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/Consignment/GetCustomerName',
                    datatype: "json",
                    data: {
                        term: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (val, item) {                            
                            return {
                                label: val.CustomerName,
                                value: val.CustomerName,
                                CustomerId: val.CustomerID,
                                type: val.CustomerType
                            }
                        }))
                    }
                })
            },
            minLength: 1,              
              autoFocus: false,
              focus: function (event, ui) {
                  $("#CustomerName").val(ui.item.value);
              },
            select: function (e, i) {
                e.preventDefault();
                $("#CustomerName").val(i.item.label);
                $('#CustomerId').val(i.item.CustomerId);                
            },

        });




        //  $('#CustomerName').change(function () {
        //    debugger;
        //   var custname = $('#CustomerName').val();
        //   $.ajax({
        //       type: "POST",
        //       url: "/PickUpRequest/GetCustomerId",
        //       datatype: "Json",
        //       data: { id:  custname },
        //       success: function (response) {
        //           if (response.data == 0) {
        //               $('#CustomerId').val(0);
        //               //$('#CustomerName').val('');
        //               return;
        //           }
        //           else {
        //               $('#CustomerId').val(response.data);
             
        //           }
        //       }
                                    
        //   });
                  
                                                  
        //});

              $.ajax({
                type: "Get",
                  url: "/CustomerInvoice/GetParcelType",
                datatype: "Json",
                  success: function (response) {
                      
                      var data = response.data;
                    $('#movementid').empty();

                    $.each(data, function (index, value) {
                        
                        var o_st = $("#MovementId").val().split(",");
                        
                        var flag = 0;
                        for (var j = 0 ; j < o_st.length; j++) {
                            debugger;
                                if (o_st[j] == value.ParcelTypeID) {
                                    flag = 1;
                                    break;
                                }

                        }

                        if (flag == 1) {
                            $('#movementid').append('<option value="' + value.ParcelTypeID + '" selected=true>' + value.ParcelType1 + '</option>');
                        }
                        else {
                            $('#movementid').append('<option value="' + value.ParcelTypeID + '">' + value.ParcelType1 + '</option>');
                        }

                    });



                      $('#movementid').multiselect({
                        nonSelectedText:'Select',
                        enableClickableOptGroups: true,
                        enableCollapsibleOptGroups: true,
                        enableFiltering: false,
                        includeSelectAllOption: true,
                        enableCaseInsensitiveFiltering: false,
                        selectAllValue: 'multiselect-all'
                      });

                     
                }
              });

        $('#btnsearch').click(function () {
            
            if ($('#CustomerId').val() == 0 || $('#CustomerId').val() == '' ||$('#CustomerId').val() == null) {
                $('#CustomerName').focus();
                return false;
            }
            else if ($('#movementid').val() == null) {
                $('#movementid').focus();
                alert('Select Courier type!')
                return false;
            }
        })
       
    });


    @*$('#MovementId').select2({
        data:@ViewBag.Movement,
        multiple: true
    });*@

</script>
@using (Html.BeginForm("InvoiceSearch", "CustomerInvoice", FormMethod.Post, new { @id = "invoicesearch" }))
{
    @Html.AntiForgeryToken()


    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
<div class="row no-margin ">
    <div class="col-md-4">
        <label class="headinglabel required ">Customer</label>
        @Html.HiddenFor(model => model.CustomerId)
        @*@Html.DropDownListFor(model => model.CustomerId, new SelectList(@ViewBag.Customer, "CustomerID", "CustomerName"), "Select", new { @class = "form-control", @required = "true" })*@
        @Html.TextBoxFor(model => model.CustomerName, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.CustomerName)
    </div>
    <div class="col-md-1">
        @Html.HiddenFor(model => model.MovementId)
        <label class="headinglabel required ">From Date</label>
        @Html.TextBoxFor(model => model.FromDate, new { @class = "form-control text-right" })
    </div>

    <div class="col-md-1">
        <label class="headinglabel required">To Date</label>
        @Html.TextBoxFor(model => model.ToDate, new { @class = "form-control text-right" })
    </div>
    @*<div class="col-md-2">
            <input type="submit" value="Filter Customer" id="search" class="btn btn-primary" style="margin-top:31px" />&nbsp;&nbsp;
        </div>*@
    <div class="col-md-2">
        <label class="headinglabel required ">Load Type</label>

        <select id="movementid" name="SelectedValues" multiple="multiple" class="form-control">
            <option value=""></option>
        </select>
    </div>
    <div class="col-md-1">
        <button class="btn btn-primary" type="submit" id="btnsearch" style="margin-top:30px;width: 60px!Important;min-width: 50px!important;"><i class="fa fa-refresh" aria-hidden="true"></i></button>
    </div>
</div>
   
}


