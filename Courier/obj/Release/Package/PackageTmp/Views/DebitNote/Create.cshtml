@model LTMSV2.Models.DebitNoteVM

@{
    
    Layout = "~/Views/Shared/_TrueBookMstr.cshtml";
    var isadd = true;
    var _decimal = Convert.ToInt32(@Session["Decimal"].ToString());

    string path = Request.Url.AbsolutePath.ToLower();

    if (Convert.ToInt32(Session["UserRoleID"]) > 1)
    {
        LTMSV2.Models.SourceMastersModel obj = new LTMSV2.Models.SourceMastersModel();
        isadd = obj.GetAddpermission(Convert.ToInt32(Session["UserRoleID"]), path);

    }
}
<script src="~/Content/NewCSS/plugins/jQuery/moment.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.43/js/bootstrap-datetimepicker.min.js"></script>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.43/css/bootstrap-datetimepicker.min.css" />
<style>
    tfoot {
        display: table-header-group;
    }

    .tblbackground {
        background-color: #fff;
        box-shadow: 0 9px 23px rgba(0, 0, 0, 0.09), 0 5px 5px rgba(0, 0, 0, 0.06) !important;
        border-radius: 10px;
    }

    .searchdiv {
        background-color: #fff;
        width: 100%;
        margin: 0 auto;
        max-width: 765px;
        padding: 20px;
        margin-top: 50px;
        border-radius: 10px;
        box-shadow: 0 9px 23px rgba(0, 0, 0, 0.09), 0 5px 5px rgba(0, 0, 0, 0.06) !important;
    }

    .headinglabel {
        font-family: Calibri;
        font-size: 16px;
        color: #2b2929 !important;
    }
</style>

<script type="text/javascript">
     function setTwoNumberDecimal(obj) {
       $(obj).val(parseFloat($(obj).val()).toFixed(@_decimal));
    }
    function getTotal() {
        debugger;
        var maxrow = $('#details > tr').length;
        var total = 0;
        $('#Amount').val(total);

        for (i = 0; i < maxrow; i++) {
            var otheramt = $('#txtAmt_' + i).val();
            total = parseFloat(total) + parseFloat(otheramt);
            $('#Amount').val(parseFloat(total).toFixed(3));
            $('#lbltotal').html(parseFloat(total).toFixed(3))
        }
    }
    function Deleterow(index) {

        $.ajax({
            type: "POST",
            url: '/DebitNote/DeleteAccount',
            datatype: "html",
            data: {
                'index': index
            },
            success: function (data) {
                $("#listContainer").html(data);
                $('#AcDetailHeadID').val(0).trigger('change');
                $("#AcDetailAmount").val(0);
                getTotal();
            }
        });
    }
    $(document).ready(function () {
        $(":text").css({ "border-radius": "5px" });
        $("select").css({ "border-radius": "5px" });
        $("#InvoiceAmount").attr("disabled", "disabled");
        $("#AmountPaid").attr("disabled", "disabled");

        setTwoNumberDecimal($("#InvoiceAmount"));
        setTwoNumberDecimal($("#AmountPaid"));
        setTwoNumberDecimal($("#Amount"));


        $("#btnsave").click(function () {
            var date = $("#Date").val();
            var supp = $("#SupplierID option:selected").val();
            var inv = $("#Invoice option:selected").val();
            var amt = $("#Amount").val();



            if (date == "") {
                $("#alert").show();
                return false;
            }
            else if (supp == "") {
                $("#alert").show();
                return false;
            }
            else if (inv == "") {
                $("#alert").show();
                return false;
            }
            else if (amt == "") {
                $("#alert").show();
                return false;
            }


            else {
                $("#alert").hide();
                return true;
            }


        });
        $('#btnadd').click(function () {
            $.ajax({
                type: "POST",
                url: '/DebitNote/AddAccount/',
                datatype: "html",
                data: {
                    'AcHeadID': $('#AcDetailHeadID').val(), 'Amount': $("#AcDetailAmount").val(), Remarks: $('#AcDetailRemarks').val(), TransType: $('#TransType').val()
                },
                success: function (data) {
                    $("#listContainer").html(data);
                    $('#AcDetailHeadID').val(0).trigger('change');
                    $("#AcDetailAmount").val(0);
                    $('#AcDetailRemarks').val('');
                    getTotal();
                }
            });
        })
        var startdate = '@Session["FyearFrom"].ToString()';
        var enddate = '@Session["FyearTo"].ToString()';
        var sd = new Date(startdate);
        var ed = new Date(enddate);

        $('#Date').datetimepicker({
            //maxDate: ed,
            //minDate: sd,
            format: 'DD-MM-YYYY'
        });
        $("#Amount").on('change', function () {
            var value = $(this).val();
            if (value == null || value == "") {
                $(this).val("0.00");
            } else {
                $(this).val(parseFloat(value).toFixed(2));
            }
        });
        $("#OPRefNo").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/SupplierPayment/GetOpeningPayment',
                    datatype: "json",
                    data: {
                        term: request.term, SupplierId: $('#SupplierID').val()
                    },
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.RefNo,
                                value: val.ACOPInvoiceDetailId,
                                Amount: val.Amount
                            }
                        }))
                    }
                })
            },
            minLength: 0,
            autoFocus: false,
            focus: function (e, i) {
                $("#OPRefNo").val(i.item.label);
                $('#FMoney').val(i.item.Amount);
                $('#AcOPInvoiceDetailID').val(i.item.value);

            },
            select: function (e, i) {
                e.preventDefault();
                $("#OPRefNo").val(i.item.label);
                $('#FMoney').val(i.item.Amount);
                $('#AcOPInvoiceDetailID').val(i.item.value);

            },

        });
        $("#SupplierID").change(function () {
            if ($('#TransType').val() != '') {
                var ID = $('#SupplierID').val();
                $.ajax({
                    type: "POST",
                    url: '/DebitNote/GetTradeInvoiceOfSupplier/' + ID,
                    data: { 'ID': ID, 'amountreceived': 0, TransType: $('#TransType').val() },
                    success: function (data) {
                        if (data.length == 0) {
                            alert("There is no item!");
                            $('#InvoiceNo').val('');
                            $('#InvoiceNo').attr('readonly', 'readonly');
                        }
                        else {
                            //$('#InvoiceNo').removeAttr('readonly');
                        }

                    }
                });
            }
        });
        $('#TransType').change(function () {
            if ($('#TransType').val() == 'DN') {
                $('#lblaccount').html('Chart of Account - Debit');
                $('#lblaccount1').html('Chart of Account - Credit');
                $('#lblamount').html('Debit Amount');
                $('#lblamount1').html('Credit Amount');
                $('#lblchkInvoice').html('For Invoice');
                $('#lblInvoice').html('Invoice No.');
                $('#lblInvoiceDate').html('Invoice Date');
                $('#lblInvoiceAmt').html('Invoice Amount')
                $('#lblReceivedAmt').html('Received Amt');
                $('#AmountType').val(0).trigger('change');
                $('#AcDetailAmountType').val(1).trigger('change');
            }
            else if ($('#TransType').val() == 'SJ') {
                $('#lblaccount').html('Chart of Account - Credit');
                $('#lblaccount1').html('Chart of Account - Debit');
                $('#lblamount').html('Credit Amount');
                $('#lblamount1').html('Debit Amount');
                $('#lblchkInvoice').html('For Receipt');
                $('#lblInvoice').html('Receipt No.');
                $('#lblInvoiceDate').html('Receipt Date');
                $('#lblInvoiceAmt').html('Receipt Amount')
                $('#lblReceivedAmt').html('Settled Amount');
                $('#AmountType').val(1).trigger('change');
                $('#AcDetailAmountType').val(0).trigger('change');
            }

            var ID = $('#SupplierID').val();
            $.ajax({
                type: "POST",
                url: '/DebitNote/GetTradeInvoiceOfSupplier/' + ID,
                data: { 'ID': ID, 'amountreceived': 0, TransType: $('#TransType').val() },
                success: function (data) {
                    if (data.length == 0) {
                        alert("There is no item");
                        $('#InvoiceNo').val('');
                        $('#InvoiceNo').attr('readonly', 'readonly');
                    }
                    else {
                        $('#InvoiceNo').removeAttr('readonly');
                    }

                }
            });
        })
        $("#InvoiceNo").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/DebitNote/GetInvoiceNo',
                    datatype: "json",
                    data: {
                        term: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (val, item) {

                            return {
                                label: val.InvoiceNo,
                                value: val.SalesInvoiceID,
                                InvDate: val.DateTime,
                                InvoiceAmt: val.InvoiceAmount,
                                Type: val.InvoiceType,
                                Received: val.AmountReceived
                            }
                        }))
                    }
                })
            }, minLength: 1,
            focus: function (e, i) {
                $("#InvoiceNo").val(i.item.label);
                $("#InvoiceID").val(i.item.value);
                $("#InvoiceDate").val(i.item.InvDate);
                $('#InvoiceType').val(i.item.Type);
                $('#InvoiceAmount').val(i.item.InvoiceAmt);
                $('#ReceivedAmount').val(i.item.Received);
                setTwoNumberDecimal($("#InvoiceAmount"));
                setTwoNumberDecimal($("#AmountPaid"));

            },
            select: function (e, i) {
                e.preventDefault();
                $("#InvoiceNo").val(i.item.label);
                $("#InvoiceID").val(i.item.value);
                $("#InvoiceDate").val(i.item.InvDate);
                $('#InvoiceType').val(i.item.Type);
                $('#InvoiceAmount').val(i.item.InvoiceAmt);
                $('#ReceivedAmount').val(i.item.Received);
                setTwoNumberDecimal($("#InvoiceAmount"));
                setTwoNumberDecimal($("#AmountPaid"));
            }
        });


    });
    function getamt() {

        $.ajax({
            type: "POST",
            url: "/DebitNote/GetAmountByinvono",
            datatype: "Json",
            data: { invno: $("#InvoiceNo").val(), IsTrading: $('#TradingInvoice').val() },
            success: function (data) {
                $("#InvoiceAmount").val(parseFloat(data.InvAmt).toFixed(2));
                $("#AmountPaid").val(parseFloat(data.AmtPaid).toFixed(2));

            }
        });

    }
</script>

<section class="content-header">
    <h1 class="headingfont">@ViewBag.Title</h1>

</section>

<section class="content">



    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        <div class="">
            <div id="alert" style="color:red;display:none;margin-left:10px;">*Please fill mandatory fields</div>
            <fieldset>
                <div class="row no-margin">
                    <div class="col-md-6">
                        <div class=" row">
                            <div class="col-md-6">
                                <label class="headinglabel required">Debit Note Number</label>
                                @Html.HiddenFor(model => model.DebitNoteId)
                                @Html.HiddenFor(model => model.AcJournalID)
                                @Html.TextBoxFor(model => model.DebitNoteNo, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                            <div class="col-md-6">
                                <label class="headinglabel required">D.N. Date</label>

                                @Html.TextBoxFor(model => model.Date, new { @class = "form-control text-right", placeholder = "dd-mmm-yyyy" })
                            </div>
                        </div>

                        <div class=" row">
                            <div class="col-md-6">
                                <label class="headinglabel required">Supplier</label>
                                @Html.DropDownListFor(model => model.SupplierID, new SelectList(@ViewBag.Supplier, "SupplierID", "SupplierName"), "Select", new { @class = "form-control" })
                            </div>
                            <div class="col-md-2">
                                <label class="headinglabel">Trans Type</label>

                                @Html.DropDownListFor(model => model.TransType, new List<SelectListItem> { new SelectListItem { Text = "Debit", Value = "DN" }, new SelectListItem { Text = "Credit", Value = "SJ" } }, "Select", new { @class = "form-control" })

                            </div>
                            <div class="col-md-4">
                                <label class="headinglabel required" id="lblamount"> Debit Note Amount</label>

                                @Html.TextBoxFor(model => model.Amount, new { @class = "form-control text-right",@readonly="readonly" })
                            </div>

                        </div>

                        <div class="row">
                            <div class="col-md-4">
                                <div class="flexTitle">
                                    <label class="required headinglabel" id="lblchkInvoice">Invoice No.</label>
                                    <div class="checkboxdesign no-padding  text-right" style="float:right">
                                        @Html.CheckBoxFor(model => model.ForInvoice, new { @name = "ForInvoice", @checked = "checked" }) &nbsp
                                        <label class="headinglabel" style="color:#07a7e3!important;padding-left: 0!important" id="lblInvoice">For Invoice</label>
                                    </div>
                                </div>
                                @Html.TextBoxFor(model => model.InvoiceNo, new { @class = "form-control",@readonly="readonly" })
                                @Html.ValidationMessageFor(model => model.InvoiceNo)
                                <input type="hidden" id="TradingInvoice" name="TradingInvoice" value="" class="form-control" />
                                @Html.HiddenFor(model => model.InvoiceID)
                                @Html.HiddenFor(model => model.InvoiceType)
                            </div>
                            <div class="col-md-8 labelrow flex justify-between">
                                <label class="headinglabel required">Invoice Date</label>
                                <label class="headinglabel required">Invoice Amount</label>
                                <label class="headinglabel required">Paid Amount</label>
                            </div>
                            <div class="col-md-8">
                                <div class="col-md-4">

                                    @Html.TextBoxFor(model => model.InvoiceDate, new { @class = "form-control text-right" })
                                </div>
                                <div class="col-md-4">
                                    @Html.TextBoxFor(model => model.InvoiceAmount, new { @class = "form-control text-right" })
                                </div>
                                <div class="col-md-4">
                                    @Html.TextBoxFor(model => model.AmountPaid, new { @class = "form-control text-right" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">

                                <label class="headinglabel">Description</label>

                                @Html.TextBoxFor(model => model.Remarks, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Remarks)
                            </div>

                        </div>
                        <div class="row">
                            <div class="col-md-6">

                                <label class="headinglabel">Chart of Account (Credit Account)</label>

                                @Html.DropDownListFor(model => model.AcDetailHeadID, new SelectList(@ViewBag.AcHead, "AcHeadID", "AcHead1"), "Select", new { @class = "form-control" })

                            </div>
                            <div class="col-md-5">

                                <label class="required headinglabel" id="lblamount1">Debit Amount</label>

                                @Html.TextBoxFor(model => model.AcDetailAmount, new { @class = "form-control text-right" })
                                @Html.ValidationMessageFor(model => model.AcDetailAmount)
                            </div>
                          

                        </div>
                        <div class="row">
                            <div class="col-md-11">

                                <label class="required headinglabel">Remarks</label>

                                @Html.TextBoxFor(model => model.AcDetailRemarks, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.AcDetailRemarks)
                            </div>
                            <div class="col-md-1">
                                <button class="btn btn-success" type="button" id="btnadd" style="margin-top:30px;width: 60px!Important;min-width: 50px!important;"><i class="fa fa-plus" aria-hidden="true"></i></button>
                            </div>
                        </div>
                        <div class="row no-margin" style="padding-top:10px">
                            <div class="" style="text-align:right;padding:10px">
                                @if (isadd)
                                {
                                    <input type="submit" value="Save" class="btn btn-primary btnwid" id="btnsave" />
                                }
                                else
                                {
                                    <input type="submit" value="Save" class="btn btn-primary btnwid" id="btnsave" disabled />
                                }
                                &nbsp;
                                <a href='@Url.Action("Index", "DebitNote", new { id = 0 })' class="btn btn-danger btnwid" data-toggle="tooltip" data-placement="right" title="Click here">Cancel</a>

                            </div>
                        </div>

                    </div>
                    <div class="col-md-6 " style="padding-left:30px!important" id="listContainer">

                        @{Html.RenderPartial("DebitNoteDetail", Model);}

                    </div>
                </div>
               


</fieldset>
        </div>

    }

</section>





