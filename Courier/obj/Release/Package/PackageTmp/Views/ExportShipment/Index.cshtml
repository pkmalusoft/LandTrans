@model LTMSV2.Models.DatePicker
@{
    //Layout = null;
    Layout = "~/Views/Shared/_TrueBookMstr.cshtml";
    ViewBag.Title = "Index";
    var isadd = true;
    var ismodify = true;
    var isdelete = true;

    string path = "/ExportShipment/Index";

    if (Convert.ToInt32(Session["UserRoleID"]) > 1)
    {
        LTMSV2.Models.SourceMastersModel obj = new LTMSV2.Models.SourceMastersModel();
        isadd = obj.GetAddpermission(Convert.ToInt32(Session["UserRoleID"]), path);
        ismodify = obj.GetModifypermission(Convert.ToInt32(Session["UserRoleID"]), path);
        isdelete = obj.GetDeletepermission(Convert.ToInt32(Session["UserRoleID"]), path);

    }
}
<script src="~/Content/NewCSS/plugins/jQuery/moment.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.43/js/bootstrap-datetimepicker.min.js"></script>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.43/css/bootstrap-datetimepicker.min.css" />

<script type="text/javascript">


    $(function () {
        $('#FromDate').datetimepicker({ format: 'DD-MM-YYYY' });

    });

    $(function () {
        $('#ToDate').datetimepicker({ format: 'DD-MM-YYYY' });

        $('#ToDate').datepicker("setDate", new Date());
    });

    $(function () {
        $('#txtpickuptime').datetimepicker({ format: 'DD-MM-YYYY HH:mm' });
    });

     var table = $('#datatable-1').DataTable();

</script>
<script type="text/javascript">
    $(document).ready(function () {
    


         //$('#datatable-1 tfoot th').each(function () {
         //       var title = $(this).text();
         //       $(this).html('<input type="text" style="width:100%" />');
         //   });


            var table = $('#datatable-1').dataTable({
                "bDestroy": true,
                //"order": []
                "aaSorting": [],
                "searching": false
           });


      

    });


</script>

<section class="content-header" style="margin-bottom:20px">
    <h1 class="headingfont">Export Shipments</h1>
    @if (TempData["SuccessMsg"] != null)
    {
        <script type="text/javascript">
                  $(document).ready(function () {
                      $.notify("@TempData["SuccessMsg"]", "success");
                 });
        </script>
    }
    @if (TempData["ErrorMsg"] != null)
    {
        <script type="text/javascript">
                  $(document).ready(function () {
                      $.notify("@TempData["ErrorMsg"]", "error");
                 });
        </script>
    }
</section>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
  
            <div class="row d-flex">
        
                        <div class=" col-md-1 search_field">
                            <label for="FromDate" class="col-3 control-label">From</label>
                            <input type="text" class="col-9 form-control text-right datecontrol datepick" name="FromDate" id="FromDate" placeholder="From Date" value="@Model.FromDate.ToString("dd-MM-yyyy")" />
                        </div>
                        <div class="col-md-1 search_field">
                            <label for="FromDate" class="col-3 control-label">To</label>
                            <input type="text" class="col-9 form-control datecontrol text-right datepick" name="ToDate" id="ToDate" placeholder="To Date" value="@Model.ToDate.ToString("dd-MM-yyyy")" />
                        </div>
                        <div class="col-md-1 m-top col-sm-3  m-top">
                            @*<input type="submit" value="Filter" class="btn btn-primary btn-gradient btn-block waves-effect waves-light" />*@
                            <button type="submit" class="btn btn-primary" style="min-width:50px!Important;"><i class="fa fa-refresh" aria-hidden="true"></i></button>
                        </div>
                  
                        <div class="m-top filter_btns text-md-right text-right m-top" style="margin-bottom:10px;">
                            @*@if (ViewBag.Token.Create)
        {
            @Html.ActionLink("Create", "Create", null, new { @class = "btn btn-primary btn-sm waves-effect waves-light" });
        }*@
                            @if (@LTMSV2.Models.CommanFunctions.CheckCreateEntryValid() == false || (!isadd))
                                {
                                    @Html.ActionLink("Create New", "CreateExport", null, new { @class = "btn btn-primary btn-sm waves-effect waves-light", @disabled = "disabled" })
                                }
                             else
                                {
                                    @Html.ActionLink("Create New", "CreateExport", null, new { @class = "btn btn-primary btn-sm waves-effect waves-light" })
                              }
                            @Html.ActionLink("View Imports", "ViewImport", null, new { @class = "btn btn-primary btn-sm waves-effect waves-light" })

                            <button type="button" style="margin-left:25px" class="btn btn-primary btn-sm waves-effect waves-light" onclick="printDiv()">Summary</button>
                        </div>
            </div>
            <div class="table-responsive tblbackground" style="padding:15px;margin-top:20px">
                <table class="table table-responsive table-bordered tblfont" id="datatable-1" >
                    @{ Html.RenderAction("Table", "ExportShipment");}
                </table>
            </div>
       
}

<script>
        $(document).ready(function () {
            $("#importshipment").addClass("active");
            @if(TempData["toasterMessage"] != null)
            {
                @:toasterMessage("@TempData["toasterMessage"].ToString()");
            }
        });
    function deleteExport(id, controller) {
        if (confirm("Are you sure, You want to Delete this Export Manifest Entry ?")) {
            window.location.href = "/ExportShipment/Delete?id=" + id;
        }
            //debugger;
            //swal({
            //    title: "Are you sure?",
            //    text: "You will not be able to recover this " + controller,
            //    type: "warning",
            //    showCancelButton: true,
            //    confirmButtonClass: "btn-danger",
            //    confirmButtonText: "Yes, delete it!",
            //    cancelButtonText: "No, cancel plx!",
            //    closeOnConfirm: false,
            //    closeOnCancel: false
            //},
            //    function (isConfirm) {
            //        if (isConfirm) {
            //            $.ajax({
            //                type: "POST",
            //                datatype: "html",
            //                url: "Delete?id=" + id.toString(),
            //                data: id,
            //                success: function (data) {
            //                    debugger;
            //                    swal({ title: "Deleted!", text: controller + " has been deleted.", type: "success" }, function () { window.location = window.location.href; });
            //                }
            //            });
            //        } else {
            //            swal("Cancelled", controller + " is safe :)", "error");
            //        }
            //    });

        }
</script>

