@model CourierMVC.Models.ExportShipmentFormModel
@{
    ViewBag.Title = "Edit";
    var cities = (IEnumerable<LTMSV2.Models.CityMaster>)ViewBag.Cities;
}
<style>
    .reve_rates {
        min-width: 16%;
        padding-left: 13px !important;
    }

    .reve_rates1 {
        max-width: 4%;
        padding-left: 13px !important;
    }

    .reve_rates2 {
        max-width: 8%;
        padding-left: 13px !important;
    }

    .reve_rates3 {
        min-width: 20%;
        padding-left: 13px !important;
    }

    .reve_rates > label {
        font-size: 1rem !important;
    }

    .reve_rates1 > label {
        font-size: 1rem !important;
    }

    .reve_rates2 > label {
        font-size: 1rem !important;
    }

    .reve_rates > input {
        font-size: 12px !important;
    }

    .reve_rates1 > input {
        font-size: 12px !important;
    }

    .reve_rates2 > input {
        font-size: 12px !important;
    }

    .reve_rates3 > label {
        font-size: 1rem !important;
    }

    .reve_rates3 > textarea {
        min-height: 4rem !important;
        font-size: 12px !important;
    }

    table.table td {
        font-size: 12px !important;
    }

    .xdsoft_calendar > table.table th, table th {
        font-weight: 400 !important;
        line-height: 15px !important;
    }

    .xdsoft_calendar > table.table th, table.table td, table th, table td {
        font-size: 12px !important;
        vertical-align: middle !important;
        padding: 0 !important;
    }
</style>
<div class="card">
    <div class="card-body">
        @using (Html.BeginForm("Edit", "exportshipment", FormMethod.Post, new { @id = "exportshipment" }))
        {
            @Html.AntiForgeryToken()
            <h4>Edit Export Shipment</h4>
            <hr />
            @Html.HiddenFor(model => model.ID)
            @Html.HiddenFor(model => model.AgentID)
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="col-12">
                <div class="row">
                    <div class="col-md-6 row">
                        <div class="col-md-6 col-12">


                            <div class="form-group">
                                <label>Consignor Name</label>
                                <div>
                                    <input type="text" value="@ViewBag.CompanyName" title="@ViewBag.CompanyName" class="form-control" disabled style="text-decoration:none" />
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.OrginCountry, "Origin Country", htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.EditorFor(model => model.OrginCountry, new { htmlAttributes = new { @class = "form-control", @style = "text-decoration:none", @disabled = "true" } })
                                    @Html.ValidationMessageFor(model => model.OrginCountry, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ConsignorAddress, "Consignor Address", htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.TextAreaFor(model => model.ConsignorAddress, new { @class = "form-control", @rows = "3", @style = "text-decoration:none", @disabled = "true" })
                                    @Html.ValidationMessageFor(model => model.ConsignorAddress, "", new { @class = "text-danger" })
                                </div>
                            </div>
                           

                        </div>
                        <div class="col-md-6 col-12">

                            <div class="form-group">
                                @Html.LabelFor(model => model.AgentID, "Consignee Name", htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.DropDownListFor(model => model.AgentID, null, "Select Agent", htmlAttributes: new { @class = "form-control", @required = "true" })
                                    @Html.ValidationMessageFor(model => model.AgentID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.DestinationCountry, "Destination Country", htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.EditorFor(model => model.DestinationCountry, new { htmlAttributes = new { @class = "form-control", @style = "text-decoration:none", @disabled = "true" } })
                                    @Html.ValidationMessageFor(model => model.DestinationCountry, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ConsigneeAddress, "Consignee Address", htmlAttributes: new { @class = "control-label required" })
                                <div>
                                    @Html.TextAreaFor(model => model.ConsigneeAddress, new { @class = "form-control", @rows = "3", @style = "text-decoration:none", @required = "true", @disabled = "true" })
                                    @Html.ValidationMessageFor(model => model.ConsigneeAddress, "", new { @class = "text-danger" })
                                </div>
                            </div>
                           
                        </div>
                    </div>
                    <div class="col-md-6 row">
                        <div class="col-md-6 col-12">
                            <div class="form-group">
                                <label>Manifest Number</label>
                                <div>
                                    <input type="text" value="@Model.ManifestNumber" title="@Model.ManifestNumber" class="form-control" disabled style="text-decoration:none" />
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.OriginCity, "Origin Airport City", htmlAttributes: new { @class = "control-label required" })
                                <div>
                                    @Html.EditorFor(model => model.OriginCity, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                                    @Html.ValidationMessageFor(model => model.OriginCity, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Date, "Origin Flight Date", htmlAttributes: new { @class = "control-label required" })
                                <div>
                                    @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control datetimepick1", @required = "true" } })
                                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="form-group">
                                @Html.LabelFor(model => model.FlightNo, "Origin Flight Number", htmlAttributes: new { @class = "control-label required" })
                                <div>
                                    @Html.EditorFor(model => model.FlightNo, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                                    @Html.ValidationMessageFor(model => model.FlightNo, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.MAWB, htmlAttributes: new { @class = "control-label required" })
                                <div>
                                    @Html.EditorFor(model => model.MAWB, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                                    @Html.ValidationMessageFor(model => model.MAWB, "", new { @class = "text-danger" })
                                </div>
                            </div>


                        </div>
                        <div class="col-md-6 col-12">
                            <div class="form-group">
                                <label>Import Manifest Number</label>
                                <div>
                                    <input type="text" value="@ViewBag.ImportManifest" title="@ViewBag.ImportManifest" class="form-control" disabled style="text-decoration:none" />
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.DestinationCity, "Destination Airport City", htmlAttributes: new { @class = "control-label required" })
                                <div>
                                    @Html.EditorFor(model => model.DestinationCity, new { htmlAttributes = new { @class = "form-control", @required = "true" } })

                                    @*@Html.DropDownListFor(model => model.DestinationAirportOfShipmentId, new SelectList(cities, "CityID", "City"), "Select Destination Airport City", htmlAttributes: new { @class = "form-control", @required = "true" })*@
                                    @Html.ValidationMessageFor(model => model.DestinationCity, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="row " style="margin-bottom: -15px !important">
                                <div class="col-md-4  form-group">
                                    @Html.LabelFor(model => model.Bags, htmlAttributes: new { @class = "control-label required" })
                                    <div>
                                        @Html.EditorFor(model => model.Bags, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                                        @Html.ValidationMessageFor(model => model.Bags, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4 form-group">
                                    @Html.LabelFor(model => model.RunNo, htmlAttributes: new { @class = "control-label required" })
                                    <div>
                                        @Html.EditorFor(model => model.RunNo, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                                        @Html.ValidationMessageFor(model => model.RunNo, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4  form-group">
                                    @Html.LabelFor(model => model.CD, htmlAttributes: new { @class = "control-label required" })
                                    <div>
                                        @Html.EditorFor(model => model.CD, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                                        @Html.ValidationMessageFor(model => model.CD, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label required" })
                                <div>
                                    @Html.DropDownListFor(model => model.Type, (IEnumerable<SelectListItem>)ViewBag.Type, "Select shipment type", htmlAttributes: new { @class = "form-control", @required = "true" })
                                    @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.TotalAWB, htmlAttributes: new { @class = "control-label required" })
                                <div>

                                    @Html.EditorFor(model => model.TotalAWB, new { htmlAttributes = new { @class = "form-control", @min = 1, @required = "true" } })
                                    @Html.ValidationMessageFor(model => model.TotalAWB, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <br />

            <div class="col-12">
                <table class="table table-hover table_lg_head m_icons dataTable no-footer" role="grid" aria-describedby="datatable-1_info" style="min-width: 100%;overflow:auto" id="DetailsTable">

                    @*<table class="table" style="min-width: 100%">*@
                    <thead class="input-table">
                        <tr>
                            <th width="20px">
                                S.No
                            </th>
                            <th>
                                HAWB
                            </th>
                            <th>
                                AWB
                            </th>
                            <th>
                                PCS
                            </th>
                            <th>
                                Weight
                            </th>
                            <th>
                                Value
                            </th>
                            <th>
                                Contents
                            </th>

                            <th>
                                Shipper
                            </th>
                            <th>
                                Reciver
                            </th>

                            <th>
                                Destination
                            </th>
                            <th>
                                Bags
                            </th>
                            <th width="10%">
                                FWD Agent
                            </th>
                            <th width="8%">
                                FWD Agent AWB
                            </th>
                            <th width="8%">
                                FWD Date
                            </th>
                            <th width="60px">
                                FWD Flight
                            </th>
                            <th width="40px">
                                FWD Charge
                            </th>
                            <th width="40px">
                                Other Charge
                            </th>
                        </tr>
                    </thead>
                    <tbody class="input-table" id="listContainer">
                        @{Html.RenderPartial("ShipmentList", Model);}
                    </tbody>
                </table>
            </div>
            <hr />
            <div class="form-group col-lg-3 col-md-6 col-sm-12 float-right" style="display:flex">
                <div class="col-md-4">
                    @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-secondary btn-sm waves-effect waves-light float-right" })
                </div>
                <div class="col-md-4">
                    <input type="submit" value="Submit" id="btnSubmit" class="btn btn-primary waves-effect waves-light" />
                </div>
            </div>
        }
    </div>



</div>


@section Scripts {

    @Styles.Render("~/assets/Datetimepicker/jquery.datetimepicker.css")

    @Scripts.Render("~/assets/Datetimepicker/jquery.datetimepicker.full.js");

    <script>
        function initialize() {
            var options = {
                types: ['(cities)'],
            };
          
            var input2 = document.getElementById('DestinationCity');
            new google.maps.places.Autocomplete(input2,options);
            var input3 = document.getElementById('OriginCity');
            new google.maps.places.Autocomplete(input3,options);
        }

        google.maps.event.addDomListener(window, 'load', initialize);
        $("#Shipments_0__FwdAgentId").change(function () {
            $("#DetailsTable .ForwardAgent").val($(this).val())
        });
        $("#Shipments_0__FwdAgentId").change(function () {
            $("#DetailsTable .ForwardAwb").val($(this).val())
        });
        $("#Shipments_0__FwdDate").change(function () {
            
            $("#DetailsTable .ForwardDate").val($(this).val())
        });
        $("#AgentID").change(function () {
            var id = $(this).val();
            if (id == "" || id== null){
                id = 0;
                $("#DestinationCountry").val("");
                $("#ConsigneeAddress").val("");
        }
            if (id > 0) {
                $.get("/ExportShipment/GetAgentBy_Id", { Id: id }, function (data) {
                    $("#DestinationCountry").val(data.CountryId);
                    $("#ConsigneeAddress").val(data.address);

                   // Addshipment(data.CountryId);

                });
            };
        });

       function Addshipment (CountryId) {
           var manifestid = parseInt(CountryId);
            $.ajax({
                url: '@Url.Action("AddOrRemoveShipment", "exportshipment")?DestinationId=' + manifestid,
                type: 'post',
                dataType: 'html',
                data: $('form#exportshipment').serialize(),
                success: function (data) {
                    $("#listContainer").html(data);
                    $(".ForwardDate").datetimepicker({
                        format: 'd-m-Y H:i',
                        step: 15
                    });
                }
            });

        }
        $(document).ready(function () {
            $("#Type").val('@Model.Type')
            $(".datetimepick1").datetimepicker({
                format: 'd-m-Y H:i',
                step: 15
            });

            $(".ForwardDate").datetimepicker({
                format: 'd-m-Y H:i',
                step: 15
            });
           // $("#DestinationCountryID").trigger("change");
        
            $("#exportshipment").addClass("active");

            $("#btnSubmit").click(function () {

                var detailslen = $('#DetailsTable > tbody > tr').length;
                if (detailslen == 0) {
                    alert("No Shipments found to Export !!");
                    return false;
                } else {
                    return true;
                }

            });
        });

    </script>
}

