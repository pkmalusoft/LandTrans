@model LTMSV2.Models.PickUpEnquiryVM

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_TrueBookMstr.cshtml";
}

<script src="~/Content/NewCSS/plugins/jQuery/moment.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.43/js/bootstrap-datetimepicker.min.js"></script>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.43/css/bootstrap-datetimepicker.min.css" />


<script type="text/javascript">
    $(document).ready(function () {
        $(":text").css({ "border-radius": "5px" });
        $("select").css({ "border-radius": "5px" });
        $("#divvehicle").css({ "display": "none" });

        var m_names = new Array("Jan", "Feb", "Mar",
"Apr", "May", "Jun", "Jul", "Aug", "Sep",
"Oct", "Nov", "Dec");

        var d = new Date();
        var curr_date = d.getDate();
        var curr_month = d.getMonth();
        var curr_year = d.getFullYear();

        var reqdate = curr_date + "-" + m_names[curr_month] + "-" + curr_year;

        $("#EnquiryDate").val(reqdate);



        if ($("#vehreq").is(':checked')) {
            $("#divvehicle").css({ "display": "block" });

        }
        else {
            $("#divvehicle").css({ "display": "none" });

        }



        $("#vehreq").click(function () {
            if ($("#vehreq").is(':checked')) {
                $("#divvehicle").css({ "display": "block" });

            }
            else {
                $("#divvehicle").css({ "display": "none" });

            }
        });








        $("#CustomerID").change(function () {
            $("#ConsignerCityId").empty();
            $('#ConsignerCityId').append('<option value="0">Select</option>');

            $("#ConsignerLocationId").empty();
            $('#ConsignerLocationId').append('<option value="0">Select</option>');

            $.ajax({
                type: "POST",
                url: "/PickUpRequest/GetCustomerData",
                datatype: "Json",
                data: { id: $('#CustomerID').val() },
                success: function (data) {
                    $("#custcode").val(data.CustCode);
                    $("#Consignor").val(data.CustName);
                    $("#ConsignorContact").val(data.ContactPerson);
                    $("#ConsignerCountryId").val(data.CountryID);
                    $("#ConsignorAddress").val(data.Address1);
                    $("#ConsignorAddress1").val(data.Address2);
                    $("#ConsignorAddress2").val(data.Address3);
                    $("#ConsignorPhone").val(data.Phone);

                    BindCity(data.CityID, data.LocationID);
                }
            });



            function BindCity(x, y) {
                $.ajax({
                    type: "POST",
                    url: "/PickUpRequest/GetCity",
                    datatype: "Json",
                    data: { id: $("#ConsignerCountryId option:selected").val() },
                    success: function (data) {


                        $.each(data, function (index, value) {
                            $('#ConsignerCityId').append('<option value="' + value.CityID + '">' + value.City + '</option>');
                        });

                        $('#ConsignerCityId').val(x);

                        BindLocation(y);

                    }
                });
            }

            function BindLocation(y) {
                $.ajax({
                    type: "POST",
                    url: "/PickUpRequest/GetLocation",
                    datatype: "Json",
                    data: { id: $("#ConsignerCityId option:selected").val() },
                    success: function (data) {


                        $.each(data, function (index, value) {
                            $('#ConsignerLocationId').append('<option value="' + value.LocationID + '">' + value.Location + '</option>');
                        });

                        $('#ConsignerLocationId').val(y);

                    }
                });
            }



            //$("#ConsigneeCityId").change(function () {

            //    $("#ConsigneeLocationId").empty();
            //    $('#ConsigneeLocationId').append('<option value="0">Select</option>');
            //    $.ajax({
            //        type: "POST",
            //        url: "/PickUpRequest/GetLocation",
            //        datatype: "Json",
            //        data: { id: $("#ConsigneeCityId option:selected").val() },
            //        success: function (data) {


            //            $.each(data, function (index, value) {
            //                $('#ConsigneeLocationId').append('<option value="' + value.LocationID + '">' + value.Location + '</option>');
            //            });

            //        }
            //    });
            //});
        });

        $("#ConsigneeCountryID").change(function () {
            $("#ConsigneeCityId").empty();
            $('#ConsigneeCityId').append('<option value="0">Select</option>');
            $.ajax({
                type: "POST",
                url: "/PickUpRequest/GetCity",
                datatype: "Json",
                data: { id: $("#ConsigneeCountryID option:selected").val() },
                success: function (data) {


                    $.each(data, function (index, value) {
                        $('#ConsigneeCityId').append('<option value="' + value.CityID + '">' + value.City + '</option>');
                    });

                }
            });
        });

        $("#ConsignerCountryId").change(function () {
            $("#ConsignerCityId").empty();
            $('#ConsignerCityId').append('<option value="0">Select</option>');
            $.ajax({
                type: "POST",
                url: "/PickUpRequest/GetCity",
                datatype: "Json",
                data: { id: $("#ConsignerCountryId option:selected").val() },
                success: function (data) {


                    $.each(data, function (index, value) {
                        $('#ConsignerCityId').append('<option value="' + value.CityID + '">' + value.City + '</option>');
                    });

                }
            });
        });

        $("#VehicleID").change(function () {
            $("#Vehicle").val($("#VehicleID option:selected").text());

        });
        $("#btnsave").click(function () {
            if ($("#CustomerID").val() == "") {
                $("#validations").show();
                return false;
            }
            else if ($("#Consignor").val() == "") {

                $("#validations").show();
                return false;
            }
            else if ($("#ConsignerCountryId").val() == "") {

                $("#validations").show();
                return false;
            }
            else if ($("#ConsignerCityId").val() == "") {

                $("#validations").show();
                return false;
            }
            else if ($("#ConsigneeCityId").val() == "") {

                $("#validations").show();
                return false;
            }
            else if ($("#Consignee").val() == "") {

                $("#validations").show();
                return false;
            }
            else if ($("#ConsigneeCountryID").val() == "") {

                $("#validations").show();
                return false;
            }
            else if ($("#EnteredByID").val() == "") {

                $("#validations").show();
                return false;
            }
            else {
                $("#validations").hide();
                return true;
            }
        });

    });
</script>

<script type="text/javascript">
    $(function () {
        $('#ReadyTime').datetimepicker({ format: 'DD-MMM-YYYY HH:mm' });
    });

    $(function () {
        $('#OfficeTimeFrom').datetimepicker({ format: 'DD-MMM-YYYY HH:mm' });
    });

    $(function () {
        $('#OfficeTimeTo').datetimepicker({ format: 'DD-MMM-YYYY HH:mm' });
    });


</script>
<section class="content-header">
    <h1 class="headingfont">PickUp Enquiry</h1>

</section>




<section class="content">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

   
      


     


        <div class="row no-margin">

            @*       <div class="editor-label">
            @Html.LabelFor(model => model.CustomerID)
        </div>*@
            <div class="col-md-3">
                <label class="headinglabel">Date</label>
                  @Html.HiddenFor(model => model.EnquiryID)
                @Html.HiddenFor(model=>model.EnquiryNo)
                @Html.HiddenFor(model => model.AWBNo)
                        @Html.TextBoxFor(model => model.EnquiryDate, new {@class = "form-control"})

                            </div>
            <div class="col-md-3">
                <label class="headinglabel">Customer Type</label>
                @Html.DropDownList("RequestSource", new List<SelectListItem>
                {
                    new SelectListItem{ Text="Email", Value = "Email" },
                    new SelectListItem{ Text="Fax", Value = "Fax" },
                    new SelectListItem{ Text="Phone", Value = "Phone" },
                    new SelectListItem{ Text="Walk-In", Value = "Walk-In" },
                   
                 },"Select", new { @class = "form-control" })
             

            </div>

            <div class="col-md-3">
                <label class="headinglabel required">Customer</label>
                @Html.DropDownListFor(model => model.CustomerID, new SelectList(@ViewBag.Customer, "CustomerID", "CustomerName"),"Select", new { @class = "form-control" })
            </div>

            <div class="col-md-3">
                <label class="headinglabel">Customer Code</label>
             <input type="text" id="custcode" class="form-control" />
            </div>
        </div>

        <div class="row no-margin" style="padding-top: 10px">
            <div class="col-md-3">
                <label class="headinglabel required">Shipper</label>
                @Html.TextBoxFor(model => model.Consignor, new { @class = "form-control txttarget" })
            </div>

            <div class="col-md-3">
                <label class="headinglabel">Shipment Ready Time</label>
                @Html.TextBoxFor(model => model.ReadyTime, new { @class = "form-control" })
            </div>
            <div class="col-md-3">
                <label class="headinglabel">Office Time From</label>
                @Html.TextBoxFor(model => model.OfficeTimeFrom, new { @class = "form-control" })
            </div>

            <div class="col-md-3">
                <label class="headinglabel">Office Time To</label>
                @Html.TextBoxFor(model => model.OfficeTimeTo, new { @class = "form-control" })
            </div>
            </div>
            
            <div class="row no-margin" style="padding-top: 10px">
                <div class="col-md-3">
                <label class="headinglabel">Contact Person</label>
                @Html.TextBoxFor(model => model.ConsignorContact, new { @class = "form-control txttarget" })
            </div>
            <div class="col-md-3">
                <label class="headinglabel">Address 1</label>
                @Html.TextBoxFor(model => model.ConsignorAddress, new { @class = "form-control txttarget" })
            </div>

       
        <div class="col-md-3">
            <label class="headinglabel">Address 2</label>
            @Html.TextBoxFor(model => model.ConsignorAddress1, new { @class = "form-control txttarget" })
        </div>

                 <div class="col-md-3">
                <label class="headinglabel">Address 3</label>
                @Html.TextBoxFor(model => model.ConsignorAddress2, new { @class = "form-control txttarget" })
            </div>
</div>
        
        <div class="row no-margin" style="padding-top: 10px">
           

            <div class="col-md-3">
                <label class="headinglabel">Phone No</label>
                @Html.TextBoxFor(model => model.ConsignorPhone, new { @class = "form-control" })
            </div>

            <div class="col-md-3">
                <label class="headinglabel required">Origin Country</label>
                @Html.DropDownListFor(model => model.ConsignerCountryId,new SelectList(@ViewBag.Country, "CountryID", "CountryName"),"Select",  new { @class = "form-control" })
            </div>

            <div class="col-md-3">
                <label class="headinglabel required">Origin City</label>
                @Html.DropDownListFor(model => model.ConsignerCityId, new SelectList(@ViewBag.City, "CityID", "City"),"Select", new { @class = "form-control" })
            </div>

            <div class="col-md-3">
                <label class="headinglabel">Origin Location</label>
               @* @Html.DropDownListFor(model => model.ConsignerLocationId, new SelectList(@ViewBag.Location, "LocationID", "Location"),"Select", new { @class = "form-control" })*@
                @Html.TextBoxFor(model => model.ConsignorLocationName, new { @class = "form-control txttarget" })
            </div>
        </div>
        
        <div class="row no-margin" style="padding-top: 10px">
            

            <div class="col-md-3">
                <label class="headinglabel">Document Type</label>
                @Html.DropDownList("Document Type", new List<SelectListItem>
                {
                    new SelectListItem{ Text="Doc", Value = "Doc" },
                    new SelectListItem{ Text="Non Doc", Value = "Non Doc" },
                 
                   
                 },"Select", new { @class = "form-control" })
    
            </div>

            <div class="col-md-3">
                <label class="headinglabel">Weight</label>
                @Html.TextBoxFor(model => model.Weight, new { @class = "form-control" })
            </div>

            <div class="col-md-3" style="padding-top:20px">
                  @Html.CheckBox("vehreq", new { @name = "vehreq" }) &nbsp
                    <label class="headinglabel">Vehicle Required</label>
                  
            </div>

             <div class="col-md-3" id="divvehicle">
                  <label class="headinglabel">Vehicle Type</label>
               @Html.DropDownListFor(model => model.VehicleID, new SelectList(@ViewBag.Vehicle, "VehicleID", "VehicleDescription"),"Select", new { @class = "form-control" })
                 @Html.HiddenFor(model => model.Vehicle)
            </div>

        </div>
        <div class="row no-margin">
            <div class="col-md-12">
                <h3 style="color:white">Consignee Details</h3>
                <hr />
            </div>
        </div>
        
        <div class="row no-margin" style="padding-top: 10px">
            <div class="col-md-3">
                <label class="headinglabel">Consignee</label>
                @Html.TextBoxFor(model => model.Consignee, new { @class = "form-control txttarget" })
            </div>

            <div class="col-md-3">
                <label class="headinglabel required">Contact Person</label>
                @Html.TextBoxFor(model => model.ConsigneeContact, new { @class = "form-control txttarget" })
            </div>
            <div class="col-md-3">
                <label class="headinglabel">Address 1</label>
                @Html.TextBoxFor(model => model.ConsigneeAddress, new { @class = "form-control txttarget" })
            </div>


            <div class="col-md-3">
                <label class="headinglabel">Address 2</label>
                @Html.TextBoxFor(model => model.ConsigneeAddress1, new { @class = "form-control txttarget" })
            </div>

        </div>
        
        <div class="row no-margin" style="padding-top: 10px">
            <div class="col-md-3">
                <label class="headinglabel">Address 3</label>
                @Html.TextBoxFor(model => model.ConsigneeAddress2, new { @class = "form-control txttarget" })
            </div>

            <div class="col-md-3">
                <label class="headinglabel">Phone No</label>
                @Html.TextBoxFor(model => model.ConsigneePhone, new { @class = "form-control" })
            </div>

            <div class="col-md-3">
                <label class="headinglabel required">Destination Country</label>
                @Html.DropDownListFor(model => model.ConsigneeCountryID, new SelectList(@ViewBag.Country, "CountryID", "CountryName"),"Select", new { @class = "form-control" })
            </div>

            <div class="col-md-3">
                <label class="headinglabel required">Destination City</label>
                @Html.DropDownListFor(model => model.ConsigneeCityId, new SelectList(@ViewBag.CityConsignee, "CityID", "City"),"Select", new { @class = "form-control" })
            </div>


        </div>
             
        <div class="row no-margin" style="padding-top: 10px">
            <div class="col-md-3">
                <label class="headinglabel">Destination Location</label>
                @Html.TextBoxFor(model => model.ConsigneeLocationName, new { @class = "form-control txttarget" })
            </div>

            

        </div> 
        <hr>
        <div class="row no-margin" style="padding-top: 10px">
            
            <div class="col-md-3">
                 <label class="headinglabel required">Entered By</label>
               @Html.TextBoxFor(model => model.employeename, new { @class = "form-control", Value = @ViewBag.empname })
                @Html.HiddenFor(model => model.EnteredByID)
            </div>

            <div class="col-md-3">
                <label class="headinglabel">Collected By</label>
                @Html.DropDownListFor(model => model.CollectedEmpID, new SelectList(@ViewBag.Employee, "EmployeeID", "EmployeeName"),"Select", new { @class = "form-control" })
            </div>

            <div class="col-md-3">
                <label class="headinglabel">Assigned To</label>
                @Html.DropDownListFor(model => model.EmployeeID, new SelectList(@ViewBag.Employee, "EmployeeID", "EmployeeName"),"Select", new { @class = "form-control" })
            </div>
            <div class="col-md-3">
                <label class="headinglabel">Remarks</label>
                @Html.TextBoxFor(model => model.Remarks, new { @class = "form-control txttarget" })
            </div>


        </div>
        <div class="row no-margin" style="padding-top: 10px">
            <div class="col-md-12">

                <input type="submit" value="Update" class="btn btn-primary btnwidth" />&nbsp;&nbsp;<a href='@Url.Action("Index", "PickUpEnquiry", new { id = 0 })' class="btn btn-primary btnwidth" data-toggle="tooltip" data-placement="right" title="Click here">Cancel</a>


            </div>
        </div>


       
    }

</section>



