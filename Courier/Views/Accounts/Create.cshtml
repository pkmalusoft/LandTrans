@model LTMSV2.Models.AcBookVM
@{
   
    Layout = "~/Views/Shared/_TrueBookMstr.cshtml";
    var _decimal = @Session["Decimal"].ToString();
}
<link href="/Content/Multiselect/bootstrap-multiselect.css" rel="stylesheet" />
<script src="/Content/Multiselect/bootstrap-multiselect.js"></script>
<script src="~/Content/NewCSS/plugins/jQuery/moment.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.43/js/bootstrap-datetimepicker.min.js"></script>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.43/css/bootstrap-datetimepicker.min.css" />
<style>
    .consignmulti + .btn-group button, #Consignment + .btn-group, #CityID + .btn-group button, #CityID + .btn-group {
        display: block;
        width: 100%;
    }
    #Consignment + .btn-group button, #Consignment + .btn-group, #CityID + .btn-group button, #CityID + .btn-group {
        display: block;
        width: 100%;
    }

</style>
<style>
    .form-control, input {
        height: 30px !important;
        border-radius: 5px !important;
        border: 1px solid #ccc;
    }
    .errors {
        color: red;
    }
    ul.ui-front {
        z-index: 1100;
    }
    #details tr {
        height: 32px;
    }
    #details input {
        width: 100%!important;
    }    
  /*  #details td input {
        background: transparent;
        border-color: transparent;
    }*/

        #details td input:focus {
            border-color: #07a7e3;
        }
        #details tr:nth-of-type(2) td:nth-of-type(7){
            display:flex;
        }
    #details tr:first-of-type, #ExpAllocationTable tr:first-of-type {
        background: #35b8eb;
        color: #fff;
    }

    #DeleteNewRow {
        color: #dd4b39;
    }

    .headinglabel {
        font-family: Calibri;
        font-size: 16px;
        color: #2b2929 !important;
    }

    .searchdiv {
        background-color: #fff;
        width: 100%;
        margin: 0 auto;
        max-width: 700px;
        padding: 20px;
        margin-top: 20px;
        border-radius: 10px;
        box-shadow: 0 9px 23px rgba(0, 0, 0, 0.09), 0 5px 5px rgba(0, 0, 0, 0.06) !important;
    }
    .justify-content-between {
        justify-content: space-between;
    }

    #consignmentpopup h5 {
        border: 2px solid #35b8eb;
        min-width: 150px;
        height: 30px;
        border-radius: 5px;
        line-height: 30px;
        color: #35b8eb;
        text-align: center;
        font-weight: bold;
    }
    /*input {
        height: 40px !important;
        padding: 0px 15px !important;
        margin-top: 10px;
        border-radius: 5px;
        font-size: 14px !important;
        border: 1px solid #ccc;
        font-weight: normal !important
    }*/

    .jobform {
        background-color: #fff;
        box-shadow: 0 9px 23px rgba(0, 0, 0, 0.09), 0 5px 5px rgba(0, 0, 0, 0.06) !important;
        border-radius: 25px;
        margin-bottom: 27px;
        /*padding: 20px;
        width: 100%;
        margin: 0 auto;
        max-width: 900px;*/
        padding-top: 20px;
        padding-left: 20px;
        padding-right: 20px;
        width: 96%;
    }

    legend {
        color: #000 !important;
    }

    .Allocate {
        font-size: 20px;
    }

    #DeleteNewRow {
        margin: 2px;
        padding: 2px;
        cursor: pointer;
    }

    .clsreceivedfrom {
        width: 100%;
    }
</style>
<script type="text/javascript">
    var accounturl = '/Accounts/GetHeadsForCash';
    function GetCurrentDate() {
        
            var m_names = new Array("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec");
            var startdate = '@Session["FyearFrom"].ToString()';
            var d = new Date();
            var curr_date = d.getDate();
            var curr_month = d.getMonth() + 1;
            var curr_year = d.getFullYear();

            var reqdate = curr_date + "-" + curr_month + "-" + curr_year + ' ' + d.getHours() + ':' + d.getMinutes();
            //var reqdate = curr_date + "-" + curr_month + "-" + curr_year + ' ' + d.getHours() + ':' + d.getMinutes();
            return (curr_date + "-" + curr_month + "-" + curr_year);
        }
    $(document).ready(function () {
            var startdate = '@Session["FyearFrom"].ToString()';
        var enddate = '@Session["FyearTo"].ToString()';
        var sd = new Date(startdate);
        var ed = new Date(enddate);

        var v = $("#paytype option:selected").val();
        if (v == "1") {
            accounturl = '/Accounts/GetHeadsForCash';
        }
        else {
            accounturl = '/Accounts/GetHeadsForBank';
        }

            $(function () {

                $('#transdate').datetimepicker({
                    //maxDate: ed,
                    //minDate: sd,
                    format: 'DD-MM-YYYY'
                });
            });

        $(function () {

            $("#chequedate").datetimepicker({
                //maxDate: ed,
                //minDate: sd,
                format: 'DD-MM-YYYY'
            });
               
        });

        if (@ViewBag.EditMode== false) {
            $("#chequedate").val(GetCurrentDate())
            $("#transdate").val(GetCurrentDate())
            $('#btnsave').html('Save');

        }
        else {

        }
        
        $("#ReceivedFrom").keydown(function (event) {
            if (event.keyCode == 9) {
                if ($("#ReceivedFrom").val().length == 0) {
                    event.preventDefault();
                    $("#btnsave").focus();
                }
            }
        });

        $("#ReceivedFrom").change(function () {
            if ($("#ReceivedFrom").val().trim() == '') {
                $('#ReceivedFrom').val('');
                $('#SelectedReceivedFrom').val(0);
                $('#SelectedReceivedFrom').attr('label', '')
            }
            else if ($("#ReceivedFrom").val() != $("#SelectedReceivedFrom").attr('label')) {
                $('#ReceivedFrom').val('');
                $('#SelectedReceivedFrom').val(0);
                $('#SelectedReceivedFrom').attr('label', '')
                $('#ReceivedFrom').focus();
            }
        });

        //  $("#chequedate").val(GetCurrentDate())
        
            $(":text").css({ "border-radius": "5px" });
            $("select").css({ "border-radius": "5px" });

            $("#bankname").prop('disabled', true);
            $("#chequeno").prop('disabled', true);
            $("#chequedate").prop('disabled', true);
        $("#partyname").prop('disabled', true);

           Bankdetails_enable();

        function Bankdetails_enable() {
            
            var rcbpaytype = $("#transtype option:selected").val();
            var rcbType = $("#paytype option:selected").val();
            if (rcbpaytype == "1" && rcbType == "1") {
                $("#TransactionType").val("CBR");
                $("#chequeno").prop('disabled', true);
                $("#chequedate").prop('disabled', true);
                $("#bankname").prop('disabled', true);
                $("#partyname").prop('disabled', true);
                $("#chequeno").val('');
                $("#bankname").val('');
                $("#partyname").val('');
            }
            else if (rcbpaytype == "1" && rcbType > 1) {
                $("#TransactionType").val("BKR");
                $("#bankname").prop('disabled', false);
                $("#partyname").prop('disabled', false);
                $("#chequeno").prop('disabled', false);
                $("#chequedate").prop('disabled', false);
            }
            else if (rcbpaytype == "2" && rcbType == "1") {
                $("#TransactionType").val("CBP");
                $("#chequeno").prop('disabled', true);
                $("#chequedate").prop('disabled', true);
                $("#bankname").prop('disabled', true);

                $("#partyname").prop('disabled', true);
                $("#chequeno").val('');
                $("#bankname").val('');
                $("#partyname").val('')
            }
            else if (rcbpaytype == "2" && rcbType > 1) {
                $("#TransactionType").val("BKP");
                $("#bankname").prop('disabled', true);

                $("#partyname").prop('disabled', true);
                $("#chequeno").prop('disabled', false);
                $("#chequedate").prop('disabled', false);
                $("#bankname").val('');
                $("#partyname").val('');
            } else {
                $("#bankname").prop('disabled', true);
                $("#chequeno").prop('disabled', true);
                $("#chequedate").prop('disabled', true);
                $("#partyname").prop('disabled', true);
            }
        }
            $("#transtype").change(function () {
                var v = $("#transtype option:selected").val();
                if (v == "1") {
                    $(".label1").html("Received From");
                }
                else {
                    $(".label1").html("Paid To");
                }
                
                var rcbpaytype = $("#transtype option:selected").val();
                var rcbType = $("#paytype option:selected").val();

                if (rcbpaytype == "1" && rcbType == "1") {
                    $("#TransactionType").val("CBR");
                    $("#chequeno").prop('disabled', true);
                    $("#chequedate").prop('disabled', true);
                    $("#bankname").prop('disabled', true);

                    $("#partyname").prop('disabled', true);
                    $("#chequeno").val('');
                    $("#bankname").val('');
                    $("#partyname").val('');
                }
                else if (rcbpaytype == "1" && rcbType > 1) {
                    $("#TransactionType").val("BKR");
                    $("#bankname").prop('disabled', false);

                    $("#partyname").prop('disabled', false);
                    $("#chequeno").prop('disabled', false);
                    $("#chequedate").prop('disabled', false);

                }
                else if (rcbpaytype == "2" && rcbType == "1") {
                    $("#TransactionType").val("CBP");
                    $("#chequeno").prop('disabled', true);
                    $("#chequedate").prop('disabled', true);
                    $("#bankname").prop('disabled', true);

                    $("#partyname").prop('disabled', true);
                    $("#chequeno").val('');
                    $("#bankname").val('');
                    $("#partyname").val('')
                }
                else if (rcbpaytype == "2" && rcbType > 1) {
                    $("#TransactionType").val("BKP");
                    $("#bankname").prop('disabled', true);

                    $("#partyname").prop('disabled', true);
                    $("#chequeno").prop('disabled', false);
                    $("#chequedate").prop('disabled', false);
                    $("#bankname").val('');
                    $("#partyname").val('');
                }
            });


        $("#paytype").change(function () {
            
                var v = $("#paytype option:selected").val();
                if (v == "1") {
                    accounturl = '/Accounts/GetHeadsForCash';
                    //$.ajax({
                    //    type: "POST",
                    //    url: "/Accounts/GetHeadsForCash",
                    //    datatype: "Json",
                    //    success: function (data) {
                    //        $("#AcHead").empty();

                    //        $.each(data, function (index, value) {
                    //            $('#AcHead').append('<option value="' + value.AcHeadID + '">' + value.AcHead + '</option>');
                    //        });

                    //    }
                    //});
                }
                else {
                    accounturl = '/Accounts/GetHeadsForBank';
                    //$.ajax({
                    //    type: "POST",
                    //    url: "/Accounts/GetHeadsForBank",
                    //    datatype: "Json",
                    //    success: function (data) {
                    //        $("#AcHead").empty();

                    //        $.each(data, function (index, value) {
                    //            $('#AcHead').append('<option value="' + value.AcHeadID + '">' + value.AcHead + '</option>');
                    //        });

                    //    }
                    //});
                }


                var rcbpaytype = $("#transtype option:selected").val();
                var rcbType = $("#paytype option:selected").val();

                if (rcbpaytype == "1" && rcbType == "1") {
                    $("#TransactionType").val("CBR");
                    $("#chequeno").prop('disabled', true);
                    $("#chequedate").prop('disabled', true);
                    $("#bankname").prop('disabled', true);

                    $("#partyname").prop('disabled', true);
                    $("#chequeno").val('');
                    $("#bankname").val('');
                    $("#partyname").val('');
                }
                else if (rcbpaytype == "1" && rcbType > 1) {
                    $("#TransactionType").val("BKR");
                    $("#bankname").prop('disabled', false);

                    $("#partyname").prop('disabled', false);
                    $("#chequeno").prop('disabled', false);
                    $("#chequedate").prop('disabled', false);
                }
                else if (rcbpaytype == "2" && rcbType == "1") {
                    $("#TransactionType").val("CBP");
                    $("#chequeno").prop('disabled', true);
                    $("#chequedate").prop('disabled', true);
                    $("#bankname").prop('disabled', true);

                    $("#partyname").prop('disabled', true);
                    $("#chequeno").val('');
                    $("#bankname").val('');
                    $("#partyname").val('')
                }
                else if (rcbpaytype == "2" && rcbType > 1) {
                    $("#TransactionType").val("BKP");
                    $("#bankname").prop('disabled', true);

                    $("#partyname").prop('disabled', true);
                    $("#chequeno").prop('disabled', false);
                    $("#chequedate").prop('disabled', false);
                    $("#bankname").val('');
                    $("#partyname").val('');
                }
            });
                   
          
         $("#AmountIncludingTax").click(function () {
            if ($("#AmountIncludingTax").is(':checked')) {
                if ($("#TaxPercent").val() > 0 && $("#amount").val() > 0) {
                    var amount = parseFloat($("#amount").val());
                    var taxpercent = parseFloat($("#TaxPercent").val()) / 100.00;
                     var taxamount = amount - (amount / (1 + taxpercent));
                    $("#TaxAmount").val(taxamount.toFixed(@_decimal));
                }
                else {
                    $("#TaxAmount").val(0);
                }
            }
            else {
                if ($("#TaxPercent").val() > 0 && $("#amount").val() > 0) {
                    var tamount = ($("#amount").val() * $("#TaxPercent").val()) / 100.00;
                    $("#TaxAmount").val(tamount.toFixed(@_decimal));
                }
                else {
                    $("#TaxAmount").val(0);
                }
            }
        });
           $("#amount").change(function () {
             if ($("#AmountIncludingTax").is(':checked')) {
                if ($("#TaxPercent").val() > 0 && $("#amount").val() > 0) {
                    var amount = parseFloat($("#amount").val());
                    var taxpercent = parseFloat($("#TaxPercent").val()) / 100.00;
                     var taxamount = amount - (amount / (1 + taxpercent));
                    $("#TaxAmount").val(taxamount.toFixed(@_decimal));
                }
                else {
                    $("#TaxAmount").val(0);
                }
            }
            else {
                if ($("#TaxPercent").val() > 0 && $("#amount").val() > 0) {
                    var tamount = ($("#amount").val() * $("#TaxPercent").val()) / 100.00;
                    $("#TaxAmount").val(tamount.toFixed(@_decimal));
                }
                else {
                    $("#TaxAmount").val(0);
                }
            }
        });

        $("#TaxPercent").change(function () {
           if ($("#AmountIncludingTax").is(':checked')) {
                if ($("#TaxPercent").val() > 0 && $("#amount").val() > 0) {
                    var amount = parseFloat($("#amount").val());
                    var taxpercent = parseFloat($("#TaxPercent").val()) / 100.00;
                     var taxamount = amount - (amount / (1 + taxpercent));
                    $("#TaxAmount").val(taxamount.toFixed(2));
                }
                else {
                    $("#TaxAmount").val(0);
                }
            }
            else {
                if ($("#TaxPercent").val() > 0 && $("#amount").val() > 0) {
                    var tamount = ($("#amount").val() * $("#TaxPercent").val()) / 100.00;
                    $("#TaxAmount").val(tamount.toFixed(@_decimal));
                }
                else {
                    $("#TaxAmount").val(0);
                }
            }
        });


        $("#btnAdd").click(function () {
            
            if ($("#SelectedReceivedFrom").val() == "" || $("#SelectedReceivedFrom").val() == "0" || $("#ReceivedFrom").val() == "") {
                alert('Please Select "Received From"');
                $("#ReceivedFrom").focus();
                return false;
            }
            else if ($("#ReceivedFrom option:selected").val() == "") {
                alert("Please Select Head");
                $("#ReceivedFrom").focus();
                return false;
            }
            else if ($("#amount").val() == "") {
                alert("Please Enter The Amount");
                $("#amount").focus();
                return false;
            }
            else if (parseFloat($("#amount").val()) == 0) {
                alert("Please Enter The Amount");
                $("#amount").focus();
                return false;
            }
            else {
                var str = "";
                var totalamt = 0;
                
                var i = $('#details > tbody > tr').length - 1;

                var s = 'name="AcExpAllocationVM';
                var ExpTableHtml = $('#ExpAllocationTable').clone().attr("id", i + "_ExpAllocationTable").css('display', 'none').addClass('CostAllocationDetail').wrap('<p>').parent().html();
                ExpTableHtml = ExpTableHtml.replace(/name="AcExpAllocationVM/g, 'name="AcJDetailVM[' + i + '].AcExpAllocationVM');
                var amounttaxcheck = '';
                var amounttaxcheck = '';
                if ($("#AmountIncludingTax").is(':checked')) {
                    amounttaxcheck = '<input type="checkbox" id="ChkAmountIncludingTax_' + i + '" value="true" checked  name="AcJDetailVM[' + i + '].AmountIncludingTax" />';
                }
                else {
                    amounttaxcheck = '<input type="checkbox" id="ChkAmountIncludingTax_' + i + '" value="false"  name="AcJDetailVM[' + i + '].AmountIncludingTax" />';
                }


                var remark1 = $('#remark1').val();
                var inscans = $('#remark1').attr('inscans');
                if (inscans == 'undefined')
                    inscans = ''

                var ConsignmentHTML = '<input type="hidden" id="editinscans_' + i + '" name="AcJDetailVM[' + i + '].InScans" value="' + inscans + '"/><a href="Javascript:void(0)" style="float:right" title="Add Consignments" onclick="EditConsignmentPopup(' + i + ')"><i class="fa fa-eye" ></i></a > ';

                var objHtml = '<tr>' + '<td style="padding-left:10px"><input type = "hidden" name="AcJDetailVM[' + i + '].IsDeleted" class="hdndeleted" /><input type="hidden" class=JAcHead id="JAcHead_' + i + '" value=' + $("#SelectedReceivedFrom").val() + ' name="AcJDetailVM[' + i + '].AcHeadID"><input type="text" class="clsreceivedfrom" id="ReceivedFrom_' + i + '" value="' + $("#ReceivedFrom").val() + '" name="AcJDetailVM[' + i + '].AcHead"></td><td style="padding-left:10px">' + amounttaxcheck + '<input type="hidden" value=' + $("#AmountIncludingTax").is(':checked') + ' name="AcJDetailVM[' + i + '].AmountIncludingTax"></td><td class=textright style="padding-right:10px"><input id="JAcAmount_' + i + '" type="text" class="JAcAmt text-right txtNum" value=' + parseFloat($("#amount").val()).toFixed(@_decimal) + ' name="AcJDetailVM[' + i + '].Amt"></td>' + '<td class=textright style="padding-right:10px"><input type="text" id="JAcTaxPercent_' + i + '" class="JAcAmt text-right txtNum" value=' + $("#TaxPercent").val() + ' name="AcJDetailVM[' + i + '].TaxPercent"></td>' + '<td class="textright" style="padding-right:10px"><input type="text" class="JAcAmt text-right txtNum" readonly="readonly" id="JAcTaxAmount_' + i + '" value=' + parseFloat($("#TaxAmount").val()).toFixed(3) + ' name="AcJDetailVM[' + i + '].TaxAmount"></td>' + '<td style="padding-left:10px"><input type=text id="JAcSupplierName_' + i + '"' + $("#SupplierName").val() + '/><input type="hidden"  id="JAcSupplierId_' + i + '" value=' + $("#SupplierID").val() + ' name="AcJDetailVM[' + i + '].SupplierID" /></td>';
                objHtml = objHtml + '<td style="padding-left:10px"><input type="text" id="editremark_' + i + '" value="' + $("#remark1").val() + '"  name="AcJDetailVM[' + i + '].Rem" />' + ConsignmentHTML + '</td>';
                objHtml = objHtml + '<td><img src="/Content/img/details_open.png" id="plus_minus" style="cursor: pointer;" class="open" />' + ExpTableHtml + '</td>';
                objHtml = objHtml + '<td><a href="javascript:void(0)" id="DeleteNewRow"><i class="fa fa-times"></i></a></td>';
                objHtml = objHtml + '</tr>';
                $("#details").append(objHtml);
                $('#RowCount').val("0");
                $("#ExpAllocationTable").find("tr:gt(0)").remove();
                $("#ReceivedFrom").val("");
                $("#SelectedReceivedFrom").val("0");
                $("#amount").val('');
                $("#TaxPercent").val("");
                $("#TaxAmount").val("");
                $('#SupplierID').val(0);
                $('#SupplierName').val('');
                $("#remark1").val('');
                $("#ReceivedFrom_" + i).autocomplete({
                    source: function (request, response) {
                        $.ajax({
                            url: '/Accounts/AccountHead',
                            datatype: "json",
                            data: {
                                term: request.term
                            },
                            success: function (data) {
                                response($.map(data, function (val, item) {
                                    return {
                                        label: val.AcHead,
                                        value: val.AcHead,
                                        AcHeadID: val.AcHeadID,
                                        TaxPercent: val.TaxPercent
                                    }
                                }))
                            }
                        })
                    }, minLength: 1,
                    autoFocus:false,
                    focus: function (e, a) {                        
                        $("#ReceivedFrom_" + i).val(a.item.label);
                        $("#JAcHead_" + i).val(a.item.AcHeadID);
                        $("#JAcHead_" + i).attr('label', a.item.label);
                        $("#TaxPercent_" + i).val(a.item.TaxPercent);

                    },
                    select: function (e, a) {
                        e.preventDefault();
                        $("#ReceivedFrom_" + i).val(a.item.label);
                        $("#JAcHead_" + i).val(a.item.AcHeadID);
                        $("#JAcHead_" + i).attr('label',a.item.label);
                        $("#TaxPercent_" + i).val(a.item.TaxPercent);

                    }

                });
                $("#ReceivedFrom_" + i).change(function () {
                    if ($("#ReceivedFrom_" + i).val().trim() == "") {
                        $("#JAcHead_" + i).val('0');
                        $("#JAcHead_" + i).attr('label', '');
                    }
                    else if ($("#ReceivedFrom_" + i).val() != $("#JAcHead_" + i).attr('label')) {
                        $("#JAcHead_" + i).val('');
                        $("#JAcHead_" + i).attr('label', '');
                        $("#ReceivedFrom_" + i).val('');
                    }
                });
                $("#JAcSupplierName_" + i).autocomplete({
                    source: function (request, response) {
                        $.ajax({
                            url: '/Accounts/Supplier',
                            datatype: "json",
                            data: {
                                term: request.term
                            },
                            success: function (data) {
                                response($.map(data, function (val, item) {
                                    return {
                                        label: val.SupplierInfo,
                                        value: val.SupplierInfo,
                                        SupplierID: val.SupplierID
                                    }
                                }))
                            }
                        })
                    },
                    minLength: 1,
                    autoFocus: false,
                    focus: function (event, ui) {
                        $("#JAcSupplierName_" + i).val(ui.item.label);
                        $("#JAcSupplierId_" + i).val(ui.item.SupplierID);
                    },
                    select: function (e, i) {
                        e.preventDefault();
                        $("#JAcSupplierName_" + i).val(i.item.label);
                        $("#JAcSupplierId_" + i).val(i.item.SupplierID);

                    },

                });

                $("#ChkAmountIncludingTax_" + i).click(function () {

                    if ($("#ChkAmountIncludingTax_" + i).is(':checked')) {
                        $("#ChkAmountIncludingTax_" + i).val(true);
                        if ($("#JAcTaxPercent_" + i).val() > 0 && $("#JAcAmount_" + i).val() > 0) {
                            var amount = parseFloat($("#JAcAmount_" + i).val());
                            var taxpercent = parseFloat($("#JAcTaxPercent_" + i).val()) / 100.00;
                            var taxamount = amount - (amount / (1 + taxpercent));
                            $("#JAcTaxAmount_" + i).val(taxamount.toFixed(@_decimal));
                        }
                        else {
                            $("#JAcTaxAmount_" + i).val(0);
                        }
                    }
                    else {
                        $("#ChkAmountIncludingTax_" + i).val(false);
                        if ($("#JAcTaxPercent_" + i).val() > 0 && $("#JAcAmount_" + i).val() > 0) {
                            var tamount = ($("#JAcAmount_" + i).val() * $("#JAcTaxPercent_" + i).val()) / 100.00;
                            parseFloat($("#JAcTaxAmount_" + i).val(tamount)).toFixed(@_decimal);
                        }
                        else {
                            $("#JAcTaxAmount_" + i).val(0);
                        }
                    }


                });

                $("#JAcAmount_" + i).change(function () {

                    if ($("#ChkAmountIncludingTax_" + i).is(':checked')) {
                        if ($("#JAcTaxPercent_" + i).val() > 0 && $("#JAcAmount_" + i).val() > 0) {
                            var amount = parseFloat($("#JAcAmount_" + i).val());
                            var taxpercent = parseFloat($("#JAcTaxPercent_" + i).val()) / 100.00;
                            var taxamount = amount - (amount / (1 + taxpercent));
                            $("#JAcTaxAmount_" + i).val(taxamount.toFixed(@_decimal));
                        }
                        else {
                            $("#JAcTaxAmount_" + i).val(0);
                        }
                    }
                    else {
                        if ($("#JAcTaxPercent_" + i).val() > 0 && $("#JAcAmount_" + i).val() > 0) {
                            var tamount = ($("#JAcAmount_" + i).val() * $("#JAcTaxPercent_" + i).val()) / 100.00;
                            parseFloat($("#JAcTaxAmount_" + i).val(tamount)).toFixed(@_decimal);
                        }
                        else {
                            $("#JAcTaxAmount_" + i).val(0);
                        }
                    }
                });

                $("#JAcTaxPercent_" + i).change(function () {
                    if ($("#ChkAmountIncludingTax_" + i).is(':checked')) {
                        if ($("#JAcTaxPercent_" + i).val() > 0 && $("#JAcAmount_" + i).val() > 0) {
                            var amount = parseFloat($("#JAcAmount_" + i).val());
                            var taxpercent = parseFloat($("#JAcTaxPercent_" + i).val()) / 100.00;
                            var taxamount = amount - (amount / (1 + taxpercent));
                            $("#JAcTaxAmount_" + i).val(taxamount.toFixed(@_decimal));
                        }
                        else {
                            $("#JAcTaxAmount_" + i).val(0);
                        }
                    }
                    else {
                        if ($("#JAcTaxPercent_" + i).val() > 0 && $("#JAcAmount_" + i).val() > 0) {
                            var tamount = ($("#JAcAmount_" + i).val() * $("#JAcTaxPercent_" + i).val()) / 100.00;
                            parseFloat($("#JAcTaxAmount_" + i).val(tamount)).toFixed(@_decimal);
                        }
                        else {
                            $("#JAcTaxAmount_" + i).val(0);
                        }
                    }
                });



                return false;
            }
        });

        $(".Allocate").on("click", function () {
            $('#popup').show();
            $('#popupbackground').show();
        });


        $("#AllocationClose").on("click", function () {
            $('#popup').hide();
            $('#popupbackground').hide();
        });

            $("#btn1").click(function () {

                //alert("Hiii");
                //var acid=$(this).parent("td").parent("tr").find(".JAcHead").val();
                //var amt=$(this).parent("td").parent("tr").find(".JAcAmt").val();
                //var ajaxCallURL = '/Accounts/ExpAllocation';
                //$.ajax({
                //    type: "GET",
                //    url: ajaxCallURL,
                //    contentType: "application/json; charset=utf-8",
                //    datatype: "json",
                //    success: function (data) {
                //        $('#mycontent').html(data);
                //        //$('#myModal').modal(options);
                //        $('#myModal').modal('show');
                //    },
                //    error: function () {
                //        alert("Content load failed.");
                //    }
                //});


                $.ajax({
                    url: "@Url.Action("ExpAllocation", "Accounts")",
                    data: { amount:500,acheadid:325 },
                    type: "GET",
                       dataType: "json",
                       success: function (data) {
                           //$("#res").html(data.view);
                           $(".modal-body").html(data.view);
                           $("#myModal").modal('show');

                       },
                       error: function () {
                           alert("Failed! Please try again.");
                       }
                   });
            });


        $("#btnsave").click(function () {
            
            var tlen = $('#details > tbody > tr').length - 1;
                if ($("#transdate").val() == "") {
                    alert("Please Select Transaction Date");
                    return false;

                }
                else if ($("#AcHead").val() == "") {
                    alert("Please Select Account Head");
                    return false;
                }
                else if (tlen == 0) {
                    alert("Please Add Transaction Details");
                    return false;
                }
                else {
                    return true;
                }
            });

        $("#btnUpdate").click(function () {

                var ind = $("#currindex").val();
                var amt = $("#amount").val();
                $("#details").find("tr:eq('" + ind + "')").find("td:eq(1)").empty();
                $("#details").find("tr:eq('" + ind + "')").find("td:eq(1)").html(amt + '<input type="hidden" class="JAcAmt" value=' + amt + ' name="AcJDetailVM[' + ind + '].Amt">');


                $(this).hide();
                $("#btnAdd").show();
                $("#amount").val('');

            });

            var v = $("#transtype option:selected").val();
        var innerTblcount = 1;
        var xcountval = 0;
            $.ajax({
                type: "POST",
                url: "/Accounts/GetAcJDetails",
                datatype: "Json",
                data: { id: $("#AcJournalID").val(), transtype: v },
                success: function (data) {
                    $.each(data, function (index, value) {
                        var ExpenseAllocationData;

                        $.ajax({
                            type: "POST",
                            url: "/Accounts/GetAcJDetailsExpenseAllocation",
                            data: { AcJournalDetailID: value.AcJournalDetID },
                            success: function (data) {
                                ExpenseAllocationData = data;
                                var incountval = 0;
                                var i = $('#details tr').length - innerTblcount;
                                var s = 'name="AcExpAllocationVM';
                                var ExpTableHtml = '<table id="' + value.AcJournalDetID + '_ExpAllocationTable" class="table table-bordered table-responsive CostAllocationDetail" style="display:none;"><tr><td>Analysis Head</td><td>Amount</td><td>Delete</td></tr>';
                                $.each(data, function (i, v) {
                                    innerTblcount = innerTblcount + 1;

                                    var RowCount = parseInt($('#RowCount').val());
                                    ExpTableHtml = ExpTableHtml + '<tr><td><input type="text" class="AcAnalysisHeadAllocationtxt" id="Allocationtxt_' + xcountval + '" value="' + v.AnalysisHead + '" /><input type="hidden" class="AcAnalysisHeadAllocationID" name="AcExpAllocationVM[' + incountval + '].AcAnalysisHeadAllocationID" value="' + v.AcAnalysisHeadAllocationID + '" /><input type="hidden" id="newallocationHead_' + xcountval + '" name="AcExpAllocationVM[' + incountval + '].AcHead" value="' + v.AnalysisHeadID + '"/></td>';
                                    ExpTableHtml = ExpTableHtml + '<td><input type="text" id="' + incountval + '_Amount" name="AcExpAllocationVM[' + incountval + '].ExpAllocatedAmount" class="ExpAllocatedAmountDetails" value="' + parseFloat(v.Amount).toFixed(@_decimal) + '"/></td>';
                                    ExpTableHtml = ExpTableHtml + '<td><a href="javascript:void(0)" id="DeleteAllocationRow"><i class="fa fa-times"></i></a></td>';
                                    ExpTableHtml = ExpTableHtml + '</tr>';
                                    $('#RowCount').val("0");
                                    incountval = incountval + 1;
                                    xcountval = xcountval + 1;
                                });
                                innerTblcount = innerTblcount + 1;

                                ExpTableHtml = ExpTableHtml + '</table>';
                                //  $('#ExpAllocationTable').append(ExpTableHtml);
                                ExpTableHtml = ExpTableHtml.replace(/name="AcExpAllocationVM/g, 'name="AcJDetailVM[' + i + '].AcExpAllocationVM');
                                var amounttaxcheck = '';
                                if (value.AmountIncludingTax) {
                                    amounttaxcheck = '<input type="checkbox" id="ChkAmountIncludingTax_' + i + '" value="true" checked name="AcJDetailVM[' + i + '].AmountIncludingTax" />';
                                }
                                else {
                                    amounttaxcheck = '<input type="checkbox" id="ChkAmountIncludingTax_' + i + '" value="false"  name="AcJDetailVM[' + i + '].AmountIncludingTax"  />';
                                }
                                //var ConsignmentHTML = '<td><select class="consignmulti" id="Consignment_' + i + '" name="AcJDetailVM[' + i + '].SelectedValues" multiple="multiple"><option value = "" ></option></select></td>';
                                var ConsignmentHTML = '<input type="hidden" id="editinscans_' + i + '" value="' + value.InScans + '" name="AcJDetailVM[' + i + '].InScans"/><a href="Javascript:void(0)" style="float;right" title="Add Consignments" onclick="EditConsignmentPopup(' +  i + ')"><i class="fa fa-eye"></i></a> ';
                                //'<input type="hidden" value=' + value.AmountIncludingTax + ' name="AcJDetailVM[' + i + '].AmountIncludingTax">
                                var objHtml = '<tr>' + '<td style="padding-left:10px"><input type ="hidden" name="AcJDetailVM[' + i + '].IsDeleted" class="hdndeleted" /> <input type="hidden" class=JAcHead id="JAcHead_' + i + '" value=' + value.AcHeadID + ' name="AcJDetailVM[' + i + '].AcHeadID"><input type="text" class="clsreceivedfrom" id="ReceivedFrom_' + i + '" value=" ' + value.AcHead + '" name="AcJDetailVM[' + i + '].AcHead"></td>' + '<td style="padding-left:10px">' + amounttaxcheck + '</td>' + '<td class=textright style="padding-right:10px"><input type="text" id="JAcAmount_' + i + '" class="JAcAmt text-right txtNum" value=' + parseFloat(value.Amt).toFixed(@_decimal) + ' name="AcJDetailVM[' + i + '].Amt"></td>' + '<td class=textright style="padding-right:10px"><input type="text" id="JAcTaxPercent_' + i + '" class="JAcAmt text-right txtNum" value=' + parseFloat(value.TaxPercent).toFixed(2) + ' name="AcJDetailVM[' + i + '].TaxPercent"></td>' + '<td class=textright style="padding-right:10px"><input type="text" readonly="readonly"  id="JAcTaxAmount_' + i + '" class="JAcAmt text-right txtNum" value=' + parseFloat(value.TaxAmount).toFixed(@_decimal) + ' name="AcJDetailVM[' + i + '].TaxAmount"></td>' + '<td style="padding-left:10px"><input type=text id="JAcSupplierName_' + i + '" value="' + value.SupplierName + '" /><input type="hidden"  id="JAcSupplierId_' + i + '" value=' + value.SupplierID + ' name="AcJDetailVM[' + i + '].SupplierID" /></td>';
                                objHtml = objHtml + '<td class="flex" style="padding-left:10px"><input type="text"  id="editremark_' + i + '"   title="' + value.Rem + '" value="' + value.Rem + '" name="AcJDetailVM[' + i + '].Rem" />' + ConsignmentHTML + '</td>';
                                objHtml = objHtml + '<td><img src="/Content/img/details_open.png" id="plus_minus" style="cursor: pointer;" class="open" />' + ExpTableHtml + '</td>';
                                objHtml = objHtml + '<td><a href="javascript:void(0)" id="DeleteNewRow"><i class="fa fa-times"></i></a><input type="hidden" class="AcJournalDetID" name="AcJDetailVM[' + i + '].AcJournalDetID" value=' + value.AcJournalDetID + ' /></td>';
                                objHtml = objHtml + '</tr>';
                                $("#details").append(objHtml);


                                $("#ReceivedFrom_" + i).autocomplete({
                                    source: function (request, response) {
                                        $.ajax({
                                            url: '/Accounts/AccountHead',
                                            datatype: "json",
                                            data: {
                                                term: request.term
                                            },
                                            success: function (data) {
                                                response($.map(data, function (val, item) {
                                                    return {
                                                        label: val.AcHead,
                                                        value: val.AcHead,
                                                        AcHeadID: val.AcHeadID,
                                                        TaxPercent: val.TaxPercent
                                                    }
                                                }))
                                            }
                                        })
                                    }, minLength: 1,
                                    focus: function (e, a) {                                        
                                        $("#ReceivedFrom_" + i).val(a.item.label);
                                        $("#JAcHead_" + i).val(a.item.AcHeadID);
                                        $("#JAcHead_" + i).attr('label', a.item.label);
                                        $("#JAcTaxPercent_" + i).val(a.item.TaxPercent);
                                    },
                                    select: function (e, a) {
                                        e.preventDefault();
                                        $("#ReceivedFrom_" + i).val(a.item.label);
                                        $("#JAcHead_" + i).val(a.item.AcHeadID);
                                        $("#JAcHead_" + i).attr('label',a.item.label);
                                        $("#JAcTaxPercent_" + i).val(a.item.TaxPercent);

                                    }

                                });
                                $("#ReceivedFrom_" + i).change(function () {
                                    if ($("#ReceivedFrom_" + i).val().trim() == "") {
                                        $("#ReceivedFrom_" + i).val('');
                                        $("#JAcHead_" + i).val('0');
                                        $("#JAcHead_" + i).attr('label', '');
                                    }
                                    else if ($("#ReceivedFrom_" + i).val() != $("#JAcHead_" + i).attr('label')) {
                                        $("#JAcHead_" + i).val('');
                                        $("#JAcHead_" + i).attr('label', '');
                                        $("#ReceivedFrom_" + i).val('');
                                    }
                                })
                                $("#JAcSupplierName_" + i).autocomplete({
                                    source: function (request, response) {
                                        $.ajax({
                                            url: '/Accounts/Supplier',
                                            datatype: "json",
                                            data: {
                                                term: request.term
                                            },
                                            success: function (data) {
                                                response($.map(data, function (val, item) {
                                                    return {
                                                        label: val.SupplierInfo,
                                                        value: val.SupplierInfo,
                                                        SupplierID: val.SupplierID
                                                    }
                                                }))
                                            }
                                        })
                                    },
                                    minLength: 1,
                                    autoFocus: false,
                                    focus: function (event, ui) {
                                        $("#JAcSupplierName_" + i).val(ui.item.label);
                                        $("#JAcSupplierId_" + i).val(ui.item.SupplierID);
                                    },
                                    select: function (e, i) {
                                        e.preventDefault();
                                        $("#JAcSupplierName_" + i).val(i.item.label);
                                        $("#JAcSupplierId_" + i).val(i.item.SupplierID);

                                    },
                                });

                                //ChkAmountIncludingTax_2
                                $("#ChkAmountIncludingTax_" + i).click(function () {

                                    if ($("#ChkAmountIncludingTax_" + i).is(':checked')) {
                                        $("#ChkAmountIncludingTax_" + i).val(true);
                                        if ($("#JAcTaxPercent_" + i).val() > 0 && $("#JAcAmount_" + i).val() > 0) {
                                            var amount = parseFloat($("#JAcAmount_" + i).val());
                                            var taxpercent = parseFloat($("#JAcTaxPercent_" + i).val()) / 100.00;
                                            var taxamount = amount - (amount / (1 + taxpercent));
                                            $("#JAcTaxAmount_" + i).val(taxamount.toFixed(2));
                                        }
                                        else {
                                            $("#JAcTaxAmount_" + i).val(0);
                                        }
                                    }
                                    else {
                                        $("#ChkAmountIncludingTax_" + i).val(false);
                                        if ($("#JAcTaxPercent_" + i).val() > 0 && $("#JAcAmount_" + i).val() > 0) {
                                            var tamount = ($("#JAcAmount_" + i).val() * $("#JAcTaxPercent_" + i).val()) / 100.00;
                                            parseFloat($("#JAcTaxAmount_" + i).val(tamount)).toFixed();
                                        }
                                        else {
                                            $("#JAcTaxAmount_" + i).val(0);
                                        }
                                    }


                                });

                                $("#JAcAmount_" + i).change(function () {

                                    if ($("#ChkAmountIncludingTax_" + i).is(':checked')) {
                                        if ($("#JAcTaxPercent_" + i).val() > 0 && $("#JAcAmount_" + i).val() > 0) {
                                            var amount = parseFloat($("#JAcAmount_" + i).val());
                                            var taxpercent = parseFloat($("#JAcTaxPercent_" + i).val()) / 100.00;
                                            var taxamount = amount - (amount / (1 + taxpercent));
                                            $("#JAcTaxAmount_" + i).val(taxamount.toFixed(@_decimal));
                                        }
                                        else {
                                            $("#JAcTaxAmount_" + i).val(0);
                                        }
                                    }
                                    else {
                                        if ($("#JAcTaxPercent_" + i).val() > 0 && $("#JAcAmount_" + i).val() > 0) {
                                            var tamount = ($("#JAcAmount_" + i).val() * $("#JAcTaxPercent_" + i).val()) / 100.00;
                                            parseFloat($("#JAcTaxAmount_" + i).val(tamount)).toFixed(@_decimal);
                                        }
                                        else {
                                            $("#JAcTaxAmount_" + i).val(0);
                                        }
                                    }
                                });

                                $("#JAcTaxPercent_" + i).change(function () {
                                    if ($("#ChkAmountIncludingTax_" + i).is(':checked')) {
                                        if ($("#JAcTaxPercent_" + i).val() > 0 && $("#JAcAmount_" + i).val() > 0) {
                                            var amount = parseFloat($("#JAcAmount_" + i).val());
                                            var taxpercent = parseFloat($("#JAcTaxPercent_" + i).val()) / 100.00;
                                            var taxamount = amount - (amount / (1 + taxpercent));
                                            $("#JAcTaxAmount_" + i).val(taxamount.toFixed(@_decimal));
                                        }
                                        else {
                                            $("#JAcTaxAmount_" + i).val(0);
                                        }
                                    }
                                    else {
                                        if ($("#JAcTaxPercent_" + i).val() > 0 && $("#JAcAmount_" + i).val() > 0) {
                                            var tamount = ($("#JAcAmount_" + i).val() * $("#JAcTaxPercent_" + i).val()) / 100.00;
                                            parseFloat($("#JAcTaxAmount_" + i).val(tamount)).toFixed(@_decimal);
                                        }
                                        else {
                                            $("#JAcTaxAmount_" + i).val(0);
                                        }
                                    }
                                });




                            },
                            error: function (XMLHttpRequest, textStatus, errorThrown) {
                              //  alert("Status: " + textStatus); alert("Error: " + errorThrown);
                                var i = $('#details tr').length - 1;
                                var s = 'name="AcExpAllocationVM';
                                var ExpTableHtml = $('#ExpAllocationTable').clone().attr("id", i + "_ExpAllocationTable").css('display', 'none').addClass('CostAllocationDetail').wrap('<p>').parent().html();
                                ExpTableHtml = ExpTableHtml.replace(/name="AcExpAllocationVM/g, 'name="AcJDetailVM[' + i + '].AcExpAllocationVM');
                                var objHtml = '<tr>' + '<td style="padding-left:10px">' + value.AcHead + '<input type="hidden" class=JAcHead value=' + value.AcHeadID + ' name="AcJDetailVM[' + i + '].AcHeadID"><input type="hidden" value=' + $("#ReceivedFrom").val() + ' name="AcJDetailVM[' + i + '].AcHead"></td><td class=textright style="padding-right:10px">' + parseFloat(value.Amt).toFixed(2) + '<input type="text" class="JAcAmt text-right txtNum" value=' + parseFloat(value.Amt).toFixed(2) + ' name="AcJDetailVM[' + i + '].Amt"></td>' + '<td style="padding-left:10px">' + value.Rem + '<input type="text" value=' + value.Rem + ' name="AcJDetailVM[' + i + '].Rem"></td>';
                                objHtml = objHtml + '<td><img src="/Content/img/details_open.png" id="plus_minus" style="cursor: pointer;" class="open" />' + ExpTableHtml + '</td>';
                                objHtml = objHtml + '<td><a href="javascript:void(0)" id="DeleteNewRow"><i class="fa fa-times"></i></a><input type="hidden" name="AcJDetailVM[' + i + '].AcJournalDetID" value=' + value.AcJournalDetID + ' /></td>';
                                objHtml = objHtml + '</tr>';
                                $("#details").append(objHtml);
                            }
                        });
                      //  $("#details").append('<tr>' + '<td>' + value.AcHead + '<input type="hidden" class=JAcHead value=' + value.AcHeadID + ' name="AcJDetailVM[' + i + '].AcHeadID"><input type="hidden" value=' + value.AcHead + ' name="AcJDetailVM[' + i + '].AcHead"><input type="hidden" value=' + value.AcJournalDetID + ' name="AcJDetailVM[' + i + '].AcJournalDetID"></td>' +
                   //  '<td class=textright><input type="textbox" class="JAcAmt" value=' + parseFloat(value.Amt).toFixed(2) + ' name="AcJDetailVM[' + i + '].Amt"></td>' + '<td>' + value.Rem + '<input type="hidden" value=' + value.Rem + ' name="AcJDetailVM[' + i + '].Rem"></td></tr>');
                    });

                }
        });
        //$('#details').on("change keyup paste", ".txtNum", function () {
        //    alert(this.value)
        //});

        $('#details').on("click", "#plus_minus", function () {
            
            if ($(this).hasClass('open')) {
                $(this).parent().find('.CostAllocationDetail').show();
                $(this).attr('src', '/Content/img/details_close.png');
                $(this).removeClass('open');
                $(this).addClass('Close');
            } else {
                $(this).parent().find('.CostAllocationDetail').hide();
                $(this).attr('src', '/Content/img/details_open.png');
                $(this).addClass('open');
                $(this).removeClass('Close');
            }
            $(".AcAnalysisHeadAllocationtxt").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/Accounts/AnalysisHeadSelectAll',
                        datatype: "json",
                        data: {
                            term: request.term
                        },
                        success: function (data) {
                            response($.map(data, function (val, item) {
                                return {
                                    label: val.AnalysisHead + ' - ' + val.AnalysisGroup,
                                    value: val.AnalysisGroupID,
                                    AnalysisGroupID: val.AnalysisHeadID
                                }
                            }))
                        }
                    })
                }, minLength: 1,
                select: function (e, i) {
                    e.preventDefault();
                    var getrowval = this.id.split('_');
                    $(this).val(i.item.label);
                    //$("#Allocationtxt_" + xcountval).val(i.item.label);
                    $('#newallocationHead_' + getrowval[1]).val(i.item.AnalysisGroupID);
                }

            });
        });

        $("#AcHead").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url:accounturl,
                    datatype: "json",
                    data: {
                        term: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.AcHead,
                                value: val.AcHead,
                                AcHeadID: val.AcHeadID
                            }
                        }))
                    }
                })
            }, minLength: 1,
            focus: function (e, i) {
                e.preventDefault();
                $("#AcHead").val(i.item.label);
                $('#SelectedAcHead').val(i.item.AcHeadID);
                $('#SelectedAcHead').attr('label', i.item.label);
            },
            select: function (e, i) {
                e.preventDefault();
                $("#AcHead").val(i.item.label);
                $('#SelectedAcHead').val(i.item.AcHeadID);
                $('#SelectedAcHead').attr('label',i.item.label);
            }
        });
        $("#AcHead").change(function () {
            if ($("#AcHead").val() != "" && $("#AcHead").val() != $('#SelectedAcHead').attr('label')) {
                $("#AcHead").val('');
                $('#SelectedAcHead').val(0);
            }

        })
        $("#AcHeadAllocation").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/Accounts/AnalysisHeadSelectAll',
                    datatype: "json",
                    data: {
                        term: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.AnalysisHead + ' - ' + val.AnalysisGroup,
                                value: val.AnalysisGroupID,
                                AnalysisGroupID: val.AnalysisHeadID
                            }
                        }))
                    }
                })
            }, minLength: 1,
            autoFocus: true,
            select: function (e, i) {
                e.preventDefault();
                $("#AcHeadAllocation").val(i.item.label);
                $('#SelectedAcHeadAllocation').val(i.item.AnalysisGroupID);
            }
        });
        //clsreceivedfrom
        $("#AcHeadAllocation").keydown(function (event) {
            if (event.keyCode == 9) {
                if ($("#AcHeadAllocation").val().length == 0) {
                    event.preventDefault();
                    $("#AllocationClose").focus();
                }
            }
        });

        $("#ReceivedFrom").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/Accounts/AccountHead',
                    datatype: "json",
                    data: {
                        term: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.AcHead,
                                value: val.AcHead,
                                AcHeadID: val.AcHeadID,
                                TaxPercent:val.TaxPercent
                            }
                        }))
                    }
                })
            }, minLength: 1,
            autoFocus: false,
            select: function (e, i) {             
                $("#ReceivedFrom").val(i.item.label);
                $('#SelectedReceivedFrom').val(i.item.AcHeadID);
                $('#SelectedReceivedFrom').attr('label', i.item.label)
                $('#TaxPercent').val(i.item.TaxPercent);
            },
            select: function (e, i) {
                e.preventDefault();
                $("#ReceivedFrom").val(i.item.label);
                $('#SelectedReceivedFrom').val(i.item.AcHeadID);
                $('#SelectedReceivedFrom').attr('label',i.item.label)
                $('#TaxPercent').val(i.item.TaxPercent);
            }
        });

        $("#SupplierName").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/Accounts/Supplier',
                    datatype: "json",
                    data: {
                        term: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.SupplierInfo,
                                value: val.SupplierInfo,
                                SupplierID: val.SupplierID
                            }
                        }))
                    }
                })
            },
            minLength: 1,
            autoFocus: true,
            select: function (e, i) {
                e.preventDefault();
                $("#SupplierName").val(i.item.label);
                $('#SupplierID').val(i.item.SupplierID);



            },

        });
        });
</script>
<script type="text/javascript">
    function checkduplicate(consignment) {
        
        var idtext = 'txtinscan_';
        var maxrow = $('#consignmentdetailsbody > tr').length;
        $('#hdnItemCount').val(maxrow);
        if (maxrow > 0) {
            var duplicate = false;
            $('[id^=' + idtext + ']').each(function (index, item) {
                var con = $('#txtcons_' + index).val();
                if (con.trim() == consignment.trim()) {
                    $('#elemError').html('Duplicate Consignment No.!');
                    duplicate = true;
                }

                if (duplicate == false && index == (parseInt(maxrow - 1))) {
                    addconsigmentitem();
                    return;
                }
            });
        }
        else {
            addconsigmentitem();
            return;
        }
    }

    function autoallocation() {
        
        var acheadid = $('#hdnEditAcHeadId').val();
        var idtext = 'atxt_' + acheadid + '_' ;
        var maxrow = $('#consignmentdetailsbody > tr').length;
        var totalamount = $("#hdnEditAmount").val();
        var amountperitem = parseFloat(totalamount) / maxrow;
        $('#hdnItemCount').val(maxrow);
        if (maxrow > 0) {
            var duplicate = false;
            $('[id^=' + idtext + ']').each(function (index, item) {
                $(item).val(parseFloat(amountperitem).toFixed(@_decimal));
            });
        }
        
        
    }
    function addconsigmentitem() {
        var acheadid = $('#hdnEditAcHeadId').val();
        var consignmento = $('#txtConsignmentNo').val();
        var amount = parseFloat($('#hdnEditAmount').val());
        var InscanId = $("#txtInScanID").val();
        var i = $('#consignmentdetailsbody > tr').length;
        if (i == -1)
            i = 0;
        var objHtml = '<tr>' + '<td style="padding-left:10px">' + consignmento + '<input type="hidden" class="hdndeleted" /><input type="hidden" id="txtcons_' + i + '" value="' + consignmento + '" /> <input type="hidden" id="txtinscan_' + i + '" value="' + InscanId + '" /></td>';
        objHtml = objHtml + '<td style="padding-left:10px;"><input detailid="0" type="text" class="form-control text-right" id="atxt_' + acheadid + '_' + + i + '" value="0.000" /></td>';
        objHtml = objHtml + '<td><a href="javascript:void(0)" id="DeleteConsignRow"><i class="fa fa-times"></i></a></td>';
        objHtml = objHtml + '</tr>';
        $("#consignmentdetailsbody").append(objHtml);
        $('#elemError').html('');
        $("#txtConsignmentNo").val('');
        $("#txtConsignmentNo").focus();
    }
    function EditConsignmentPopup(index) {
        
        $("#hdnEditAcHeadId").val($('#JAcHead_' + index).val());
        $('#hdnEditRowIndex').val(index);
        var amount = $("#JAcAmount_" + index).val();
        $("#hdnEditAmount").val(amount);
        $('#elemError').html('');

        var acheadname = 'AcHead : ' + $('#ReceivedFrom_' + index).val();
        var acheadid = $("#hdnEditAcHeadId").val();
        $('#hCAcHead').html(acheadname);
        $('#hTotal').html(parseFloat(amount).toFixed(@_decimal));
        $("#consignmentdetailsbody").html('');
        $.ajax({
                type:'GET',
                url: '/Accounts/GetAWBAllocation',
                datatype: "json",
                data: {
                    AcHeadId: acheadid
                },
                success: function (data) {
                    
                    $('#hdnItemCount').val(data.length);
                    $.each(data, function (val, item) {

                        var obj = {
                            label: item.ConsignmentNo,
                            value: item.ConsignmentNo,
                            ID: item.InScanID,
                            Amount: item.Amount,
                            ID: item.ID
                        }
                        var i = $('#consignmentdetailsbody > tr').length;
                        if (i == -1)
                            i = 0;
                        var objHtml = '<tr>' + '<td style="padding-left:10px">' + item.ConsignmentNo + '<input type="hidden" class="hdndeleted" /><input type="hidden" id="txtcons_' + i + '" value="' + item.ConsignmentNo + '" /> <input type="hidden" id="txtinscan_' + i + '" value="' + item.InScanID + '" /></td>';
                        objHtml = objHtml + '<td style="padding-left:10px;"><input detailid="0" type="text" class="form-control text-right" id="atxt_' + acheadid + '_' + + i + '" value="' + parseFloat(obj.Amount).toFixed(@_decimal) + '" /></td>';
                        objHtml = objHtml + '<td><a href="javascript:void(0)" id="DeleteConsignRow"><i class="fa fa-times"></i></a></td>';
                        objHtml = objHtml + '</tr>';
                        $("#consignmentdetailsbody").append(objHtml);

                    });

                    $('#txtTruckDetailID').val(0);
                    $('#txtTruckDetail').val('');
                    $('#txtConsignmentNo').val('');
                    $("#txtInScanID").val('0');
                    $('#consignmentpopup').modal('show');
                }
            });
            //var consignments = $('#editremark_' + index).val().split(',');
            //var inscans = $('#editinscans_' + index).val().split(',');
            //var i = 0;
            //$("#consignmentdetailsbody").html('');
            //for (i = 0; i < consignments.length; i++) {
            //    var consignmento = consignments[i];
            //    var InscanId = inscans[i];
            //    var objHtml = '<tr>' + '<td style="padding-left:10px">' + consignmento + '<input type="hidden" class="hdndeleted" /><input type="hidden" id="txtcons_' + i + '" value="' + consignmento + '" /> <input type="hidden" id="txtinscan_' + i + '" value="' + InscanId + '" /></td>';
            //    objHtml = objHtml + '<td><a href="javascript:void(0)" id="DeleteConsignRow"><i class="fa fa-times"></i></a></td>';
            //    objHtml = objHtml + '</tr>';
            //    $("#consignmentdetailsbody").append(objHtml);
            //}


    }
    function ShowConsignmentPopup(index) {        
        debugger;
        $('#hdnEditAcHeadId').val($('#SelectedReceivedFrom').val());
        var acheadname = 'AcHead : ' + $('#ReceivedFrom').val();
        $('#hCAcHead').html(acheadname);
        $('#hdnEditRowIndex').val(-1);
        var amount = $("#amount").val();
        $("#hdnEditAmount").val(amount);
        $('#hTotal').html(parseFloat(amount).toFixed(@_decimal));
        $("#consignmentdetailsbody").html('');
      //  $('#consignmentpopup').modal('show');
        $.ajax({
            url: '/Accounts/GetAWBAllocation',
            datatype: "json",
            datatype: "json",
            data: {
                AcHeadId: $('#hdnEditAcHeadId').val()
            },
            success: function (data) {
                
                $('#hdnItemCount').val(data.length);
                $.each(data, function (val, item) {

                    var obj = {
                        label: item.ConsignmentNo,
                        value: item.ConsignmentNo,
                        ID: item.InScanID,
                        Amount:item.Amount,
                    }
                    var i = $('#consignmentdetailsbody > tr').length;
                    if (i == -1)
                        i = 0;
                    var objHtml = '<tr>' + '<td style="padding-left:10px">' + item.ConsignmentNo + '<input type="hidden" class="hdndeleted" /><input type="hidden" id="txtcons_' + i + '" value="' + item.ConsignmentNo + '" /> <input type="hidden" id="txtinscan_' + i + '" value="' + item.InScanID + '" /></td>';
                    objHtml = objHtml + '<td style="padding-left:10px;"><input detailid="0" type="text" class="form-control text-right" id="atxt_' + acheadid + '_' + + i + '" value="' + parseFloat(obj.Amount).toFixed(@_decimal)   + '" /></td>';
                    objHtml = objHtml + '<td><a href="javascript:void(0)" id="DeleteConsignRow"><i class="fa fa-times"></i></a></td>';
                    objHtml = objHtml + '</tr>';
                    $("#consignmentdetailsbody").append(objHtml);

                });

                $('#txtTruckDetailID').val(0);
                $('#txtTruckDetail').val('');
                $('#txtConsignmentNo').val('');
                $("#txtInScanID").val('0');
                $('#consignmentpopup').modal('show');
            }
        });
        //if ($('#remark1').val() != '') {

        //    var consignments = $('#remark1').val().split(',');
        //    var inscans = $('#remark1').attr('inscans').split(',');
        //    var i = 0;
        //    $("#consignmentdetailsbody").html('');
        //    for (i = 0; i < consignments.length; i++) {
        //        var consignmento = consignments[i];
        //        var InscanId = inscans[i];
        //        var objHtml = '<tr>' + '<td style="padding-left:10px">' + consignmento + '<input type="hidden" class="hdndeleted" /><input type="hidden" id="txtcons_' + i + '" value="' + consignmento + '" /> <input type="hidden" id="txtinscan_' + i + '" value="' + InscanId + '" /></td>';
        //        objHtml = objHtml + '<td><a href="javascript:void(0)" id="DeleteConsignRow"><i class="fa fa-times"></i></a></td>';
        //        objHtml = objHtml + '</tr>';
        //        $("#consignmentdetailsbody").append(objHtml);
        //    }
        //    $('#txtTruckDetailID').val(0);
        //    $('#txtTruckDetail').val('');
        //    $('#txtConsignmentNo').val('');
        //    $("#txtInScanID").val('0');
        //    $("#consignmentdetailsbody").html('')
        //}
        //else {
        //    $('#txtTruckDetailID').val(0);
        //    $('#txtTruckDetail').val('');
        //    $('#txtConsignmentNo').val('');
        //    $("#txtInScanID").val('0');
        //    $("#consignmentdetailsbody").html('')
        //}
        //$('#consignmentpopup').modal('show');
    }

    $(document).ready(function () {
        $("#txtTruckDetail").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/Accounts/GetTrips',
                    datatype: "json",
                    data: {
                        term: request.term
                    },
                    //open: function () {
                    //    autoComplete.zIndex(dlg.zIndex() + 1);
                    //}
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.ReceiptNo,
                                value: val.ReceiptNo,
                                ID: val.TruckDetailID
                            }
                        }))
                    }
                })
            }, minLength: 0,
            focus: function (e, i) {
                $("#txtTruckDetail").val(i.item.label);
                $("#txtTruckDetailID").val(i.item.ID);
                $("#txtTruckDetailID").attr('label', i.item.label);
            },
            select: function (e, i) {
                e.preventDefault();
                $("#txtTruckDetail").val(i.item.label);
                $("#txtTruckDetailID").val(i.item.ID);
                $("#txtTruckDetailID").attr('label', i.item.label);
            }
        });

        $("#txtConsignmentNo").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/Accounts/GetConsignment',
                    datatype: "json",
                    data: {
                        term: request.term, tripno: $('#txtTruckDetailID').val()
                    },
                    //open: function () {
                    //    autoComplete.zIndex(dlg.zIndex() + 1);
                    //}
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.ConsignmentNo,
                                value: val.ConsignmentNo,
                                ID: val.InScanID
                            }
                        }))
                    }
                })
            }, minLength: 0,
            focus: function (e, i) {
                $("#txtConsignmentNo").val(i.item.label);
                $("#txtInScanID").val(i.item.ID);
                $("#txtInScanID").attr('label', i.item.label);
            },
            select: function (e, i) {
                e.preventDefault();
                $("#txtConsignmentNo").val(i.item.label);
                $("#txtInScanID").val(i.item.ID);
                $("#txtInScanID").attr('label', i.item.label);
            }
        });
        $("#txtConsignmentNo").change(function () {

            if ($('#txtConsignmentNo').val() != "" && $('#txtConsignmentNo').val() != $('#txtInScanID').attr('label')) {
                $('#txtConsignmentNo').val('');
                $("#txtInScanID").val(0);
            }
        });

        $("#txtTruckDetail").change(function () {
            if ($("#txtTruckDetail").val() == "") {
                $('#txtTruckDetail').val('');
                $("#txtTruckDetailID").val(0);
            }
            if ($("#txtTruckDetail").val() != "" && $("#txtTruckDetail").val() != $('#txtTruckDetailID').attr('label')) {
                $('#txtTruckDetail').val('');
                $("#txtTruckDetailID").val(0);
            }
        });

        $('#btnaddConsignment').click(function () {

            var consignmento = $('#txtConsignmentNo').val();
            var InscanId = $("#txtInScanID").val();
            if (consignmento == '' || InscanId == 0) {
                $('#elemError').html('Select Consignment No.');
                return;
            }
            else {

                checkduplicate(consignmento);
            }
        });

        $('#consignmentdetailsbody').on("click", "#DeleteConsignRow", function () {
            
            $(this).parent().parent().remove();
            //$(this).parent().parent().addClass('hide');
            //var obj = $(this).parent().parent().find('.hdndeleted');
            //$(obj).val(true);
        });
        $('#btnaddall').click(function () {
            var acheadid = $('#hdnEditAcHeadId').val();
            $.ajax({
                url: '/Accounts/GetConsignment',
                datatype: "json",
                data: {
                    term: '', tripno: $('#txtTruckDetailID').val()
                },
                //open: function () {
                //    autoComplete.zIndex(dlg.zIndex() + 1);
                //}
                success: function (data) {
                    $('#consignmentdetailsbody').html('');
                    $('#hdnItemCount').val(data.length);
                    $.each(data, function (val, item) {

                        var obj = {
                            label: item.ConsignmentNo,
                            value: item.ConsignmentNo,
                            ID: item.InScanID
                        }
                        var i = $('#consignmentdetailsbody > tr').length;
                        if (i == -1)
                            i = 0;
                        var objHtml = '<tr>' + '<td style="padding-left:10px">' + item.ConsignmentNo + '<input type="hidden" class="hdndeleted" /><input type="hidden" id="txtcons_' + i + '" value="' + item.ConsignmentNo + '" /> <input type="hidden" id="txtinscan_' + i + '" value="' + item.InScanID + '" /></td>';
                        objHtml = objHtml + '<td style="padding-left:10px;"><input detailid="0" type="text" class="form-control text-right" id="atxt_' + acheadid + '_' + + i + '" value="0.000" /></td>';
                        objHtml = objHtml + '<td><a href="javascript:void(0)" id="DeleteConsignRow"><i class="fa fa-times"></i></a></td>';
                        objHtml = objHtml + '</tr>';
                        $("#consignmentdetailsbody").append(objHtml);

                    });
                }
            })
        });
            $('#ConsignmentSave').on("click", function () {
            
            var acheadid = $('#hdnEditAcHeadId').val();
            var allocatedamount = parseFloat($('#hdnEditAmount').val()).toFixed(@_decimal);
            var amt = 0;
            var obj = [];
            var idtext = 'atxt_' + acheadid;
                //var maxrow = parseFloat($('#hdnItemCount').val());
                var maxrow = $('#consignmentdetailsbody > tr').length;

                $('[id^=' + idtext + ']').each(function (index, item) {
                var inscanid = $('#txtinscan_' + index).val();
                var consno= $('#txtcons_' + index).val();
                var detailid = $(item).attr('detailid');
                if ($(item).val() == "") {
                    $(item).val(0);
                }
                amt = amt + parseFloat($(item).val());
                    var item1 = { AcHeadID: acheadid, AcJournalDetailID: detailid, InScanID: inscanid, ConsignmentNo: consno, Amount: $(item).val() }
                obj.push(item1);
                if (maxrow == obj.length) {
                    if (parseFloat(amt).toFixed(@_decimal) != allocatedamount) {
                        alert('Allocate Amount should be equal to allocation of AWB!')
                        return false;
                    }
                    else {
                        var RecP = JSON.stringify({ 'list': obj });
                        $.ajax({
                            contentType: 'application/json; charset=utf-8',
                            dataType: 'json',
                            type: 'POST',
                            url: '/Accounts/SaveAWBAllocation/',
                            data: RecP,
                            success: function (data) {
                                $('#consignmentpopup').modal('hide');
                            }
                        });
                    }
                }
            });



        });
    });

</script>
<section class="content-header">
    <h1 class="headingfont">@ViewBag.Title</h1>

</section>


<section class="content ">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <fieldset class="">
            <div class="row no-margin">
                <div class="col-md-3">
                    <input type="hidden" name="deletedExpAllocations" id="deletedExpAllocations" value="" />
                    <input type="hidden" name="deletedJournalDetails" id="deletedJournalDetails" value="" />
                    @Html.HiddenFor(model => model.TransactionNo)
                    @Html.HiddenFor(model => model.AcJournalID)
                    @Html.HiddenFor(model => model.AcBankDetailID)
                    @Html.HiddenFor(model => model.VoucherType)
                    @Html.HiddenFor(model => model.VoucherNo)
                    @*@Html.HiddenFor(model => model.TransactionType)*@
                    @*              @Html.HiddenFor(model => model.transtype)*@
                    @*@Html.HiddenFor(model => model.paytype)*@

                    <input type="hidden" id="currindex" />

                    <label class="headinglabel">Voucher No.</label>
                    <input type="text" name="TransactionNoROT" value="@Model.VoucherNo" class="form-control" readonly="readonly" />
                </div>
                <div class="col-md-3">
                    <label class="headinglabel">Transaction Date</label>
                    @Html.TextBoxFor(model => model.transdate, String.Format("{0:dd-MM-yyyy}", this.Model.transdate), new { @class = "form-control", autocomplete = "off" })
                    @Html.ValidationMessageFor(model => model.transdate)
                </div>
                <div class="col-md-3">

                    <label class="headinglabel">Transaction Type</label>
                    @Html.DropDownListFor(model => model.transtype, ViewBag.transtypes as SelectList, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.transtype)
                    @Html.HiddenFor(model => model.TransactionType)

                </div>
                  <div class="col-md-3">
                    <label class="headinglabel">Payment Type</label>
                    @Html.DropDownListFor(model => model.paytype, ViewBag.paytypes as SelectList, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.paytype)
                    @Html.HiddenFor(model => model.paytype)
                </div>
            </div>
            <div class="row no-margin" style="padding-top:10px">
              
                <div class="col-md-3">
                    <label class="headinglabel">Reference</label>
                    @Html.TextBoxFor(model => model.reference, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.reference)
                </div>
                <div class="col-md-3">
                    <label class="headinglabel">Cash/Bank Accounts</label>
                    @Html.TextBoxFor(model => model.AcHead, new { @id = "AcHead", @class = "form-control", autocomplete = "off" })
                    @Html.HiddenFor(model => model.SelectedAcHead, new { id = "SelectedAcHead",@label=Model.AcHead  })
                </div>
                <div class="col-md-6">
                    <label class="headinglabel">Narration</label>
                    @Html.TextAreaFor(model => model.remarks, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.remarks)
                    <span id="balance"></span>
                </div>

            </div>
          
        </fieldset>

        <fieldset class="">
            <h4 style="color:#07a7e3;padding-top:10px">Bank Details</h4><hr style="margin-bottom:0px;" />
            <div class="row no-margin">
                <div class="col-md-3">
                    <label class="headinglabel">Bank Name</label>
                    @Html.TextBoxFor(model => model.bankname, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.bankname)
                </div>
                <div class="col-md-3">
                    <label class="headinglabel">Cheque No</label>
                    @Html.TextBoxFor(model => model.chequeno, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.chequeno)
                </div>
                <div class="col-md-3">
                    <label class="headinglabel">Cheque Date</label>
                    @Html.TextBoxFor(model => model.chequedate, String.Format("{0:dd-MM-yyyy}", this.Model.chequedate), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.chequedate)
                </div>
                <div class="col-md-3">
                    <label class="headinglabel">Party Name</label>
                    @Html.TextBoxFor(model => model.partyname, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.partyname)
                </div>
            </div>
        </fieldset>

        <fieldset>
            <div class="sub_title_block">
                <h4 style="color:#07a7e3;padding-top:10px">Add Details</h4><hr style="margin-bottom:0px" />
        </div>
            <div class="row no-margin">
                <div class="col-md-2">
                    <label class="headinglabel label1">Received From</label>
                    @Html.TextBoxFor(model => model.ReceivedFrom, new { @id = "ReceivedFrom", @class = "form-control", autocomplete = "off" })
                    @Html.HiddenFor(model => model.SelectedReceivedFrom, new { Value = "0", id = "SelectedReceivedFrom" })
                </div>
                <div class="col-md-2">
                    <label class="headinglabel">Amount</label>
                    <div class="checkboxdesign verticalcheckbox taxCheck text-right"style="float:right; margin-right:2px">
                        @Html.CheckBox("AmountIncludingTax", new { @name = "AmountIncludingTax" }) &nbsp
                        <label class="headinglabel" style="font-weight:bold;color:#07a7e3!important">Including Tax</label>
                    </div>
                    @Html.TextBoxFor(model => model.amount, new { @class = "form-control textright txtNum" })
                    @Html.ValidationMessageFor(model => model.amount)
                </div>
                <div class="col-md-1">
                    <label class="headinglabel">Tax %</label>
                    @Html.TextBoxFor(model => model.TaxPercent, new { @class = "form-control textright txtNum" })
                    @Html.ValidationMessageFor(model => model.TaxPercent)
                </div>
                <div class="col-md-1">
                    <label class="headinglabel">Tax Amount</label>
                    @Html.TextBoxFor(model => model.TaxAmount, new { @class = "form-control textright txtNum", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.TaxAmount)
                </div>
                <div class="col-md-2">
                    <label class="headinglabel">Supplier</label>
                    <input type="text" id="SupplierName" name="SupplierName" class="form-control" autocomplete="off" />
                    @Html.HiddenFor(model => model.SupplierId, new { Value = "0", id = "SupplierID" })
                </div>
                <div class="col-md-2 flex">
                    <label class="headinglabel">Remark</label>
                    @Html.TextAreaFor(model => model.remark1, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.remark1)
                </div>
                <div class="col-md-2 text-right">
                
                <div class="flex">
                     <div class="" style="padding-right:15px">
                      <button type="button"  class="btn btn-primary small_btn btn-2 mt-0" title="Add Consignments" onclick="ShowConsignmentPopup(-1)"><i class=" fa fa-th"></i></button>
                    </div>
                    <div class="" >
                        <!-- <label class="headinglabel">Exp. Allocation</label> -->
                        <a title="Exp. Allocation" href="javascript:void(0)" class="Allocate"><i class="fa fa-sitemap icon-2" ></i></a>
                    </div>
                </div>
                <button type="button" class="btn btn-primary small_btn mt-0" title="Clear Data" onclick="ClearData()"><i class="fa fa-minus"></i></button>&nbsp;&nbsp;
                <button type="button" class="btn btn-primary small_btn mt-0" index="1" id="btnAdd" title="Add New" class="addmore"><i class="fa fa-plus"></i></button>
            </div>                           
                
            </div>
            <br />

            <div class="row no-margin" style="padding-top:10px">
                <table class="table table-bordered table-responsive" id="details">
                    <tr>
                        <td style="width:25%">AcHead</td>
                        <td style="width:2%">Tax.Incl</td>
                        <td style="width:10%">Amount</td>
                        <td style="width:5%">Tax%</td>
                        <td style="width:5%">Tax Amt.</td>
                        <td style="width:10%">Supplier </td>
                        <td style="width:15%">Remark/Ref.</td>
                        <td style="width:15%">Exp. Allocation</td>
                        <td style="width:1%">Delete</td>
                    </tr>
                </table>
                @Html.HiddenFor(model => model.AcJournalDetail)
                @Html.HiddenFor(model => model.TotalAmt)
            </div>
            <div class="row no-margin">
                <div class="col-md-10" id="res">

                </div>
            </div>
            <div class="row no-margin" style="padding-top:10px">
                <div class="" style="text-align:right;padding:10px">
                    @*   <input type="button" id="btn1" value="add" />*@
                    <button type="submit" class="btn btn-primary btnwidth" id="btnsave">Update</button>
                    &nbsp;&nbsp;
                    <a href='@Url.Action("IndexAcBook", "Accounts", new { id = 0 })' class="btn btn-danger btnwidth" data-toggle="tooltip" data-placement="right" title="Click here">Cancel</a>
                </div>
            </div>
        </fieldset>

        <div style="width:100%;height:3000px; color:black;opacity:0.6;z-index:5;display:none;background-color: black;position:absolute;top:0;left:0;" id="popupbackground">

        </div>
        <div class="col-md-6 col-md-offset-3" data-keyboard="false" style="position:absolute;top:500px;z-index:10;display:none;background-color:white;border-radius: 5px;padding:0; width:600px" id="popup">

                <div class="modal-header ">
                <div class="flex justify-content-between">
                <h4 class="modal-title" id="exampleModalLabel">
                    Expense Allocation
                </h4>
                <button type="button" class="close" data-dismiss="modal" id="AllocationClose" aria-label="Close"><span aria-hidden="true">×</span></button>
            </div>
            </div>
            <div class="modal-body">
                <div class="container-fluid">
            <div class="row">
                        <div class="col-md-11 flex justify-content-between">
                            <h4 id="hAcHead" class="mt-0">Fuel Charges </h4>
                        
                        <div class="col-md-4">
                            <input class="form-control" />
                        </div>
                        </div>
                        <div class="col-md-1 text-right">
                            <button class="btn btn-primary small_btn btn-2 mt-0" onclick="autoallocation()" title="Auto Allocation" type="button" id="btnAllocate " ><i class="fa fa-sitemap" aria-hidden="true"></i></button>
                        </div>

                    </div>
            <div class="row">
                <div class="col-md-5">
                    <label class="headinglabel">Analysis Head</label>
                    <input type="text" id="AcHeadAllocation" value="" class="form-control" autocomplete="off" style="height:27px;" />
                    <input type="hidden" id="SelectedAcHeadAllocation" value="" class="form-control" autocomplete="off" />
                </div>
                <div class="col-md-6">
                    <label class="headinglabel">Amount</label>
                    <input type="text" class="text-right form-control txtNum" id="ExpAmount" value="0" />
                </div>
                <div class="col-md-1 text-right">
                    <button type="button" style="margin-top:32px;" index="1" id="AddExpAllocation" class="addmore small_btn btn btn-primary"><i class="fa fa-plus"></i></button>

                    


                </div>
            </div>
            <br />
            @*<div class="row">
                    <div class="col-md-12 text-right">
                        <input type="button" value="Add" class="btn btn-primary" style="margin:10px;" id="AddExpAllocation" />
                        <button type="button" value="Close" class="btn btn-danger" style="height: 40px !important;position: absolute;top:0;width:40px;right:10px; border-radius: 50%;min-width: 40px!important;top:-11px;right:-10px;"  ><i style="font-size:21px" class="fa fa-times"></i></button>
                    </div>
                </div>*@

            <div class="row">
                <div class="col-md-12">
                    <input type="hidden" value="0" id="RowCount" />
                    <table id="ExpAllocationTable" class="table table-bordered table-responsive">
                        <tr>
                            <td>Analysis Head</td>
                            <td>Amount</td>
                            <td>Delete</td>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="pull-right">
                <button class="btn btn-secondary" style="background-color: #313030">Close</button>
            </div>
        </div>
    </div>
            <div class="clearfix"></div>

            <script type="text/javascript">
                $(document).ready(function () {
                    $('#AddExpAllocation').click(function () {
                        var Total = 0;
                        var MainTotal = 0;
                        
                        var selectedval = $("#SelectedAcHeadAllocation").val();
                        if (selectedval == 0) {
                            alert('Please select analysis head!');
                            return;
                        }
                        $('#ExpAllocationTable').find('.ExpAllocatedAmountDetails').each(function () {
                            
                            if (isNaN(parseInt($(this).val())) === false) {
                                Total += parseFloat($(this).val()).toFixed(@_decimal);
                            }
                        });
                        
                        if (isNaN(parseInt($('#ExpAmount').val())) === false) {
                            Total += parseFloat($('#ExpAmount').val());
                        }
                        if (isNaN(parseInt($('#amount').val())) === false) {
                            MainTotal += parseFloat($('#amount').val());
                        }
                        if (Total > MainTotal) {
                            alert('Amount cannot exceed total allocated amount');
                            return;
                        }
                        var RowCount = parseInt($('#RowCount').val());
                        var RowHtml = '<tr><td>' + $('#AcHeadAllocation').val() + '<input type="hidden" name="AcExpAllocationVM[' + RowCount + '].AcHead" value="' + $('#SelectedAcHeadAllocation').val() + '"/></td>';
                        RowHtml = RowHtml + '<td><input type="text" id="' + RowCount + '_Amount" name="AcExpAllocationVM[' + RowCount + '].ExpAllocatedAmount" class="ExpAllocatedAmountDetails" value="' + $('#ExpAmount').val() + '"/></td>';
                        RowHtml = RowHtml + '<td><a href="javascript:void(0)" id="DeleteAllocationRow"><i class="fa fa-times"></i></a></td>';
                        RowHtml = RowHtml + '</tr>';
                        $('#ExpAllocationTable').append(RowHtml);
                        $('#RowCount').val(RowCount + 1);
                        $("#AcHeadAllocation").val('');
                        $("#SelectedAcHeadAllocation").val(0);
                        $("#ExpAmount").val(0);
                        $('#AcHeadAllocation').focus()

                    });

                    $('.txtNum').blur(function () {
                        if (isNaN(parseInt($(this).val()))) {
                            $(this).val('0.00');
                        } else {
                            var amt = parseFloat($(this).val());
                            $(this).val(amt.toFixed(@_decimal));
                        }
                    });

                    $('#details').on('blur', '.txtNum', function () {
                        if (isNaN(parseInt($(this).val()))) {
                            $(this).val('0.00');
                        } else {
                            var amt = parseFloat($(this).val());
                            $(this).val(amt.toFixed(@_decimal));
                        }
                    });

                    $('#ExpAllocationTable').on("click", "#DeleteAllocationRow", function () {
                        
                        var DeletedAllocatedId = $(this).parent().parent().find('.AcAnalysisHeadAllocationID').val();
                        var ExistingDelIds = $('#deletedExpAllocations').val();
                        if (ExistingDelIds != '') {
                            ExistingDelIds = ExistingDelIds + ',' + DeletedAllocatedId;
                        } else {
                            ExistingDelIds = DeletedAllocatedId;
                        }
                        $('#deletedExpAllocations').val(ExistingDelIds);


                        $(this).parent().parent().remove();
                    });

                    $('#details').on("click", "#DeleteNewRow", function () {
                        
                        var DeletedAllocatedId = $(this).parent().parent().find('.AcJournalDetID').val();
                        var ExistingDelIds = $('#deletedJournalDetails').val();
                        if (ExistingDelIds != '') {
                            ExistingDelIds = ExistingDelIds + ',' + DeletedAllocatedId;
                        } else {
                            ExistingDelIds = DeletedAllocatedId;
                        }
                        $('#deletedJournalDetails').val(ExistingDelIds);
                        //$(this).parent().parent().remove();
                        $(this).parent().parent().addClass('hide');
                        var obj = $(this).parent().parent().find('.hdndeleted');
                        $(obj).val(true);
                    });

                    $('#details').on("click", "#DeleteAllocationRow", function () {
                        
                        var DeletedAllocatedId = $(this).parent().parent().find('.AcJournalDetID').val();
                        var ExistingDelIds = $('#deletedJournalDetails').val();
                        if (ExistingDelIds != '') {
                            ExistingDelIds = ExistingDelIds + ',' + DeletedAllocatedId;
                        } else {
                            ExistingDelIds = DeletedAllocatedId;
                        }
                        $('#deletedJournalDetails').val(ExistingDelIds);

                        var DeletedAllocatedId = $(this).parent().parent().find('.AcAnalysisHeadAllocationID').val();
                        var ExistingDelIds = $('#deletedExpAllocations').val();
                        if (ExistingDelIds != '') {
                            ExistingDelIds = ExistingDelIds + ',' + DeletedAllocatedId;
                        } else {
                            ExistingDelIds = DeletedAllocatedId;
                        }
                        $('#deletedExpAllocations').val(ExistingDelIds);
                        $(this).parent().parent().remove();
                    });
                });
                function ClearData() {
                    $("#ReceivedFrom").val('');
                    $("#SelectedReceivedFrom").val(0);
                    $("#amount").val('');
                    $("#remark1").val('');
                    $("#AcHeadAllocation").val('');
                    $("#SelectedAcHeadAllocation").val(0);
                    $("#ExpAmount").val('');
                    $('#TaxPercent').val('');
                    $('#TaxAmount').val('');
                    $("#ExpAllocationTable").find("tr:gt(0)").remove();
                }
            </script>
            <div>

            </div>
        </div>
    }
</section>



@*Popup code*@
<div class="modal fade" id="consignmentpopup" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" style="border-radius:5px">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="exampleModalLabel">
                    Consignment Reference
                </h4>
            </div>

            <div class="modal-body">
                <div class="container-fluid" >
                    <div class="row">
                        <div class="col-md-11 flex justify-content-between">
                            <h4 id="hCAcHead">AcHead</h4>
                            <h5 id="hTotal">Total</h5>                            
                        </div>
                        <div class="col-md-1 text-right">
                            <button class="btn btn-primary small_btn btn-2"  onclick="autoallocation()"  title="Auto Allocation" type="button" id="btnAllocate" style="margin-top:10px;"><i class="fa fa-sitemap" aria-hidden="true"></i></button>
                        </div>

                    </div>
                    <div class="row">
                        <div class="flex justify-content-between">
                            <span id="elemError" class="errors" ></span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-5">
                            <label class="headinglabel">Truck Detail No.</label>
                            <input type="text" id="txtTruckDetail" class="form-control" />
                            <input type="hidden" id="txtTruckDetailID" class="form-control" />
                        </div>
                        <div class="col-md-1 text-right">
                            <button class="btn btn-primary small_btn" type="button" id="btnaddall" title="Add all Consignments of TD" style="margin-top:30px;"><i class="fa fa-refresh" aria-hidden="true"></i></button>
                        </div>
                        <div class="col-md-5">
                            <label class="headinglabel"> Consignment Note </label>
                            <input type="text" id="txtConsignmentNo" class="form-control" />
                            <input type="hidden" id="txtInScanID" class="form-control" />
                        </div>
                        <div class="col-md-1 text-right">
                            <button class="btn btn-primary small_btn" type="button" id="btnaddConsignment" style="margin-top:30px;"><i class="fa fa-plus" aria-hidden="true"></i></button>
                        </div>
                    </div>

                    <div class="popUpgrid modal-scrollable">
                        <table class="table table-bordered table-responsive" id="Consignmentdetails">
                            <thead>
                                <tr>
                                    <th>Consignment Note</th>
                                    <th>Amount</th>
                                    <th>Delete</th>
                                    </tr>
                                </thead>
                            <tbody id="consignmentdetailsbody">
                            </tbody>
                        </table>
                    </div>

                    <div class="row">

                        <input type="hidden" value="" id="hdnEditAcHeadId" />
                        <input type="hidden" value="" id="hdnEditRowIndex" />
                        <input type="hidden" value="" id="hdnEditAmount" />
                        <input type="hidden" value="" id="hdnItemCount" />


                    </div>
                </div>
            </div>
            <div class="modal-footer" style="padding-top: 5px">
                <button type="button" id="ConsignmentSave" class="btn btn-primary">Save</button>
                <button type="button" id="ConsignmentClose" class="btn btn-danger" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">Report</h4>
            </div>
            <div class="modal-body">

            </div>
            <div class="modal-footer">

                <button type="button" class="btn btn-primary" id="btnsubmitforreport">Submit</button>
            </div>
        </div>
    </div>
</div>

@* End Popup *@