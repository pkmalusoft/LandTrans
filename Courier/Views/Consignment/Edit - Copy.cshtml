@model LTMSV2.Models.QuickAWBVM


@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_TrueBookMstr.cshtml";
}


<script type="text/javascript">
    $(document).ready(function () {
        $(":text").css({ "border-radius": "5px" });
        $("select").css({ "border-radius": "5px" });

        $("#HAWBNo").focus();


        $("#destinationCity").empty();
        $('#destinationCity').append('<option value="0">Select</option>');

        $("#destinationLocation").empty();
        $('#destinationLocation').append('<option value="0">Select</option>');


        //$("#CourierCharge").val('0.00');
        //$("#PackingCharge").val('0.00');
        //$("#OtherCharge").val('0.00');
        //$("#CustomCharge").val('0.00');
        //$("#totalCharge").val('0.00');


        function CalcTotal() {
            var x = $("#CourierCharge").val();
            var y = $("#PackingCharge").val();
            var z = $("#OtherCharge").val();
            var a = $("#CustomCharge").val();
            var tot=parseFloat(x)+parseFloat(y)+parseFloat(z)+ parseFloat(a);

            $("#totalCharge").val(tot.toFixed(2));
        }

        $("#CourierCharge").blur(function () {
            if ($(this).val() == null) {
                $(this).val('0.00');
            }
            CalcTotal();
        });
        $("#PackingCharge").blur(function () {
            if ($(this).val() == null) {
                $(this).val('0.00');
            }
          CalcTotal();
        });
        $("#OtherCharge").blur(function () {
            if ($(this).val() == null) {
                $(this).val('0.00');
            }
           CalcTotal();
        });
        $("#CustomCharge").blur(function () {
            if ($(this).val() == null) {
                $(this).val('0.00');
            }
           CalcTotal();
        });

        
        $("#customerid").change(function () {
            $("#origincity").empty();
            $('#origincity').append('<option value="0">Select</option>');

            $("#originlocation").empty();
            $('#originlocation').append('<option value="0">Select</option>');

            $.ajax({
                type: "POST",
                url: "/QuickAWB/GetCustomerData",
                datatype: "Json",
                data: { id: $('#customerid').val() },
                success: function (data) {
              
                    $("#shipper").val(data.CustName);
                    $("#shippercontact").val(data.ContactPerson);
                    $("#origincountry").val(data.CountryID);
                    $("#ConsignorPhone").val(data.Phone);
                 
                    $("#shipperaddres").val(data.Address1);

                    BindCity(data.CityID);
                }
            });
        });

        function BindCity(x, y) {
            $.ajax({
                type: "POST",
                url: "/QuickAWB/GetCity",
                datatype: "Json",
                data: { id: $("#origincountry option:selected").val() },
                success: function (data) {


                    $.each(data, function (index, value) {
                        $('#origincity').append('<option value="' + value.CityID + '">' + value.City + '</option>');
                    });

                    $('#origincity').val(x);

             

                }
            });
        }


        function BindConsigneeCity(x) {
            $.ajax({
                type: "POST",
                url: "/QuickAWB/GetCity",
                datatype: "Json",
                data: { id: $("#destinationCountry option:selected").val() },
                success: function (data) {


                    $.each(data, function (index, value) {
                        $('#destinationCity').append('<option value="' + value.CityID + '">' + value.City + '</option>');
                    });

                    $('#destinationCity').val(x);

                  

                }
            });
        }
     

    

        $("#destinationCountry").change(function () {
            $("#destinationCity").empty();
            $('#destinationCity').append('<option value="0">Select</option>');
            $.ajax({
                type: "POST",
                url: "/QuickAWB/GetCity",
                datatype: "Json",
                data: { id: $("#destinationCountry option:selected").val() },
                success: function (data) {


                    $.each(data, function (index, value) {
                        $('#destinationCity').append('<option value="' + value.CityID + '">' + value.City + '</option>');
                    });

                }
            });
        });

        $("#destinationCity").change(function () {

            $("#destinationLocation").empty();
            $('#destinationLocation').append('<option value="0">Select</option>');
            $.ajax({
                type: "POST",
                url: "/QuickAWB/GetLocation",
                datatype: "Json",
                data: { id: $("#destinationCity option:selected").val() },
                success: function (data) {


                    $.each(data, function (index, value) {
                        $('#destinationLocation').append('<option value="' + value.LocationID + '">' + value.Location + '</option>');
                    });

                }
            });
        });

        $("#btnsave").click(function () {

            $.ajax({
                type: "POST",
                url: "/QuickAWB/GetAWB",
                datatype: "Json",
                data: { id: $("#HAWBNo").val() },
                success: function (data) {
                    if (data.Exist == 0) {
                        $("#IsAvailable").val(0);
                    }
                    else {
                        $("#IsAvailable").val(1);
                    }

                }
            });



            var hawb = $("#HAWBNo").val();
            var customerid = $("#customerid option:selected").val();
            var shipper = $("#shipper").val();
            var shippercontact = $("#shippercontact").val();
            var consignorphone = $("#ConsignorPhone").val();
            var shipperaddress = $("#shipperaddress").val();
            var origincountry = $("#origincountry option:selected").val();
            var origincity = $("#origincity option:selected").val();
            var orilocation = $("#orilocation").val();
            consignee = $("#consignee").val();
            consigneecontact = $("#consigneecontact").val();
            ConsigneePhone = $("#ConsigneePhone").val();
            Consigneeaddress = $("#Consigneeaddress").val();

            destinationCountry = $("#destinationCountry option:selected").val();
       
            destinationCity = $("#destinationCity option:selected").val();
         
            destlocation = $("#destlocation").val();

            Description = $("#Description").val();
        
            Pieces = $("#Pieces").val();
        
            Weight = $("#Weight").val();
         
            CourierMode = $("#CourierMode option:selected").val();
       
            CourierType = $("#CourierType option:selected").val();
           
            ProductType = $("ProductType option:selected").val();
       


            if (hawb == "") {
                $("#validations").show();
                return false;

            }
            else if ($("#IsAvailable").val() == 1) {
                alert("AWB Already Exist..!");
                return false;
            }
            else if (customerid == "") {
                $("#validations").show();
                return false;
            }
            else if (shipper == "") {
                $("#validations").show();
                return false;
            }
            else if (shippercontact == "") {
                $("#validations").show();
                return false;
            }
            else if (consignorphone == "") {
                $("#validations").show();
                return false;
            }
            else if (shipperaddress == "") {
                $("#validations").show();
                return false;
            }
            else if (origincountry == "") {
                $("#validations").show();
                return false;
            }
            else if (origincity == "") {
                $("#validations").show();
                return false;
            }
            else if (orilocation == "") {
                $("#validations").show();
                return false;
            }
            else if ($("#paymentmode option:selected").val() == "") {
                $("#validations").show();
                return false;
            }
            else if (consignee == "") {
                $("#validations").show();
                return false;
            }
            else if (consigneecontact == "") {
                $("#validations").show();
                return false;
            }
            else if (ConsigneePhone == "") {
                $("#validations").show();
                return false;
            }
            else if (Consigneeaddress == "") {
                $("#validations").show();
                return false;
            }
            //else if (destinationCountry == "") {
            //    $("#validations").show();
            //    return false;
            //}
            //else if (destinationCity == "") {
            //    $("#validations").show();
            //    return false;
            //}
            else if (destlocation == "") {
                $("#validations").show();
                return false;
            }
            else if (Description == "") {
                $("#validations").show();
                return false;
            }
            else if (Pieces == "") {
                $("#validations").show();
                return false;
            }
            else if (Weight == "") {
                $("#validations").show();
                return false;
            }
            else if (CourierMode == "") {
                $("#validations").show();
                return false;
            }
            else if (CourierType == "") {
                $("#validations").show();
                return false;
            }
            else if (ProductType == "") {
                $("#validations").show();
                return false;
            }
            else if ($("#CourierCharge").val() == "") {
                $("#validations").show();
                return false;
            }
            else if ($("PackingCharge").val() == "") {
                $("#validations").show();
                return false;
            }
            else {
                return true;
            }
        });

        $("#HAWBNo").blur(function () {
            $.ajax({
                type: "POST",
                url: "/QuickAWB/GetPickUpData",
                datatype: "Json",
                data: { id: $('#AWBNo').val() },
                success: function (data) {

                    if (data.Exist == 1) {
                        $("#customerid").val(data.CustomerID);
                        $("#shipper").val(data.shipper);
                        $("#shippercontact").val(data.contactperson);
                        $("#shipperaddres").val(data.shipperaddress);
                        $("#ConsignorPhone").val(data.shipperphone);
                        $("#origincountry").val(data.shippercountry);
                        $("#orilocation").val(data.shipperlocation);
                        $("#Weight").val(data.weight);
                        BindCity(data.shippercity, data.LocationID);
                    

                        $("#consignee").val(data.consignee);
                        $("#consigneecontact").val(data.consigneecontact);
                        $("#Consigneeaddress").val(data.consigneeaddress);
                        $("#ConsigneePhone").val(data.consigneephone);
                        $("#destinationCountry").val(data.consigneecountry);
                        $("#destlocation").val(data.consigneelocation);
                      
                        BindConsigneeCity(data.consigneecity);

                    }

                   
                }
            });
        });
    });
</script>

<section class="content-header">
    <h1 class="headingfont">Quick AirWay Bill</h1>

</section>




<section class="content">

    @using (Html.BeginForm())
    {
       
         <div id="validations" style="color:red;margin-left:7px;display:none">* Please fill mandatory fields</div>
   <input type="hidden" id="IsAvailable" value="0" />
      


      <div class="row no-margin" style="padding-top: 10px">
                 <div class="col-md-12">
            <h3 style="color:white">Shipper Details</h3><hr />
            </div>

        </div>


        <div class="row no-margin">

        
       
                @Html.HiddenFor(Model=>Model.HAWBNo)
            @Html.HiddenFor(model => model.AcJournalID)
              @*  <label class="headinglabel required">HAWB No.</label>
                @Html.TextBoxFor(model => model.HAWBNo, new { @class = "form-control" })*@
         
          

            <div class="col-md-3">
                <label class="headinglabel">Customer</label>
                @Html.DropDownListFor(model => model.customerid, new SelectList(@ViewBag.Customer, "CustomerID", "CustomerName"),"Select", new { @class = "form-control" })
            </div>

            <div class="col-md-3">
                <label class="headinglabel required">Shipper</label>
             @Html.TextBoxFor(model => model.shipper, new { @class = "form-control txttarget" })
            </div>

               <div class="col-md-3">
                <label class="headinglabel required">Contact Person</label>
             @Html.TextBoxFor(model => model.shippercontact, new { @class = "form-control txttarget" })
            </div>
               <div class="col-md-3">
                <label class="headinglabel required">Telephone</label>
             @Html.TextBoxFor(model => model.ConsignorPhone, new { @class = "form-control textright" })
            </div>
       
        </div>

        <div class="row no-margin" style="padding-top: 10px">
              
                <div class="col-md-3">
                <label class="headinglabel required">Address</label>
             @Html.TextBoxFor(model => model.shipperaddres, new { @class = "form-control txttarget" })
            </div>
       
            <div class="col-md-3">
                <label class="headinglabel required">Origin Country</label>
                @Html.DropDownListFor(model => model.origincountry, new SelectList(@ViewBag.Country, "CountryID", "CountryName"),"Select", new { @class = "form-control" })
            </div>

               <div class="col-md-3">
                <label class="headinglabel required">Origin City</label>
                @Html.DropDownListFor(model => model.origincity, new SelectList(@ViewBag.City, "CityID", "City"),"Select", new { @class = "form-control" })
            </div>
      <div class="col-md-3">
                <label class="headinglabel required">Origin Location</label>
                @Html.TextBoxFor(model => model.orilocation, new { @class = "form-control txttarget" })
            </div>

        </div>
        
         
        
          <div class="row no-margin" style="padding-top: 10px">
                 <div class="col-md-12">
            <h3 style="color:white">Consignee Details</h3><hr />
            </div>

        </div>
        
        
        <div class="row no-margin" style="padding-top: 10px">
            <div class="col-md-3">
                <label class="headinglabel required">Payment Mode</label>
             @Html.DropDownList("paymentmode", new List<SelectListItem>
                {
                    new SelectListItem{ Text="Pickup Cash", Value = "PKP" },
                    new SelectListItem{ Text="COD", Value = "COD" },
                    new SelectListItem{ Text="ACC", Value = "Account" },
              
                   
                 },"Select", new { @class = "form-control" })
            </div>

            <div class="col-md-3">
                <label class="headinglabel required">Consignee</label>
                @Html.TextBoxFor(model => model.consignee, new { @class = "form-control txttarget" })
            </div>

              <div class="col-md-3">
                <label class="headinglabel required">Contact Person</label>
                @Html.TextBoxFor(model => model.consigneecontact, new { @class = "form-control txttarget" })
            </div>

             <div class="col-md-3">
                <label class="headinglabel required">Telephone No</label>
                @Html.TextBoxFor(model => model.ConsigneePhone, new { @class = "form-control textright" })
            </div>


          

        </div>
        
        <div class="row no-margin" style="padding-top: 10px">
             <div class="col-md-3">
                <label class="headinglabel required">Address</label>
                @Html.TextBoxFor(model => model.Consigneeaddress, new { @class = "form-control txttarget" })
            </div>

              <div class="col-md-3">
                <label class="headinglabel required">Destination Country</label>
                @Html.DropDownListFor(model => model.destinationCountry, new SelectList(@ViewBag.Country, "CountryID", "CountryName"),"Select", new { @class = "form-control" })
            </div>

               <div class="col-md-3">
                <label class="headinglabel required">Destination City</label>
                @Html.DropDownListFor(model => model.destinationCity, new SelectList(@ViewBag.City, "CityID", "City"),"Select", new { @class = "form-control" })
            </div>

      
                 <div class="col-md-3">
                <label class="headinglabel required">Destination Location</label>
                @Html.TextBoxFor(model => model.destlocation, new { @class = "form-control txttarget" })
            </div>
        </div>
     
         <div class="row no-margin" style="padding-top: 10px">
                 <div class="col-md-12">
            <h3 style="color:white">Cargo Details</h3><hr />
            </div>

        </div>
        
        
        <div class="row no-margin" style="padding-top: 10px">
            <div class="col-md-3">
                <label class="headinglabel required">Description</label>
                @Html.TextBoxFor(model => model.Description, new { @class = "form-control txttarget" })
            </div>

            <div class="col-md-3">
                <label class="headinglabel required">Pieces</label>
                @Html.TextBoxFor(model => model.Pieces, new { @class = "form-control textright" })
            </div>
            <div class="col-md-3">
                <label class="headinglabel required">Weight</label>
                @Html.TextBoxFor(model => model.Weight, new { @class = "form-control textright" })
            </div>


            <div class="col-md-3">
                <label class="headinglabel required">Courier Movement Type</label>
            @Html.DropDownListFor(model=>model.MovementTypeID,new SelectList(@ViewBag.Movement, "MovementID", "MovementType"),"Select",new{@class="form-control"})
            </div>

        </div>
        
        <div class="row no-margin" style="padding-top: 10px">
                 <div class="col-md-3">
                <label class="headinglabel required">Parcel Type</label>
            @Html.DropDownListFor(model=>model.ParcelTypeID,new SelectList(@ViewBag.parceltype, "ID", "ParcelType1"),"Select",new{@class="form-control"})
            </div>

                  <div class="col-md-3">
                <label class="headinglabel required">Product Type</label>
            @Html.DropDownListFor(model=>model.ProductTypeID,new SelectList(@ViewBag.ProductType, "ProductTypeID", "ProductName"),"Select",new{@class="form-control"})
            </div>

               <div class="col-md-3">
                <label class="headinglabel required">Customer Rate Type</label>
            @Html.DropDownListFor(model=>model.CustomerRateTypeID,new SelectList(@ViewBag.customerrate, "CustomerRateTypeID", "CustomerRateType1"),"Select",new{@class="form-control"})
            </div>

               <div class="col-md-3">
                <label class="headinglabel">Material Cost</label>
                @Html.TextBoxFor(model => model.materialcost, new { @class = "form-control txtright textright" })
            </div>
           

        </div>
        
          <div class="row no-margin" style="padding-top: 10px">
              <div class="col-md-3">
                <label class="headinglabel">Remarks</label>
                @Html.TextBoxFor(model => model.remarks, new { @class = "form-control txttarget" })
            </div>
               <div class="col-md-3">
                <label class="headinglabel required">Courier Charge</label>
                @Html.TextBoxFor(model => model.CourierCharge, new { @class = "form-control textright" })
            </div>
            <div class="col-md-3">
                <label class="headinglabel required">Packing Charge</label>
                @Html.TextBoxFor(model => model.PackingCharge, new { @class = "form-control textright" })
            </div>
                <div class="col-md-3">
                <label class="headinglabel">Customs Charge</label>
                @Html.TextBoxFor(model => model.CustomCharge, new { @class = "form-control textright" })
            </div>

              
          
        

        </div>
             
        
        <div class="row no-margin" style="padding-top:10px">
              <div class="col-md-3">
                <label class="headinglabel">Other Charge</label>
                @Html.TextBoxFor(model => model.OtherCharge, new { @class = "form-control textright" })
            </div>


                   <div class="col-md-3">
                <label class="headinglabel">Total</label>
                @Html.TextBoxFor(model => model.totalCharge, new { @class = "form-control textright" })
            </div>

                 <div class="col-md-3">
                <label class="headinglabel">Picked up By</label>
                @Html.DropDownListFor(model => model.PickedBy, new SelectList(@ViewBag.Employee, "EmployeeID", "EmployeeName"),"Select", new { @class = "form-control" })
            </div>

            <div class="col-md-3">
                <label class="headinglabel">Depot Recvd By</label>
                @Html.DropDownListFor(model => model.ReceivedBy, new SelectList(@ViewBag.Employee, "EmployeeID", "EmployeeName"),"Select", new { @class = "form-control" })
            </div>

        </div>
     
        
        <div class="row no-margin" style="padding-top: 10px">
         
            <h3 style="color:white">Forwarding Agent Details</h3><hr />

        </div>
        
         <div class="row no-margin" style="padding-top: 10px">
          
              <div class="col-md-3">
                <label class="headinglabel">Add Forwarding Agent</label>
                @Html.DropDownListFor(model => model.FagentID, new SelectList(@ViewBag.FAgent, "FAgentID", "FAgentName"),"Select", new { @class = "form-control" })
            </div>
        
             
                <div class="col-md-3">
                <label class="headinglabel">Forwarding AWB</label>
                @Html.TextBoxFor(model => model.FAWBNo, new { @class = "form-control" })
            </div>

                 <div class="col-md-3">
                <label class="headinglabel">Forwarding Charge</label>
                @Html.TextBoxFor(model => model.ForwardingCharge, new { @class = "form-control textright" })
            </div>
</div>
          @*        <div class="col-md-3" style="padding-top:25px">
              
         <input type="button" value="Add" id="btnAddFAgent" class="btn btn-primary" />
            </div>*@

        @*</div>
           <div class="row no-margin" style="padding-top: 10px">
               <div class="col-md-12">
                   <table class="table table=bordered table-responsive">
                       <thead>
                           <tr>
                               <th>ID</th>
                                <th>Forwarding Agent Name</th>
                                <th>Forwarding Agent AWB</th>
                                <th>Forwarding Agent Charge</th>
                           </tr>
                       </thead>
                   </table>
               </div>
               </div>*@
        <div class="row no-margin" style="padding-top: 10px">
            <div class="col-md-12">

                <input type="submit" value="Save" class="btn btn-primary btnwidth" id="btnsave" />&nbsp;&nbsp;<a href='@Url.Action("Index", "QuickAWB", new { id = 0 })' class="btn btn-primary btnwidth" data-toggle="tooltip" data-placement="right" title="Click here">Cancel</a>


            </div>
        </div>

}
       


</section>