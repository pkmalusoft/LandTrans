@model LTMSV2.Models.CustomerLedgerReportParam

@{
    Layout = "~/Views/Shared/_TrueBookMstr.cshtml";
}
<script src="~/Content/NewCSS/plugins/jQuery/moment.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.43/js/bootstrap-datetimepicker.min.js"></script>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.43/css/bootstrap-datetimepicker.min.css" />
<style>
    .flexTitle {
        display: flex;
        justify-content: space-between;
    }
</style>
<script type="text/javascript">
    $(function () {
        $('#FromDate').datetimepicker({ format: 'DD-MM-YYYY' });

    });

    $(function () {
        $('#ToDate').datetimepicker({ format: 'DD-MM-YYYY' });

    });

    $(document).ready(function () {
        $("#AllCustomer").click(function () {
            
            if ($("#AllCustomer").is(':checked')) {
                $('#CustomerName').attr('readonly', 'readonly');
                $('#CustomerName').val('');
                $('#CustomerId').val(0);
                $('#CustomerName').removeAttr('required');
            }
            else {
                $('#CustomerName').removeAttr('readonly');
                $('#CustomerName').attr('required', 'required');
            }
        });
        $("#chkAll").click(function () {
            if ($("#chkAll").is(':checked')) {
                $('#CustomerName').attr('readonly', 'readonly');
                $('#CustomerName').val('');
                $('#CustomerId').val(0);
            }
            else {
                $('#CustomerName').removeAttr('readonly');
                $('#CustomerName').attr('required', 'required');
            }
        });

        $("#chkSelected").click(function () {
            if ($("#chkSelected").is(':checked')) {
                $('#CustomerName').removeAttr('readonly');
            }
            else {
                $('#CustomerName').attr('readonly', 'readonly');
                $('#CustomerName').val('');
                $('#CustomerId').val(0);
            }
        });
        //$('#ReportType').change(function () {
        //    if ($('#ReportType').val() == "OutStanding") {
        //        $("#CustomerName").val('');
        //        $("#CustomerName").attr('readonly', 'readonly');
        //        $("#CustomerName").removeAttr('required');
        //        $('#lblcustomername').removeClass('required');
        //    }
        //    else if ($('#ReportType').val() == "AWBOutStanding") {
        //        $("#CustomerName").val('');
        //        $("#CustomerName").removeAttr('readonly');
        //        $("#CustomerName").removeAttr('required');
        //        $('#lblcustomername').removeClass('required');
        //    }
        //    else {
        //        $("#CustomerName").removeAttr('readonly');
        //        $('#lblcustomername').addClass('required');
        //    }
        //});

        $('#CustomerName').change(function () {
            if ($("#CustomerName").val() == '') {
                $('#CustomerId').val(0);
                $('#CustomerId').attr('label', '');
            }
            else if ($("#CustomerName").val() != $('#CustomerId').attr('label')) {                
                $("#CustomerName").val('');        
                $('#CustomerId').val(0);
                $('#CustomerId').attr('label', '');
            }            

        })
        $("#CustomerName").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/CustomerReceipt/GetCreditCustomerName',
                    datatype: "json",
                    data: {
                        term: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.CustomerName,
                                value: val.CustomerName,
                                ID: val.CustomerID,
                                type: val.CustomerType
                            }
                        }))
                    }
                })
            },
            minLength: 1,
            autoFocus: false,
            focus: function (e, i) {
                $("#CustomerName").val(i.item.label);
                $('#CustomerId').val(i.item.ID);
                $('#CustomerId').attr('label', i.item.label);
            },
            select: function (e, i) {
                e.preventDefault();
                $("#CustomerName").val(i.item.label);
                $('#CustomerId').val(i.item.ID);
                $('#CustomerId').attr('label', i.item.label);              
            },

        });
        $('#ReportType').trigger('change');
       
        if ($('#CustomerId').val() != 0) {
            
            $("#AllCustomer").prop('checked','false');
            $("#AllCustomer").attr('value', false);
            $("#AllCustomer").trigger('click');
        }
        else {            
            $("#AllCustomer").prop('checked', 'checked');
            //$("#AllCustomer").trigger('click');
        }
    });
</script>

<section class="content-header">
    <h1 class="headingfont">@ViewBag.ReportName</h1>
</section>
@using (Html.BeginForm("CustomerOutstanding", "Reports", FormMethod.Post, new { @id = "customerledger" }))
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row no-margin">
      
          
               
                    <div class="col-md-2">
                        <label class="headinglabel required ">From Date</label>
                        @Html.TextBoxFor(model => model.FromDate, new { @class = "form-control text-right", @required = "true" })
                    </div>
                    <div class="col-md-2">
                        <label class="headinglabel required">To Date</label>
                        @Html.TextBoxFor(model => model.ToDate, new { @class = "form-control text-right", @required = "true" })
                    </div>
                     <div class="col-md-2">
                        <label class="headinglabel required">Report Type</label>
                        @Html.DropDownList("ReportType", new List<SelectListItem>
                       {                   
                           new SelectListItem{ Text="OutStanding", Value = "OutStanding" },                   
                           new SelectListItem{ Text="CN Note Unallocated", Value = "AWBUnAllocated" },
                           new SelectListItem{ Text="CN Note OutStanding", Value = "AWBOutStanding" },
                        }, "Select", new { @class = "form-control", @required = "true" })
                    </div>
                     <div class="col-md-6" id="divachead1">
                         <div class="flexTitle">
                             <label class="headinglabel required">Customer</label>
                             <div class="checkboxdesign no-padding text-right" style="float:right; ">
                                 @Html.CheckBox("AllCustomer", new { @name = "AllCustomer", @checked="checked" }) &nbsp
                                 <label class="headinglabel" style="color:#07a7e3!important;padding-left: 0!important">All Customer</label>
                             </div>
                         </div>                             
                             @Html.TextBoxFor(model => model.CustomerName, new { @class = "form-control", @autocomplete = "off",@readonly="readonly" })
                             @Html.HiddenFor(model => model.CustomerId)

                         </div>

                         <div class="clearfix"></div>
                         <div class="col-md-2">
                             <label class="headinglabel  required">Output</label>
                             @Html.DropDownList("Output", new List<SelectListItem>
                             {
                                 new SelectListItem{ Text="PDF", Value = "PDF" },
                                 new SelectListItem{ Text="EXCEL", Value = "EXCEL" },
                                 new SelectListItem{ Text="WORD", Value = "WORD" },

                              }, "Select", new { @class = "form-control", @value = "PDF", @required = "true" })
                         </div>

                         <div class="col-md-2">
                             <button class="btn btn-primary" id="btnreport" type="submit" style="margin-top:30px;width: 60px!Important;min-width: 50px!important;"><i class="fa fa-refresh" aria-hidden="true"></i></button>
                         </div>

                     </div>


}
<div class="row no-margin" style="padding-top:10px">
    @{ Html.RenderAction("ReportFrame", "Accounts");}

</div>