@model LTMSV2.Models.SupplierLedgerReportParam

@{
    Layout = "~/Views/Shared/_TrueBookMstr.cshtml";
}
<script src="~/Content/NewCSS/plugins/jQuery/moment.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.43/js/bootstrap-datetimepicker.min.js"></script>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.43/css/bootstrap-datetimepicker.min.css" />

<script type="text/javascript">   
    $(function () {
        $('#AsonDate').datetimepicker({ format: 'DD-MM-YYYY' });

    });
    $(document).ready(function () {
        var url = '/Accounts/GetSupplierName';

        $("#SupplierName").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: url,
                    datatype: "json",
                    data: {
                        term: request.term, SupplierTypeId: $('#SupplierTypeId').val()
                    },
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.SupplierName,
                                value: val.SupplierName,
                                ID: val.SupplierID,
                            }
                        }))
                    }
                })
            },
            minLength: 1,
            autoFocus: false,
            focus: function (e, i) {
                $("#SupplierName").val(i.item.label);
                $('#SupplierId').val(i.item.ID);
                $('#SupplierId').attr('label', i.item.label);
            },
            select: function (e, i) {
                e.preventDefault();
                $("#SupplierName").val(i.item.label);
                $('#SupplierId').val(i.item.ID);
                $('#SupplierId').attr('label', i.item.label);
            },
        });
        $('#SupplierName').change(function () {
            if ($('#SupplierName').val().trim() != '' && $('#SupplierId').attr('label') != $('#SupplierName').val().trim()) {
                $('#SupplierName').val('');
                $('#SupplierId').val(0);
            }
            else if ($('#SupplierName').val().trim() == '') {
                $('#SupplierId').val(0);
            }
        });

        $("#chkAll").click(function () {
            if ($("#chkAll").is(':checked')) {
                $('#SupplierName').attr('readonly', 'readonly');
                $('#SupplierName').val('');
                $('#SupplierId').val(0);
            }
            else {
                $('#SupplierName').removeAttr('readonly');
            }
        });

        $("#chkSelected").click(function () {
            if ($("#chkSelected").is(':checked')) {
                $('#SupplierName').removeAttr('readonly');
            }
            else {
                $('#SupplierName').attr('readonly', 'readonly');
                $('#SupplierName').val('');
                $('#SupplierId').val(0);
            }
        });

        //$('#ReportType').change(function () {
        //    if ($('#ReportType').val() == "Ledger") {
        //        $('#divledger').removeClass('hide');
        //        $('#divstatement').addClass('hide');
        //        $('#AsonDate').removeAttr('required');
        //        $('#FromDate').attr('required', 'true');
        //        $('#ToDate').attr('required', 'true');
        //        $("#SupplierName").removeAttr('readonly');
        //        $('#SupplierName').attr('required', 'true')
        //        $('#lblsuppliername').addClass('required');
        //    }
        //    else if ($('#ReportType').val() == "Statement") {
        //        $('#divledger').addClass('hide');
        //        $('#divstatement').removeClass('hide');
        //        $('#AsonDate').attr('required', 'true')
        //        $('#FromDate').removeAttr('required');
        //        $('#ToDate').removeAttr('required');
        //        $("#SupplierName").removeAttr('readonly');
        //        $("#SupplierName").removeAttr('required');
        //        $('#lblsuppliername').removeClass('required');
        //    }
        //    else {

        //    }
        //});
        $("#CustomerName").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/CustomerReceipt/GetCustomerName',
                    datatype: "json",
                    data: {
                        term: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.CustomerName,
                                value: val.CustomerName,
                                ID: val.CustomerID,
                                type: val.CustomerType
                            }
                        }))
                    }
                })
            },
            minLength: 1,
            autoFocus: true,
            select: function (e, i) {
                e.preventDefault();
                $("#CustomerName").val(i.item.label);
                $('#CustomerId').val(i.item.ID);
                //$('#hdnCustomerType').val(i.item.type);
                //if ($('#hdnCustomerType').val() == "CR") {
                //    $("#Consignor1").css('color', 'blue');
                //}
                //else if ($('#hdnCustomerType').val() == "CS") {
                //    $("#Consignor1").css('color', 'red');
                //}
                //else {
                //    $("#Consignor1").css('color', 'black');
                //}

            },

        });
        //$('#ReportType').trigger('change');
    });
</script>

<section class="content-header">
    <h1 class="headingfont">@ViewBag.ReportName</h1>
</section>
@using (Html.BeginForm("SupplierAging", "Reports", FormMethod.Post, new { @id = "supplierledger" }))
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row no-margin d-flex">
        <div class="col-md-5 ">           
            <div class="form-group" id="divstatement">
                <div class="row">
                    <div class="col-md-6">
                        <label class="headinglabel required ">As on date</label>
                        @Html.TextBoxFor(model => model.AsonDate, new { @class = "form-control text-right" })
                    </div>
                    <div class="col-md-4 text-right">
                        <label class="headinglabel required ">Option</label>
                        <div class="innerCheckbox">
                            <div class="field checkboxdesign verticalcheckbox">
                                <label class="headinglabel"><input type="radio" id="chkAll" checked name="roptions" />All</label>
                            </div>
                            <div class="field checkboxdesign justify-center" style="padding-top: 5px!important">
                                <label class="headinglabel"><input type="radio" id="chkSelected" name="roptions" />Selected</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-6 col-md-offset-1">
            <div class="col-md-5">
                <label class="headinglabel  required">Output</label>
                @Html.DropDownList("Output", new List<SelectListItem>
                {
                    new SelectListItem{ Text="PDF", Value = "PDF" },
                    new SelectListItem{ Text="EXCEL", Value = "EXCEL" },
                    new SelectListItem{ Text="WORD", Value = "WORD" },

                 }, "Select", new { @class = "form-control", @value = "PDF", @required = "true" })
            </div>
            <div class="col-md-5">
                <label class="headinglabel required">Report Type</label>
                @Html.DropDownList("ReportType", new List<SelectListItem>
               {
                   new SelectListItem{ Text="Summary", Value = "Summary"},
                   new SelectListItem{ Text="Detail", Value = "Detail" }                   
                }, "Select", new { @class = "form-control",@required="true" })
            </div>
            <div class="col-md-2">
                <button class="btn btn-primary" id="btnreport" type="submit" style="margin-top:30px;width: 60px!Important;min-width: 50px!important;"><i class="fa fa-refresh" aria-hidden="true"></i></button>
            </div>
        </div>
    </div>
    <div class="row no-margin">
        
            <div class="col-md-2">
                <label class="required headinglabel">Supplier Type</label>
                @Html.DropDownListFor(model => model.SupplierTypeId, new SelectList(ViewBag.SupplierType, "SupplierTypeID", "SupplierType1"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SupplierTypeId)
            </div>
            <div class="col-md-6">
                <label class="headinglabel required" id="lblsuppliername">Supplier Name</label>
                @Html.TextBoxFor(model => model.SupplierName, new { @class = "form-control", @autocomplete = "off", @required = "true" ,@readonly="true" })
                @Html.HiddenFor(model => model.SupplierId)
            </div>
        

    </div>

}
<div class="row no-margin" style="padding-top:10px">
    @{ Html.RenderAction("ReportFrame", "Accounts");}

</div>