@model LTMSV2.Models.RevenueUpdateMasterVM


@{
    Layout = "~/Views/Shared/_TrueBookMstr.cshtml";
    var _decimal = Convert.ToInt32(@Session["Decimal"].ToString());
}


<script src="~/Content/NewCSS/plugins/jQuery/moment.js"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.43/js/bootstrap-datetimepicker.min.js"></script>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.43/css/bootstrap-datetimepicker.min.css" />
<style>
    #details tr {
        height: 32px;
    }

    #DeleteNewRow {
        color: #dd4b39;
    }

   /* #details tr:first-of-type, #ExpAllocationTable tr:first-of-type {
        background: #35b8eb;
        color: #fff;
    }*/

    .taxCheck input {
        margin-right: 6px;
    }

    .headinglabel {
        font-family: Calibri;
        font-size: 16px;
        color: #2b2929 !important;
    }
</style>
<script type="text/javascript">
    var AWBItems = [];
    var RemoveAWBItems = [];
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode != 46 && charCode > 31
            && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }
    function setNumberDecimal(obj) {
       $(obj).val(parseFloat($(obj).val()).toFixed(@_decimal));
    }

    function checkdetailcount() {
        var i = $('#details >  tr').length;
        var idtext = 'hdndel';
        var totalcount = 0;
        $('#hdndetailcount').val(totalcount);
        var totalamount = 0;
        $('[id^=' + idtext + ']').each(function (index, item) {
            if ($(item).val() != "true") {
                totalcount = parseFloat(totalcount) + 1;
                $('#hdndetailcount').val(totalcount);
                totalamount = parseFloat(totalamount) + parseFloat($('#txtrevenueamt_' + index).val());
                $('#txtTotalAmount').val(totalamount.toFixed(3));

            }
        });
    }
    function DisplayCostItems() {
        $.ajax({
            url: '/RevenueUpdate/GetConsignmentDetail',
            datatype: "json",
            data: { id: $('#InScanID').val() },
            success: function (response) {
                $('#ConsignorId').val(response.ConsignorId);
                $('#ConsignorName').val(response.ConsignorName);
                $('#ConsigneeId').val(response.ConsigneeId);
                $('#ConsigneeName').val(response.ConsigneeName);
                $('#PaymentType').val(response.PaymentModeId);
                $('#InvoiceTo').val(response.InvoiceTo);
                $('#InvoiceTo').trigger('change');
            }
        });

        $.ajax({
            type: "POST",
            url: "/RevenueUpdate/GetRevenueUpdateDetail",
            datatype: "Json",
            data: { "id": $("#ID").val() },  //$("#CollectedByID option:selected").val()
            success: function (response) {

                if (response.data != null) {
                    AWBItems = [];
                    AWBItems = response.data;
                    var TotalAmount = 0;
                    $('#hdndetailcount').val(response.data.length);
                    //$('#details > tbody > tr').html('');
                    $.each(AWBItems, function (index, item) {

                        var i = $('#details > tr').length;
                        var paytype = item.PaymentType;
                        var paytypeid = item.PaymentModeId;
                        var invoiceto = item.InvoiceTo;
                        var currencyid = item.CurrencyId;
                        var currencyname = item.Currency;
                        var exchangerate = parseFloat(item.ExchangeRate).toFixed(@_decimal);
                        var revenuecost = item.RevenueCost;
                        var revenuecostid = item.RevenueCostMasterID;
                        var amount = item.Amount;
                        var famount = parseFloat(amount * exchangerate).toFixed(3);
                        var customername = item.CustomerName;
                        var customerid = item.CustomerId;
                        var DebitHead = item.DebitAccountName;
                        var DebitHeadId = item.AcHeadDebitId;
                        var CreditHead = item.CreditAccountName;
                        var CreditHeadId = item.AcHeadCreditId;
                        var DetailID = item.ID;

                        var objHtml = '<tr>' + '<td style="padding-left:10px">' + paytype + '<input type="hidden" name ="DetailVM[' + i + '].ID" value="' + DetailID + '" /><input id="hdndel_' + i + '" type="hidden" name="DetailVM[' + i + '].IsDeleted" class="hdndeleted" /> <input type="hidden" class=JAcHead value="' + paytypeid + '" name="DetailVM[' + i + '].PaymentModeId"></td>';
                        objHtml = objHtml + '<td style="padding-left:10px">' + invoiceto + '<input type="hidden" value="' + invoiceto + '" name="DetailVM[' + i + '].InvoiceTo"></td>';
                        objHtml = objHtml + '<td style="padding-left:10px">' + currencyname + '<input type="hidden" value=' + currencyid + ' name="DetailVM[' + i + '].CurrencyId"></td>';
                        objHtml = objHtml + '<td class="textright" style="padding-right:10px">' + exchangerate + '<input type="hidden" class="JAcAmt" id="txtex_' + i +'" value=' + exchangerate + ' name="DetailVM[' + i + '].ExchangeRate"></td>';
                        var revenuehtml = '<input type="text" class="form-control" id="txtrevenue_' + i + '" value="' + revenuecost + '" />';
                        objHtml = objHtml + '<td  style="padding-right:10px">' + revenuehtml + '<input type="hidden" class="JAcAmt" id="txtrevenueid_' + i + '" value=' + revenuecostid + ' name="DetailVM[' + i + '].RevenueCostMasterID"></td>';
                        var revenueamthtml = '<input type="text" class="form-control text-right" id="txtrevenueamt_' + i + '" value="' + amount + '" name="DetailVM[' + i + '].Amount" />';
                        objHtml = objHtml + '<td class class="textright" style="padding-right:10px">' + revenueamthtml + '</td>'; //'<input type="hidden" class="JAcAmt" value=' + amount + ' name="DetailVM[' + i + '].Amount">
                        var frevenueamthtml = '<span class="text-right" id="spanfamt_' + i + '">' + famount + ' </span>';
                        objHtml = objHtml + '<td class="text-right" style="padding-right:10px">' + frevenueamthtml + '<input type="hidden"id="txtfrevenueamt_' + i + '"  class="JAcAmt" value=' + famount + '"></td>';
                        //objHtml = objHtml + '<td  class=textright style="padding-right:10px">' + famount + '</td>';
                        objHtml = objHtml + '<td style="padding-left:10px">' + customername + '<input type="hidden" value=' + customerid + ' name="DetailVM[' + i + '].CustomerId"></td>'
                        objHtml = objHtml + '<td style="padding-left:10px">' + DebitHead + '<input type="hidden" value="' + DebitHeadId + '" name="DetailVM[' + i + '].AcHeadDebitId"></td>';
                        var CreditHeadhtml = '<span id="spancredithead_' + i + '">' + CreditHead + '</span>';
                        objHtml = objHtml + '<td style="padding-left:10px">' + CreditHeadhtml + '<input type="hidden" id="txtcreditid_' + i + '"  value="' + CreditHeadId + '" name="DetailVM[' + i + '].AcHeadCreditId"></td>';
                        //  objHtml = objHtml + '<td><img src="/Content/img/details_open.png" id="plus_minus" style="cursor: pointer;" class="open" />' + ExpTableHtml + '</td>';
                        objHtml = objHtml + '<td><a href="javascript:void(0)" id="DeleteNewRow"><i class="fa fa-times"></i></a></td>';
                        objHtml = objHtml + '</tr>';
                        $("#details").append(objHtml);
                        TotalAmount = parseFloat(TotalAmount)+parseFloat($('#txtrevenueamt_' + i).val());
                        $('#txtTotalAmount').val(parseFloat(TotalAmount).toFixed(3));
                        setNumberDecimal($('#txtrevenueamt_' + i));
                        $('#details').on("click", "#DeleteNewRow", function () {
                            debugger;
                            //$(this).parent().parent().remove();
                            $(this).parent().parent().addClass('hide');
                            var obj = $(this).parent().parent().find('.hdndeleted');
                            $(obj).val(true);
                            checkdetailcount();
                        });
                        $('#txtrevenueamt_' + i).change(function () {
                            debugger;
                            if (isNaN(parseInt($(this).val()))) {
                                $(this).val('0.000');
                            } else {
                                var amt = parseFloat($(this).val());
                                $(this).val(amt.toFixed(3));
                            }
                            var idindex = $(this).attr('id').split('_')[1];
                            var exrate = $('#txtex_' + idindex).val();
                            var famount = parseFloat($(this).val()) * parseFloat(exrate);
                            $('#txtfrevenueamt_' + idindex).val(parseFloat(famount).toFixed(@_decimal));
                            $('#spanfamt_' + idindex).html(parseFloat(famount).toFixed(@_decimal));
                            checkdetailcount();
                        });
                        
                        
                        $("#txtrevenue_" + i).autocomplete({
                            source: function (request, response) {
                                $.ajax({
                                    url: '/RevenueUpdate/RevenueCost',
                                    datatype: "json",
                                    data: {
                                        term: request.term
                                    },
                                    success: function (data) {
                                        response($.map(data, function (val, item) {
                                            return {
                                                label: val.RevenueComponent,
                                                value: val.RevenueComponent,
                                                ID: val.RCID,
                                                RevenueAcHeadID: val.RevenueAcHeadID,
                                                RevenueAcHeadName: val.RevenueHeadName,
                                                Amount: val.RevenueRate
                                            }
                                        }))
                                    }
                                })
                            },
                            minLength: 1,
                            autoFocus: false,
                            focus: function (e, i) {


                                var index = $(this).attr('id').split('_')[1];
                                $(this).val(i.item.label);
                                $('#txtrevenueid_' + index).val(i.item.ID);
                                $("#spancredithead_" + index).html(i.item.RevenueAcHeadName);
                                $("#txtcreditid_" + index).val(i.item.RevenueAcHeadID);
                                $('#txtrevenueamt_' + index).val(i.item.Amount);
                            },
                            select: function (e, i) {
                                e.preventDefault();

                                var index = $(this).attr('id').split('_')[1];
                                $(this).val(i.item.label);
                                $('#txtrevenueid_' + index).val(i.item.ID);
                                $("#spancredithead_" + index).html(i.item.RevenueAcHeadName);
                                $("#txtcreditid_" + index).val(i.item.RevenueAcHeadID);
                                $('#txtrevenueamt_' + index).val(i.item.Amount);
                            },

                        });
                    });

                }
                else {
                    AWBItems = [];
                    //$("#detailsbody").html('');
                    $('#details > tbody').html('');

                }

            }
        });
    }

    function getrevenuecost() {
        $.ajax({
            url: '/RevenueUpdate/GetConsignmentDetail',
            datatype: "json",
            data: { id: $('#InScanID').val() },
            success: function (response) {
                debugger;
                $('#ConsignorId').val(response.ConsignorId);
                $('#ConsignorName').val(response.ConsignorName);
                $('#ConsigneeId').val(response.ConsigneeId);
                $('#ConsigneeName').val(response.ConsigneeName);
                $('#PaymentType').val(response.PaymentModeId);
                $('#InvoiceTo').val(response.InvoiceTo);
                $('#InvoiceTo').trigger('change')
                if ($('#InvoiceTo').val() == null || $('#InvoiceTo').val() == '') { $('#InvoiceTo').focus(); }
                else { $('#txtRevenueCost').focus(); }
                //AWBItems = [];
                //if (response.revenuedetail != null && response.revenuedetail.length>0) {
                //    AWBItems = response.revenuedetail;

                //    $.each(AWBItems, function (index, item) {
                //        debugger;
                //        var i = $('#details > tbody > tr').length - 1;
                //        var paytype = item.PaymentType;
                //        var paytypeid = item.PaymentModeId;
                //        var invoiceto = item.InvoiceTo;
                //        var currencyid = item.CurrencyId;
                //        var currencyname = item.Currency;
                //        var exchangerate = item.ExchangeRate;
                //        var revenuecost = item.RevenueCost;
                //        var revenuecostid = item.RevenueCostMasterID;
                //        var amount = item.Amount;
                //        var famount = parseFloat(amount * exchangerate).toFixed(2);
                //        var customername = item.CustomerName;
                //        var customerid = item.CustomerId;
                //        var DebitHead = item.DebitAccountName;
                //        var DebitHeadId = item.AcHeadDebitId;
                //        var CreditHead = item.CreditAccountName;
                //        var CreditHeadId = item.AcHeadCreditId;
                //        var DetailID = 0;

                //        var objHtml = '<tr>' + '<td style="padding-left:10px">' + paytype + '<input type="hidden" name ="DetailVM[' + i + '].ID" value="' + DetailID + '" /><input type="hidden" name="DetailVM[' + i + '].IsDeleted" class="hdndeleted" /> <input type="hidden" class=JAcHead value="' + paytypeid + '" name="DetailVM[' + i + '].PaymentModeId"></td>';
                //        objHtml = objHtml + '<td style="padding-left:10px">' + invoiceto + '<input type="hidden" value="' + invoiceto + '" name="DetailVM[' + i + '].InvoiceTo"></td>';
                //        objHtml = objHtml + '<td style="padding-left:10px">' + currencyname + '<input type="hidden" value=' + currencyid + ' name="DetailVM[' + i + '].CurrencyId"></td>';
                //        objHtml = objHtml + '<td class="textright" style="padding-right:10px">' + exchangerate + '<input type="hidden" class="JAcAmt" value=' + exchangerate + ' name="DetailVM[' + i + '].ExchangeRate"></td>';
                //        objHtml = objHtml + '<td class=textright style="padding-right:10px">' + revenuecost + '<input type="hidden" class="JAcAmt" value=' + revenuecostid + ' name="DetailVM[' + i + '].RevenueCostMasterID"></td>';
                //        objHtml = objHtml + '<td class style="padding-right:10px">' + amount + '<input type="hidden" class="JAcAmt" value=' + amount + ' name="DetailVM[' + i + '].Amount"></td>';
                //        objHtml = objHtml + '<td class style="padding-right:10px">' + famount + '</td>';
                //        objHtml = objHtml + '<td style="padding-left:10px">' + customername + '<input type="hidden" value=' + customerid + ' name="DetailVM[' + i + '].CustomerId"></td>'
                //        objHtml = objHtml + '<td style="padding-left:10px">' + DebitHead + '<input type="hidden" value="' + DebitHeadId + '" name="DetailVM[' + i + '].AcHeadDebitId"></td>';
                //        objHtml = objHtml + '<td style="padding-left:10px">' + CreditHead + '<input type="hidden" value="' + CreditHeadId + '" name="DetailVM[' + i + '].AcHeadCreditId"></td>';
                //        //  objHtml = objHtml + '<td><img src="/Content/img/details_open.png" id="plus_minus" style="cursor: pointer;" class="open" />' + ExpTableHtml + '</td>';
                //        objHtml = objHtml + '<td><a href="javascript:void(0)" id="DeleteNewRow"><i class="fa fa-times"></i></a></td>';
                //        objHtml = objHtml + '</tr>';
                //        $("#details").append(objHtml);
                //    });
                //}
                //else {
                //    $('#InvoiceTo').trigger('change');

                //}
            }
        });
    }
    $(document).ready(function () {
        AWBItems = [];

        $(":text").css({ "border-radius": "5px" });
        $("select").css({ "border-radius": "5px" });

        $('#PaymentType').change(function () {
            var modeid = $('#PaymentType').val();
            if (modeid == 1) { //PKP
                $('#InvoiceTo').html('');
            }
            else if (modeid == 2) {
                $('#InvoiceTo').html('');
                var html = '<option>Consignee</option>'
                $('#InvoiceTo').html(html);
                $('#InvoiceTo').trigger('change');
            }
            else if (modeid == 3) {
                $('#InvoiceTo').html('');
                var html = '<option>Shipper</option>';
                html = html + '<option>Consignee</option>';
                html = html + '<option>Others</option>';
                $('#InvoiceTo').html(html);
            }

        });

        $('#EntryDate').datetimepicker({ format: 'DD-MM-YYYY' });

        $("#txtDebitHead").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/Accounts/AccountHead',
                    datatype: "json",
                    data: {
                        term: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.AcHead,
                                value: val.AcHead,
                                AcHeadID: val.AcHeadID
                            }
                        }))
                    }
                })
            },
            minLength: 1,
            autoFocus: false,
            focus: function(e, i)
            {
                $("#txtDebitHead").val(i.item.label);
                $('#txtDebitHeadId').val(i.item.AcHeadID);
            },
            select: function (e, i) {
                e.preventDefault();
                $("#txtDebitHead").val(i.item.label);
                $('#txtDebitHeadId').val(i.item.AcHeadID);


            },

        });
        $("#txtCreditHead").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/Accounts/AccountHead',
                    datatype: "json",
                    data: {
                        term: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.AcHead,
                                value: val.AcHead,
                                AcHeadID: val.AcHeadID
                            }
                        }))
                    }
                })
            },
            minLength: 1,
            autoFocus: false,
            focus: function (e, i) {
                $("#txtCreditHead").val(i.item.label);
                $('#txtCreditHeadId').val(i.item.AcHeadID);
            },
            select: function (e, i) {
                e.preventDefault();
                $("#txtCreditHead").val(i.item.label);
                $('#txtCreditHeadId').val(i.item.AcHeadID);
            },

        });

        $("#txtRevenueCost").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/RevenueUpdate/RevenueCost',
                    datatype: "json",
                    data: {
                        term: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.RevenueComponent,
                                value: val.RevenueComponent,
                                ID: val.RCID,
                                RevenueAcHeadID: val.RevenueAcHeadID,
                                RevenueAcHeadName: val.RevenueHeadName,
                                Amount:val.RevenueRate
                            }
                        }))
                    }
                })
            },
            minLength: 1,
            autoFocus: false,
            focus: function (e, i) {
                $("#txtRevenueCost").val(i.item.label);
                $("#txtRevenueCostId").val(i.item.ID);
                $("#txtCreditHeadId").val(i.item.RevenueAcHeadID);
                $("#txtCreditHead").val(i.item.RevenueAcHeadName);
                $("#txtAmount").val(i.item.Amount);
            },
            select: function (e, i) {
                e.preventDefault();
                $("#txtRevenueCost").val(i.item.label);
                $("#txtRevenueCostId").val(i.item.ID);
                $("#txtCreditHeadId").val(i.item.RevenueAcHeadID);
                $("#txtCreditHead").val(i.item.RevenueAcHeadName);
                $("#txtAmount").val(i.item.Amount);
            },

        });

        $("#txtCustomer").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/RevenueUpdate/Customer',
                    datatype: "json",
                    data: {
                        term: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.CustomerName,
                                value: val.CustomerName,
                                CustomerId: val.CustomerID

                            }
                        }))
                    }
                })
            },
            minLength: 1,
            autoFocus: false,
            focus: function (e, i) {
                $("#txtCustomer").val(i.item.label);
                $('#txtCustomerId').val(i.item.CustomerId);
            },
            select: function (e, i) {
                e.preventDefault();
                $("#txtCustomer").val(i.item.label);
                $('#txtCustomerId').val(i.item.CustomerId);

            },

        });
        $('#btnsearch').click(function () {
            if ($('#ConsignmentNo').val() == '') {
                $('#elemError').html("Select Consignment No!");
                $('#ConsignmentNo').focus();
                return;
            }
            else {
                $('#elemError').html("");
                getrevenuecost();
            }

        })
        $("#ConsignmentNo").change(function () {
            if ($("#ConsignmentNo").val() != $('#InScanID').attr('label')) {
                $('#spanerr').html("Select Valid ConsignmentNo!");
                $("#ConsignmentNo").val('');
                $("#ConsignmentNo").focus();
            }
            else {
                $('#elemError').html("");
            }
        })
        $("#ConsignmentNo").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/RevenueUpdate/GetConsignmentPending',
                    datatype: "json",
                    data: {
                        term: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.ConsignmentNo,
                                value: val.ConsignmentNo,
                                Id: val.InScanID,
                            }
                        }))
                    }
                })
            },
            minLength: 0,
            autoFocus: false,
            focus: function (event, ui) {
                $('#ConsignmentNo').val(ui.item.value);
                $('#InScanID').val(ui.item.Id);
                $('#InScanID').attr('label', ui.item.label);

            },
            select: function (e, i) {
                e.preventDefault();
                $("#ConsignmentNo").val(i.item.label);
                $('#InScanID').val(i.item.Id);
                $('#InScanID').attr('label',i.item.label);

            },

        });

        //$("#details").on('click', '.rem', function () {
        //    debugger;
        //    var remove_awbono = $(this).attr('awbno');

        //    var tempAWBItems = [];
        //    $.each(AWBItems, function (index, value) {
        //        debugger;
        //        if (value.AWB == remove_awbono) {
        //            RemoveAWBItems.push(value);
        //            return;
        //        }
        //    });
        //    $.each(AWBItems, function (index, value) {
        //        debugger;
        //        if (value.AWB != remove_awbono) {
        //            tempAWBItems.push(value);
        //        }

        //    });
        //    AWBItems = [];
        //    AWBItems = tempAWBItems;
        //    //$(this).parent().parent().remove();
        //    $("#detailsbody").html('');
        //    $.each(AWBItems, function (index, item) {
        //            $("#detailsbody").append('<tr awbno="' + item.AWB + '"><td>' + (parseInt(index) + 1) + '</td><td>' + item.AWB + '</td><td>' + item.Origin + '</td><td>' + item.Destination + '</td><td><a awbno="' + item.AWB + '" href="javascript:void(0);" class="rem">Remove</a></td></tr>');
        //    });
        //});


       

        //$("#InScanSheetNo").change(function () {


        //$('#PaymentType').change(function () {
        //    debugger;
        //    if ($('#PaymentType').val() == "Pickup Cash") {

        //        $('#txtCustomer').val('');
        //        $('#txtCustomerId').val('');
        //        $('#txtCustomer').attr('readonly', 'readonly');
        //        $('#InvoiceTo').attr('readonly', 'readonly');
        //    }
        //    else {
        //        $('#InvoiceTo').removeAttr('readonly');
        //    }


        //});
        $('#InvoiceTo').change(function () {
            debugger;
             if ($('#InvoiceTo').val() == "Shipper") {
                $('#txtCustomer').val($('#ConsignorName').val());
                $('#txtCustomerId').val($('#ConsignorId').val());
                $('#txtCustomer').attr('readonly', 'readonly');
            }
             else if ($('#InvoiceTo').val() == "Consignee") {
                $('#txtCustomer').val($('#ConsigneeName').val());
                $('#txtCustomerId').val($('#ConsigneeId').val());
                 $('#txtCustomer').attr('readonly', 'readonly');
            }
            $('#txtDebitHead').val($('#DebitAccountName').val());
            $('#txtDebitHeadId').val($('#DebitAccountId').val());
            if ($('#txtCustomerId').val() > 0) {
                $.ajax({
                    url: '/RevenueUpdate/GetCustomerDebitHeadID',
                    datatype: "json",
                    data: { CustomerId: $('#txtCustomerId').val()},
                    success: function (response) {
                        debugger;
                        console.log(response)
                        var data = response[0];
                        $('#txtDebitHeadId').val(data.AcHeadDebitId);

                        $('#txtDebitHead').val(data.DebitAccountName);
                        if ($('#CurrencyId').val() == "" || $('#CurrencyId').val() == "0") {
                            $('#CurrencyId').val($('#DefaultCurrencyID').val());
                            $('#CurrencyId').trigger('change');
                        }
                    }
                });
            }

        })
        $('#CurrencyId').change(function () {
            $.ajax({
                url: '/RevenueUpdate/GetCurrencyExRate',
                datatype: "json",
                data: { id: $('#CurrencyId').val() },
                success: function (response) {
                    debugger;
                    $('#ExchangeRate').val(response.data);

                }
            });

        });

       
        $('#details').on("click", "#DeleteNewRow", function () {
            debugger;
            //$(this).parent().parent().remove();
            $(this).parent().parent().addClass('hide');
            var obj = $(this).parent().parent().find('.hdndeleted');
            $(obj).val(true);
            checkdetailcount();
        });
        $("#btnAdd").click(function () {
            var errormessage = "";

            if ($('#CurrencyId').val() == "" || $('#CurrencyId').val() == "0") {
                $('#CurrencyId').val($('#DefaultCurrencyID').val());
                $('#ExchangeRate').val(1);
            }
            if ($('#ExchangeRate').val() == "" || $('#ExchangeRate').val() == 0) {
                $('#ExchangeRate').val(1);
            }
            $('#spanerr').html();
            if ($("#PaymentType").val() == "") {
                $('#spanerr').html('Select Payment Type');
               $("#PaymentType").focus();
                return false;
            }
            else if ($('#CurrencyId').val() == "" || $('#CurrencyId').val()=="0") {
                $('#spanerr').html("Please Select Currency!");
                $("#txtAmount").focus();
                return false;
            }
            else if ($("#PaymentType").val() != "Pickup Cash" && $('#InvoiceTo').val() == "") {
                $('#spanerr').html("Select Invoice to!");
                $("#InvoiceTo").focus();
                return false;
            }
            else if ($("#PaymentType").val() != "Pickup Cash" && ($('#txtCustomer').val() == "" || $('#txtCustomerId').val() == "0" || $('#txtCustomerId').val() == ""))
            {
                $('#spanerr').html("Select Customer!");
                $("#txtCustomer").focus();
                return false;
            }
            else if ($('#txtRevenueCost').val() == "" || $('#txtRevenueCostId').val() == "0") {
                $('#spanerr').html("Select Revenue Cost!");
                $("#txtRevenueCost").focus();
                return false;
            }
            else if ($("#txtAmount").val() == "") {
                $('#spanerr').html("Please Enter The Amount");
                $("#txtAmount").focus();
                return false;
            }
            else if (parseInt($("#txtAmount").val()) == 0) {
                $('#spanerr').html("Please Enter The Amount");
                $("#txtAmount").focus();
                return false;
            }
            else if ($('#txtDebitHead').val() == "" || $('#txtDebitHeadId').val() == "0") {
                $('#spanerr').html("Select Debit Head!");
                $('#txtDebitHead').focus();
                return false;
            }
            else if ($('#txtCreditHead').val() == "" || $('#txtCreditHeadId').val() == "0") {
                $('#spanerr').html("Select Credit Head!");
                $('#txtCreditHead').focus();
                return false;
            }

            else {
                $('#spanerr').html("");
                var str = "";
                var totalamt = 0;
                var i = $('#details >  tr').length;
                var paytype = $("#PaymentType option:selected").text();
                var paytypeid = $('#PaymentType').val();
                var invoiceto = $('#InvoiceTo').val();
                var currencyid = $('#CurrencyId').val();
                var currencyname = $("#CurrencyId option:selected").text();
                var exchangerate = parseFloat($('#ExchangeRate').val()).toFixed(@_decimal);
                var revenuecost = $('#txtRevenueCost').val();
                var revenuecostid = $('#txtRevenueCostId').val();
                var amount = $('#txtAmount').val();
                var famount =parseFloat(amount * exchangerate).toFixed(3);
                var invoicedto = $('#txtCustomer').val();
                var customerid = $('#txtCustomerId').val();
                var DebitHead = $('#txtDebitHead').val();
                var DebitHeadId = $('#txtDebitHeadId').val();
                var CreditHead = $('#txtCreditHead').val();
                var CreditHeadId = $('#txtCreditHeadId').val();
                var DetailID = 0;

                var objHtml = '<tr>' + '<td style="padding-left:10px">' + paytype + '<input type="hidden" name ="DetailVM[' + i + '].ID" value="' + DetailID + '" /><input type="hidden" id="hdndel_' + i + '" name="DetailVM[' + i + '].IsDeleted" class="hdndeleted" value="false" /> <input type="hidden" class=JAcHead value="' + paytypeid + '" name="DetailVM[' + i + '].PaymentModeId"></td>';
                objHtml = objHtml + '<td style="padding-left:10px">' + invoiceto + '<input type="hidden" value="' + invoiceto + '" name="DetailVM[' + i + '].InvoiceTo"></td>';
                objHtml = objHtml + '<td style="padding-left:10px">' + currencyname + '<input type="hidden" value=' + currencyid + ' name="DetailVM[' + i + '].CurrencyId"></td>';
                objHtml = objHtml + '<td class="textright" style="padding-right:10px">' + exchangerate + '<input type="hidden" class="JAcAmt" id="txtex_' + i +'" value=' + exchangerate + ' name="DetailVM[' + i + '].ExchangeRate"></td>';
                var revenuehtml = '<input type="text" class="form-control" id="txtrevenue_' + i + '" value="' + revenuecost + '" />';
                objHtml = objHtml + '<td  style="padding-right:10px">' + revenuehtml + '<input type="hidden" class="JAcAmt" id="txtrevenueid_' + i + '" value=' + revenuecostid + ' name="DetailVM[' + i + '].RevenueCostMasterID"></td>';
                var revenueamthtml = '<input type="text" class="form-control text-right" id="txtrevenueamt_' + i + '" value="' + amount + '" name="DetailVM[' + i + '].Amount" />';
                objHtml = objHtml + '<td class class="text-right" style="padding-right:10px">' + revenueamthtml + '</td>'; //'<input type="hidden" class="JAcAmt" value=' + amount + ' name="DetailVM[' + i + '].Amount">
                var frevenueamthtml = '<span class="text-right" id="spanfamt_' + i + '">' + famount + '<span/>';
                objHtml = objHtml + '<td  class="text-right" style="padding-right:10px">' + frevenueamthtml + '<input type="hidden"id="txtfrevenueamt_' + i + '"  class="JAcAmt" value=' + famount + '"></td>';
                //objHtml = objHtml + '<td class class="textright" style="padding-right:10px">' + famount + '<input type="hidden"id="txtfrevenueamt_' + i + '"  class="JAcAmt" value=' + amount + ' name="DetailVM[' + i + '].Amount"></td>';
                objHtml = objHtml + '<td style="padding-left:10px">' + invoicedto + '<input type="hidden" value=' + customerid + ' name="DetailVM[' + i + '].CustomerId"></td>'
                objHtml = objHtml + '<td style="padding-left:10px">' + DebitHead + '<input type="hidden" value="' + DebitHeadId + '" name="DetailVM[' + i + '].AcHeadDebitId"></td>';
                var CreditHeadhtml = '<span id="spancredithead_' + i + '">' + CreditHead + '</span>';
                objHtml = objHtml + '<td style="padding-left:10px">' + CreditHeadhtml + '<input type="hidden" id="txtcreditid_' + i + '"  value="' + CreditHeadId + '" name="DetailVM[' + i + '].AcHeadCreditId"></td>';
              //  objHtml = objHtml + '<td><img src="/Content/img/details_open.png" id="plus_minus" style="cursor: pointer;" class="open" />' + ExpTableHtml + '</td>';
                objHtml = objHtml + '<td><a href="javascript:void(0)" id="DeleteNewRow"><i class="fa fa-times"></i></a></td>';
                objHtml = objHtml + '</tr>';
                console.log(objHtml);
                $("#details").append(objHtml);
                $('#RowCount').val("0");
                //$('#PaymentType').val('');
                //$('#CurrencyId').val('');
                //$('#CurrencyId').val(0);
                //$('#ExchangeRate').val(1);
                $('#txtRevenueCost').val('');
                $('#txtRevenueCostId').val(0);
                $('#txtAmount').val(0);
                //$('#Customer').val('');
                //$('#CustomerId').val(0);
                //$('#txtDebitHead').val('');
                //$('#txtDebitHeadId').val(0);
                $('#txtCreditHead').val('');
                $('#txtCreditHeadId').val(0);
                $('#txtRevenueCost').focus();
                setNumberDecimal($('#txtrevenueamt_' + i));

                $('#txtrevenueamt_' + i).change(function () {
                    debugger;
                    if (isNaN(parseInt($(this).val()))) {
                        $(this).val('0.000');
                    } else {
                        var amt = parseFloat($(this).val());
                        $(this).val(amt.toFixed(3));
                    }
                    var idindex = $(this).attr('id').split('_')[1];
                    var exrate = $('#txtex_' + idindex).val();
                    var famount = parseFloat($(this).val()) * parseFloat(exrate);
                   $('#txtfrevenueamt_' + idindex).val(parseFloat(famount).toFixed(@_decimal));
                    $('#spanfamt_' + idindex).html(parseFloat(famount).toFixed(@_decimal));
                    checkdetailcount();
                });

                checkdetailcount();
                $("#txtrevenue_" + i).autocomplete({
                    source: function (request, response) {
                        $.ajax({
                            url: '/RevenueUpdate/RevenueCost',
                            datatype: "json",
                            data: {
                                term: request.term
                            },
                            success: function (data) {
                                response($.map(data, function (val, item) {
                                    return {
                                        label: val.RevenueComponent,
                                        value: val.RevenueComponent,
                                        ID: val.RCID,
                                        RevenueAcHeadID: val.RevenueAcHeadID,
                                        RevenueAcHeadName: val.RevenueHeadName,
                                        Amount: val.RevenueRate
                                    }
                                }))
                            }
                        })
                    },
                    minLength: 1,
                    autoFocus: false,
                    focus: function (e, i) {


                        var index = $(this).attr('id').split('_')[1];
                        $(this).val(i.item.label);
                        $('#txtrevenueid_' + index).val(i.item.ID);
                        $("#spancredithead_" + index).html(i.item.RevenueAcHeadName);
                        $("#txtcreditid_" + index).val(i.item.RevenueAcHeadID);
                        $('#txtrevenueamt_' + index).val(i.item.Amount);
                    },
                    select: function (e, i) {
                        e.preventDefault();

                        var index = $(this).attr('id').split('_')[1];
                        $(this).val(i.item.label);
                        $('#txtrevenueid_' + index).val(i.item.ID);
                        $("#spancredithead_" + index).html(i.item.RevenueAcHeadName);
                        $("#txtcreditid_" + index).val(i.item.RevenueAcHeadID);
                        $('#txtrevenueamt_' + index).val(i.item.Amount);
                    },

                });
            }
            return false;
        });
        //if ($('#ID').val() > 0) {
        //    DisplayCostItems();
        //}
        $('#btnsave').click(function () {

            var totalcount = $('#hdndetailcount').val();
            if (totalcount == 0) {
                $('#elemError').html("Add Revenue Detail to Save!");
                return false;
            }
            else {
                $('#elemError').html("");
                return true;
            }

        });

        if ('@ViewBag.EditMode' == "true") {
            DisplayCostItems();
            $('#ConsignmentNo').attr('readonly', 'readonly');
            $('#btnsearch').attr('disabled', 'disabled');
            $('#EntryDate').attr('readonly', 'readonly');
            $('#EmployeeID').attr('readonly', 'readonly');
            $('#PaymentType').focus();
            $('#txtDebitHead').val($('#DebitAccountName').val());
            $('#txtDebitHeadId').val($('#DebitAccountId').val());
        }
        else {
            if ($('#InScanID').val() != null && $('#InScanID').val() != "" && $('#InScanID').val() != 0) {
                getrevenuecost();
            }
            $("#ConsignmentNo").focus();
        }

        $('.text-right').change(function () {
            if (isNaN(parseInt($(this).val()))) {
                $(this).val('0.000');
            } else {
                var amt = parseFloat($(this).val());
                $(this).val(amt.toFixed(3));
            }
        });
    });

</script>



<section class="content-header">
    <h1 class="headingfont">@ViewBag.Title</h1>
</section>

<section class="content">



    @if (TempData["SuccessMsg"] != null)
    {
        <script type="text/javascript">
                  $(document).ready(function () {
                      $.notify("@TempData["SuccessMsg"]", "success");
                 });
        </script>
    }
    @if (TempData["ErrorMsg"] != null)
    {
        <script type="text/javascript">
                  $(document).ready(function () {
                      $.notify("@TempData["SuccessMsg"]", "warning");
                 });
        </script>
    }

    @using (Html.BeginForm())
    {
        @Html.ValidationSummary(true)
        <div id="validations" style="color:red;margin-left:7px;display:none">* Please fill mandatory fields</div>
        <fieldset>
            <div class="row">
                    
                        <div class="col-md-8 errors" >
                            <span id="elemError"></span>
                       
                      
                    </div>
            </div>
            <div class="row no-margin">
                <div class="col-md-3">
                    <input type="hidden" id="hdndetailcount" value="0" />
                    @Html.HiddenFor(model => model.ID, new { })
                    @Html.HiddenFor(model => model.ConsignorId, new { })
                    @Html.HiddenFor(model => model.ConsignorName, new { })
                    @Html.HiddenFor(model => model.ConsigneeId, new { })
                    @Html.HiddenFor(model => model.ConsigneeName, new { })
                    @Html.HiddenFor(model => model.PickupCashHeadId, new { })
                    @Html.HiddenFor(model => model.DebitAccountId, new { })
                    @Html.HiddenFor(model => model.DebitAccountName, new { })
                    @Html.HiddenFor(model => model.CurrencyId, new { @id = "DefaultCurrencyID" })

                    @*@Html.HiddenFor(model => model.InScanID, new { })*@
                    <label class="headinglabel required">Transaction Date</label>
                    @Html.TextBoxFor(model => model.EntryDate, new { @class = "form-control text-right" })
                    @Html.ValidationMessageFor(model => model.EntryDate)
                </div>
                <div class="col-md-4 hidden">
                    <label class="headinglabel required">Entered By</label>
                    @Html.DropDownListFor(model => model.EmployeeID, new SelectList(@ViewBag.employee, "EmployeeID", "EmployeeName"), "Select", new { @class = "form-control" })
                </div>
                <div class="col-md-3">
                    <label class="headinglabel required">Consignment Note</label>
                    @Html.TextBoxFor(model => model.ConsignmentNo, new { @class = "form-control", @autocomplete = false })
                    @Html.HiddenFor(model => model.InScanID)
                </div>
                <div class="col-md-1">
                    <button class="btn btn-primary" type="button" id="btnsearch" style="margin-top:30px;width: 60px!Important;min-width: 50px!important;"><i class="fa fa-refresh" aria-hidden="true"></i></button>
                </div>
                  <div class="col-md-5 btn-right">
                            <input type="submit" value="Save" class="btn btn-primary btnwidth" data-toggle="tooltip" title="Click here" id="btnsave" />

                            <a href='@Url.Action("Index", "RevenueUpdate")' class="btn btn-danger btnwidth" data-toggle="tooltip" data-placement="right" title="Click here" style="margin-left:5px;">Cancel</a>

                        </div>
            </div>

            <div class="col-md-12 sub_title_block">
                <h4 style="color:#0094ff">Add Revenue Details</h4>
                <hr style="margin-bottom:0px" />
            </div>
            <div class="row no-margin">
                <div class="col-md-12">
                    <span id="spanerr" style="color:red"></span>
                </div>
            </div>
            <div class="row no-margin">
                <div class="col-md-2-5">
                    <label class="headinglabel required">Payment Type</label>
                    @Html.DropDownList("PaymentType", new SelectList(ViewBag.PaymentType, "ID", "PaymentModeText", 0), "Select", new { @class = "form-control", @id = "PaymentType" })
                </div>
                <div class="col-md-2-5">
                    <label class="headinglabel required">Invoice To</label>
                    @Html.DropDownList("InvoiceTo", new SelectList(ViewBag.InvoiceTo, "TypeName", "TypeName"), "Select", new { @class = "form-control", @id = "InvoiceTo" })
                </div>
                <div class="col-md-2-5">
                    <label class="headinglabel required">Currency</label>
                    @Html.DropDownList("CurrencyID", new SelectList(ViewBag.Currency, "CurrencyID", "CurrencyCode", 0), "Select", new { @class = "form-control", @id = "CurrencyId" })
                    @Html.HiddenFor(model => model.ExchangeRate)
                </div>

                 <div class="col-md-2-5">
                    <label class="headinglabel">Receivable Account(Dr.)</label>
                    <input type="text" id="txtDebitHead" class="form-control" autocomplete="off" />
                    <input type="hidden" id="txtDebitHeadId" class="form-control" autocomplete="off" />
                </div>
                <div class="col-md-2-5">
                    <label class="headinglabel">Revenue Account (Cr.)</label>
                    <input type="text" id="txtCreditHead" class="form-control" autocomplete="off" />
                    <input type="hidden" id="txtCreditHeadId" class="form-control" autocomplete="off" />
                </div>

                <div class="col-md-3-5">
                    <label class="headinglabel">Customer</label>
                    <input type="text" id="txtCustomer" class="form-control" autocomplete="off" />
                    <input type="hidden" id="txtCustomerId" class="form-control" autocomplete="off" />
                </div>
               
                <div class="col-md-2-5">
                    <label class="headinglabel label1">Revenue Head</label>
                    <input type="text" id="txtRevenueCost" class="form-control" autocomplete="off" />
                    <input type="hidden" id="txtRevenueCostId" class="form-control" autocomplete="off" />
                </div>
                <div class="col-md-1">
                    <label class="headinglabel">Amount</label>
                    <input type="text" id="txtAmount" class="form-control text-right" autocomplete="off" onkeypress="return isNumberKey(event)" onchange="setNumberDecimal(this)" />
                </div>
                <div class="col-md-1" style="padding-top:30px">
                    <button type="button" style="height: 35px !important; background: #07a7e3;    color: #fff;border: 0; width:23px!important;line-height:35px!important;vertical-align: middle;font-size: 23px!Important;" title="Clear Data" onclick="ClearData()">-</button>&nbsp;&nbsp;
                    <button type="button" style="height: 35px !important;vertical-align: middle; background: #07a7e3; width:23px!important;line-height:35px!important;    color: #fff;border: 0;font-size: 23px!Important;" index="1" id="btnAdd" title="Add New" class="addmore">+</button>
                </div>
                <div class="col-md-2">
                    <label class="headinglabel">Total Amount</label>
                    <input type="text" class="form-control text-right" readonly id="txtTotalAmount" value="0" />
                </div>
            </div>
            <br />
            <div class="row no-margin" style="padding-top:10px">
                <table class="table table-bordered table-responsive">
                    <thead>
                    <tr>
                        <th style="width:3%">Payment Mode</th>
                        <th style="width:5%">Invoice To</th>
                        <th style="width:1%">Currency</th>
                        <th style="width:2%">Ex.Rate</th>
                        <th style="width:10%">Revenue Head</th>
                        <th style="width:6%">Amount</th>
                        <th style="width:5%">Amount(F.C)</th>
                        <th style="width:10%">Customer</th>
                        <th style="width:10%">Receivable Account</th>
                        <th style="width:10%">Revenue Account</th>
                        <th style="width:2%"></th>
                    </tr>
                   </thead>
                    <tbody  id="details">

                    </tbody>

                </table>
            </div>

        </fieldset>
    }
</section>
